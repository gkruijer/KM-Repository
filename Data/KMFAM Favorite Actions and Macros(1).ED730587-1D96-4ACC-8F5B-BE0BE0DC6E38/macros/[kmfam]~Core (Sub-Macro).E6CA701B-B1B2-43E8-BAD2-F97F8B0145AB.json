{
	"CreationDate": 490489224.372939,
	"UID": "E6CA701B-B1B2-43E8-BAD2-F97F8B0145AB",
	"Name": "[kmfam]~Core (Sub-Macro)",
	"Triggers": [],
	"ModificationDate": 658005964.891743,
	"Actions": [
		{
			"MacroActionType": "Comment",
			"Title": "[kmfam]~Core (Sub-Macro) v1.2",
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC5nAwAAKwAAAAEAAABf\n\t\t\t\t\t\t\tAwAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYyNTEzClxjb2Nv\n\t\t\t\t\t\t\tYXRleHRzY2FsaW5nMFxj\n\t\t\t\t\t\t\tb2NvYXBsYXRmb3JtMHtc\n\t\t\t\t\t\t\tZm9udHRibFxmMFxmc3dp\n\t\t\t\t\t\t\tc3NcZmNoYXJzZXQwIEhl\n\t\t\t\t\t\t\tbHZldGljYTt9CntcY29s\n\t\t\t\t\t\t\tb3J0Ymw7XHJlZDI1NVxn\n\t\t\t\t\t\t\tcmVlbjI1NVxibHVlMjU1\n\t\t\t\t\t\t\tO30Ke1wqXGV4cGFuZGVk\n\t\t\t\t\t\t\tY29sb3J0Ymw7O30KXHBh\n\t\t\t\t\t\t\tcmRcdHg1NjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxwYXJk\n\t\t\t\t\t\t\taXJuYXR1cmFsXHBhcnRp\n\t\t\t\t\t\t\tZ2h0ZW5mYWN0b3IwCgpc\n\t\t\t\t\t\t\tZjBcZnMyNCBcY2YwIE5h\n\t\t\t\t\t\t\tbWU6IFtrbWZhbV1+Q29y\n\t\t\t\t\t\t\tZSAoU3ViLU1hY3JvKVwK\n\t\t\t\t\t\t\tVmVyc2lvbjogMS4yXApV\n\t\t\t\t\t\t\tcGRhdGVkOiAyMDIxLzA3\n\t\t\t\t\t\t\tLzA0IDA5OjUzIFBUXApC\n\t\t\t\t\t\t\teTogRGFuIFRob21hc1wK\n\t\t\t\t\t\t\tXApOT1RFOiBUaGlzIGlz\n\t\t\t\t\t\t\tIGEgU3ViLU1hY3JvLCB3\n\t\t\t\t\t\t\taGljaCBnZXRzIHJ1biBi\n\t\t\t\t\t\t\teSBvdGhlciBtYWNyb3Mu\n\t\t\t\t\t\t\tIEl0IGlzIG5vdCBtZWFu\n\t\t\t\t\t\t\tdCB0byBiZSBydW4gYnkg\n\t\t\t\t\t\t\taXRzZWxmLlwKXApQVVJQ\n\t\t\t\t\t\t\tT1NFOlwKXApDYWxscyB0\n\t\t\t\t\t\t\taGUgQ29yZSBzY3JpcHQg\n\t\t\t\t\t\t\tZm9yIHZhcmlvdXMgYWN0\n\t\t\t\t\t\t\taW9ucy5cClwKVkVSU0lP\n\t\t\t\t\t\t\tTiBISVNUT1JZOlwKMS4y\n\t\t\t\t\t\t\tIC0gRml4IGZvciBCaWcg\n\t\t\t\t\t\t\tU3VyLiBXaGVuIGNhbGxl\n\t\t\t\t\t\t\tZCB3aXRoIHRoZSAiZ2V0\n\t\t\t\t\t\t\tTmV3QWN0aW9uRnJvbUNs\n\t\t\t\t\t\t\taXBib2FyZCIgcGFyYW1l\n\t\t\t\t\t\t\tdGVyLCB3ZSBub3cgZXhw\n\t\t\t\t\t\t\tZWN0IHRoZSBjbGlwYm9h\n\t\t\t\t\t\t\tcmQgdG8gY29udGFpbiB0\n\t\t\t\t\t\t\taGUgS00gWE1MLlwKMS4x\n\t\t\t\t\t\t\tIC0gQWRhcHRpdmUgT3Jk\n\t\t\t\t\t\t\tZXJpbmcsIEJldHRlciBp\n\t\t\t\t\t\t\tbWFnZS1oYW5kbGluZyBm\n\t\t\t\t\t\t\tb3IgUmV0aW5hIGRpc3Bs\n\t\t\t\t\t\t\tYXlzLCBVSSBpbXByb3Zl\n\t\t\t\t\t\t\tbWVudHMuXAoxLjAuMSAt\n\t\t\t\t\t\t\tIFdvcmthcm91bmRzIGZv\n\t\t\t\t\t\t\tciBZb3NlbWl0ZSBidWdz\n\t\t\t\t\t\t\tLlwKMS4wIC0gSW5pdGlh\n\t\t\t\t\t\t\tbCB2ZXJzaW9uLn0BAAAA\n\t\t\t\t\t\t\tIwAAAAEAAAAHAAAAVFhU\n\t\t\t\t\t\t\tLnJ0ZhAAAABO6OFgtgEA\n\t\t\t\t\t\t\tAAAAAAAAAAAA\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t",
			"ActionColor": "Yellow",
			"ActionUID": 3168
		},
		{
			"MacroActionType": "Comment",
			"Title": "License Agreement / Disclaimer",
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC4jBAAAKwAAAAEAAAAb\n\t\t\t\t\t\t\tBAAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYyNTEzClxjb2Nv\n\t\t\t\t\t\t\tYXRleHRzY2FsaW5nMFxj\n\t\t\t\t\t\t\tb2NvYXBsYXRmb3JtMHtc\n\t\t\t\t\t\t\tZm9udHRibFxmMFxmc3dp\n\t\t\t\t\t\t\tc3NcZmNoYXJzZXQwIEhl\n\t\t\t\t\t\t\tbHZldGljYTt9CntcY29s\n\t\t\t\t\t\t\tb3J0Ymw7XHJlZDI1NVxn\n\t\t\t\t\t\t\tcmVlbjI1NVxibHVlMjU1\n\t\t\t\t\t\t\tO30Ke1wqXGV4cGFuZGVk\n\t\t\t\t\t\t\tY29sb3J0Ymw7O30KXHBh\n\t\t\t\t\t\t\tcmRcdHg1NjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxwYXJk\n\t\t\t\t\t\t\taXJuYXR1cmFsXHBhcnRp\n\t\t\t\t\t\t\tZ2h0ZW5mYWN0b3IwCgpc\n\t\t\t\t\t\t\tZjBcZnMyNCBcY2YwIENv\n\t\t\t\t\t\t\tcHlyaWdodCAoYykgMjAx\n\t\t\t\t\t\t\tNiwgMjAyMSBEYW5pZWwg\n\t\t\t\t\t\t\tVGhvbWFzXApcClBlcm1p\n\t\t\t\t\t\t\tc3Npb24gdG8gdXNlLCBj\n\t\t\t\t\t\t\tb3B5LCBtb2RpZnksIGFu\n\t\t\t\t\t\t\tZC9vciBkaXN0cmlidXRl\n\t\t\t\t\t\t\tIHRoaXMgc29mdHdhcmUg\n\t\t\t\t\t\t\tZm9yIGFueSBwdXJwb3Nl\n\t\t\t\t\t\t\tIHdpdGggb3Igd2l0aG91\n\t\t\t\t\t\t\tdCBmZWUgaXMgaGVyZWJ5\n\t\t\t\t\t\t\tIGdyYW50ZWQsIHByb3Zp\n\t\t\t\t\t\t\tZGVkIHRoYXQgdGhlIGFi\n\t\t\t\t\t\t\tb3ZlIGNvcHlyaWdodCBu\n\t\t\t\t\t\t\tb3RpY2UgYW5kIHRoaXMg\n\t\t\t\t\t\t\tcGVybWlzc2lvbiBub3Rp\n\t\t\t\t\t\t\tY2UgYXBwZWFyIGluIGFs\n\t\t\t\t\t\t\tbCBjb3BpZXMuXApcClRI\n\t\t\t\t\t\t\tRSBTT0ZUV0FSRSBJUyBQ\n\t\t\t\t\t\t\tUk9WSURFRCAiQVMgSVMi\n\t\t\t\t\t\t\tIEFORCBUSEUgQVVUSE9S\n\t\t\t\t\t\t\tIERJU0NMQUlNUyBBTEwg\n\t\t\t\t\t\t\tV0FSUkFOVElFUyBXSVRI\n\t\t\t\t\t\t\tIFJFR0FSRCBUTyBUSElT\n\t\t\t\t\t\t\tIFNPRlRXQVJFIElOQ0xV\n\t\t\t\t\t\t\tRElORyBBTEwgSU1QTElF\n\t\t\t\t\t\t\tRCBXQVJSQU5USUVTIE9G\n\t\t\t\t\t\t\tIE1FUkNIQU5UQUJJTElU\n\t\t\t\t\t\t\tWSBBTkQgRklUTkVTUy4g\n\t\t\t\t\t\t\tSU4gTk8gRVZFTlQgU0hB\n\t\t\t\t\t\t\tTEwgVEhFIEFVVEhPUiBC\n\t\t\t\t\t\t\tRSBMSUFCTEUgRk9SIEFO\n\t\t\t\t\t\t\tWSBTUEVDSUFMLCBESVJF\n\t\t\t\t\t\t\tQ1QsIElORElSRUNULCBP\n\t\t\t\t\t\t\tUiBDT05TRVFVRU5USUFM\n\t\t\t\t\t\t\tIERBTUFHRVMgT1IgQU5Z\n\t\t\t\t\t\t\tIERBTUFHRVMgV0hBVFNP\n\t\t\t\t\t\t\tRVZFUiBSRVNVTFRJTkcg\n\t\t\t\t\t\t\tRlJPTSBMT1NTIE9GIFVT\n\t\t\t\t\t\t\tRSwgREFUQSBPUiBQUk9G\n\t\t\t\t\t\t\tSVRTLCBXSEVUSEVSIElO\n\t\t\t\t\t\t\tIEFOIEFDVElPTiBPRiBD\n\t\t\t\t\t\t\tT05UUkFDVCwgTkVHTElH\n\t\t\t\t\t\t\tRU5DRSBPUiBPVEhFUiBU\n\t\t\t\t\t\t\tT1JUSU9VUyBBQ1RJT04s\n\t\t\t\t\t\t\tIEFSSVNJTkcgT1VUIE9G\n\t\t\t\t\t\t\tIE9SIElOIENPTk5FQ1RJ\n\t\t\t\t\t\t\tT04gV0lUSCBUSEUgVVNF\n\t\t\t\t\t\t\tIE9SIFBFUkZPUk1BTkNF\n\t\t\t\t\t\t\tIE9GIFRISVMgU09GVFdB\n\t\t\t\t\t\t\tUkUufQEAAAAjAAAAAQAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmEAAA\n\t\t\t\t\t\t\tAIPn4WC2AQAAAAAAAAAA\n\t\t\t\t\t\t\tAAA=\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t",
			"ActionColor": "Yellow",
			"ActionUID": 3169
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "Assert parameter was supplied",
			"ActionUID": 3170,
			"IsDisclosed": false,
			"ActionColor": "Magenta",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "All",
				"ConditionList": [
					{
						"ConditionType": "Text",
						"TextValue": "",
						"Text": "%TriggerValue%",
						"TextConditionType": "IsEmpty"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "PromptForUserInput",
					"Title": "%ExecutingThisMacro%",
					"ActionName": "Notify the error",
					"Prompt": "Parameter required.",
					"ActionUID": 3171,
					"IsDisclosed": false,
					"TimeOutAbortsMacro": true,
					"Buttons": [
						{
							"Button": "OK",
							"Cancel": true
						}
					],
					"Variables": []
				},
				{
					"MacroActionType": "Cancel",
					"IsDisclosed": false,
					"Action": "CancelThisMacro",
					"ActionUID": 3172
				}
			]
		},
		{
			"MacroActionType": "SetVariableToText",
			"IsDisclosed": false,
			"Variable": "kmfamRequest",
			"Text": "%TriggerValue%",
			"ActionUID": 3173
		},
		{
			"MacroActionType": "SetVariableToText",
			"IsDisclosed": false,
			"Variable": "kmfamLog",
			"Text": "",
			"ActionUID": 3174
		},
		{
			"MacroActionType": "ExecuteJavaScriptForAutomation",
			"ActionName": "Run our Core script, to process the Request that was passed in TriggerValue",
			"Text": "",
			"TrimResults": true,
			"StopOnFailure": false,
			"Variable": "kmfamcResult",
			"IncludeStdErr": true,
			"ActionUID": 3175,
			"UseText": false,
			"TrimResultsNew": true,
			"ActionColor": "Aqua",
			"TimeOutAbortsMacro": true,
			"Path": "%Variable%DND__kmfamResourcesFolderPath%/lib/Favorite Actions Core.scpt",
			"DisplayKind": "Variable",
			"IsDisclosed": false,
			"IsActive": false,
			"HonourFailureSettings": true,
			"NotifyOnFailure": false
		},
		{
			"MacroActionType": "ExecuteJavaScriptForAutomation",
			"TrimResults": true,
			"StopOnFailure": false,
			"Variable": "kmfamcResult",
			"IncludeStdErr": false,
			"ActionUID": 3176,
			"UseText": true,
			"TrimResultsNew": true,
			"TimeOutAbortsMacro": true,
			"Path": "",
			"DisplayKind": "Variable",
			"IsDisclosed": false,
			"HonourFailureSettings": true,
			"Text": "(function() {\n\t'use strict';\n\tObjC.import('AppKit');\n\n\t// ### MODULE=Polyfills.js\n\tif (!String.prototype.endsWith) {\n\t\tString.prototype.endsWith = function(searchString, position) {\n\t\t\tvar subjectString = this.toString();\n\t\t\tif (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n\t\t\t\tposition = subjectString.length;\n\t\t\t}\n\t\t\tposition -= searchString.length;\n\t\t\tvar lastIndex = subjectString.indexOf(searchString, position);\n\t\t\treturn lastIndex !== -1 && lastIndex === position;\n\t\t};\n\t}\n\n\tif (!String.prototype.includes) {\n\t\tString.prototype.includes = function(search, start) {\n\t\t\tif (typeof start !== 'number') {\n\t\t\t\tstart = 0;\n\t\t\t}\n\n\t\t\tif (start + search.length > this.length) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn this.indexOf(search, start) !== -1;\n\t\t\t}\n\t\t};\n\t}\n\n\tif (!String.prototype.startsWith) {\n\t\tString.prototype.startsWith = function(searchString, position) {\n\t\t\tposition = position || 0;\n\t\t\treturn this.substr(position, searchString.length) === searchString;\n\t\t};\n\t}\n\t// ### END MODULE\n\n\tfunction compare(a, b) {\n\t\treturn a < b ? -1 : a > b ? 1 : 0;\n\t}\n\n\tvar PathNameUtils = (function() {\n\t\treturn {\n\t\t\taddTrailingSlash: function(path) {\n\t\t\t\treturn path.endsWith(\"/\") ? path : path + \"/\";\n\t\t\t},\n\n\t\t\tappendBeforeFileExtension: function(path, value) {\n\t\t\t\tvar i = this.indexOfFileExtension(path);\n\t\t\t\treturn i > 0 ?\n\t\t\t\t\tpath.substring(0, i) + value + path.substring(i) :\n\t\t\t\t\tpath + value;\n\t\t\t},\n\n\t\t\tcombinePathComponents: function(path1, path2) {\n\t\t\t\tif (path1.endsWith(\"/\"))\n\t\t\t\t\tpath1 = path1.substring(0, path1.length - 1);\n\t\t\t\tif (path2.startsWith(\"/\"))\n\t\t\t\t\tpath2 = path2.substring(1);\n\t\t\t\treturn path1 + \"/\" + path2;\n\t\t\t},\n\n\t\t\texpandLeadingPathTilde: function(path) {\n\t\t\t\treturn path.startsWith(\"~\") ?\n\t\t\t\t\tObjC.unwrap($(path).stringByExpandingTildeInPath) :\n\t\t\t\t\tpath;\n\t\t\t},\n\n\t\t\tgetFileExtension: function(path) {\n\t\t\t\tvar i = this.indexOfFileExtension(path);\n\t\t\t\treturn (i <= 0) ? \"\" : path.substring(i);\n\t\t\t},\n\n\t\t\tgetHomeFolder: function(addTrailingSlash) {\n\t\t\t\tvar result = this.expandLeadingPathTilde(\"~\");\n\t\t\t\tif (addTrailingSlash)\n\t\t\t\t\tresult = this.addTrailingSlash(result);\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetLastPathComponent: function(path) {\n\t\t\t\tpath = this.removeTrailingSlash(path);\n\t\t\t\tvar i = path.lastIndexOf(\"/\");\n\t\t\t\treturn i < 0 ? path : path.substring(i + 1);\n\t\t\t},\n\n\t\t\tgetStandardizedPath: function(path, keepTrailingSlash) {\n\t\t\t\tvar hadTrailingSlash = path.endsWith(\"/\");\n\t\t\t\tvar result = $(path).stringByStandardizingPath.js;\n\t\t\t\tif (keepTrailingSlash && hadTrailingSlash && !result.endsWith(\"/\"))\n\t\t\t\t\tresult = result + \"/\";\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tindexOfFileExtension: function(path) {\n\t\t\t\tvar i = path.lastIndexOf(\".\");\n\t\t\t\treturn (i <= 0 || path[i - 1] === \"/\") ? -1 : i;\n\t\t\t},\n\n\t\t\tremoveLastPathComponent: function(path) {\n\t\t\t\tpath = this.removeTrailingSlash(path);\n\t\t\t\tvar last = this.getLastPathComponent(path);\n\t\t\t\tif (!last)\n\t\t\t\t\treturn path;\n\t\t\t\treturn path.substring(0, path.length - last.length);\n\t\t\t},\n\n\t\t\tremoveTrailingSlash: function(path) {\n\t\t\t\tif (path.endsWith(\"/\"))\n\t\t\t\t\treturn path.substring(0, path.length - 1);\n\t\t\t\treturn path;\n\t\t\t},\n\n\t\t\treplaceFileExtension: function(path, newExt) {\n\t\t\t\tif (!newExt) {\n\t\t\t\t\tnewExt = \"\";\n\t\t\t\t} else if (!newExt.startsWith(\".\")) {\n\t\t\t\t\tnewExt = \".\" + newExt;\n\t\t\t\t}\n\t\t\t\tvar i = this.indexOfFileExtension(path);\n\t\t\t\treturn (i <= 0) ? path + newExt : path.substring(0, i) + newExt;\n\t\t\t}\n\t\t};\n\t})();\n\n\tvar FileUtils = (function() {\n\t\treturn {\n\t\t\tchooseFile: function(prompt, type) {\n\t\t\t\ttry {\n\t\t\t\t\tvar options = {};\n\t\t\t\t\tif (prompt) options.withPrompt = prompt;\n\t\t\t\t\tif (type) options.ofType = type;\n\t\t\t\t\treturn this.getCurrentApp().chooseFile(options).toString();\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcopyFile: function(fromPath, toPath, throwIfFail) {\n\t\t\t\tvar error;\n\t\t\t\tvar result = ObjC.unwrap(\n\t\t\t\t\t$.NSFileManager.defaultManager\n\t\t\t\t\t.copyItemAtPathToPathError(\n\t\t\t\t\t\t$(fromPath).stringByStandardizingPath,\n\t\t\t\t\t\t$(toPath).stringByStandardizingPath,\n\t\t\t\t\t\terror\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tif (error || (!result && throwIfFail))\n\t\t\t\t\tthrow Error('Could not copy \"' + fromPath + '\" to \"' + toPath + '\"');\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tcreateFolder: function(path, createIntermediateDirectories) {\n\t\t\t\tvar error = $();\n\t\t\t\tif (!$.NSFileManager.defaultManager\n\t\t\t\t\t.createDirectoryAtPathWithIntermediateDirectoriesAttributesError(\n\t\t\t\t\t\t$(path).stringByStandardizingPath,\n\t\t\t\t\t\tcreateIntermediateDirectories,\n\t\t\t\t\t\t$(), error)) {\n\t\t\t\t\tthrow Error(\"Could not create folder '\" + path + \"'\");\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcreateFolderIfNeeded: function(path, createIntermediateDirectories) {\n\t\t\t\tif (!this.folderExists(path))\n\t\t\t\t\tthis.createFolder(path, createIntermediateDirectories);\n\t\t\t},\n\n\t\t\tfileExists: function(path) {\n\t\t\t\tvar result = this.getFileOrFolderExists(path);\n\t\t\t\treturn result.exists && result.isFile;\n\t\t\t},\n\n\t\t\tfolderExists: function(path) {\n\t\t\t\tvar result = this.getFileOrFolderExists(path);\n\t\t\t\treturn result.exists && !result.isFile;\n\t\t\t},\n\n\t\t\tgetCurrentApp: function() {\n\t\t\t\tvar app = Application.currentApplication();\n\t\t\t\tapp.includeStandardAdditions = true;\n\t\t\t\treturn app;\n\t\t\t},\n\n\t\t\tgetDirectoryContents: function(strPath, includeSubfolders, includeDotFiles) {\n\t\t\t\tvar method = includeSubfolders ?\n\t\t\t\t\t\"subpathsOfDirectoryAtPathError\" :\n\t\t\t\t\t\"contentsOfDirectoryAtPathError\";\n\t\t\t\tvar error;\n\t\t\t\tvar contents =\n\t\t\t\t\tObjC.deepUnwrap(\n\t\t\t\t\t\t$.NSFileManager.defaultManager[method](\n\t\t\t\t\t\t\t$(strPath)\n\t\t\t\t\t\t\t.stringByStandardizingPath, error\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\tif (error)\n\t\t\t\t\tthrow Error('Could not get contents of \"' + strPath + '\"');\n\t\t\t\tif (!includeDotFiles) {\n\t\t\t\t\tcontents = contents.filter(function(item) {\n\t\t\t\t\t\treturn !item.startsWith(\".\") && !item.includes(\"/.\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn contents;\n\t\t\t},\n\n\t\t\tgetFileOrFolderExists: function(path) {\n\t\t\t\tvar isDirectory = Ref();\n\t\t\t\tvar exists = $.NSFileManager.defaultManager\n\t\t\t\t\t.fileExistsAtPathIsDirectory(path, isDirectory);\n\t\t\t\treturn {\n\t\t\t\t\texists: exists,\n\t\t\t\t\tisFile: !isDirectory[0]\n\t\t\t\t};\n\t\t\t},\n\n\t\t\treadTextFile: function(strPath) {\n\t\t\t\tvar error;\n\t\t\t\tvar str = ObjC.unwrap(\n\t\t\t\t\t$.NSString.stringWithContentsOfFileEncodingError(\n\t\t\t\t\t\t$(strPath).stringByStandardizingPath,\n\t\t\t\t\t\t$.NSUTF8StringEncoding,\n\t\t\t\t\t\terror\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tif (error)\n\t\t\t\t\tthrow Error('Could not read file \"' + strPath + '\"');\n\t\t\t\treturn str;\n\t\t\t},\n\n\t\t\ttrashFile: function(path, throwIfFail) {\n\t\t\t\treturn this.trashFileOrFolder(path, true, throwIfFail);\n\t\t\t},\n\n\t\t\ttrashFileOrFolder: function(path, isFile, throwIfFail) {\n\t\t\t\tvar fileOrFolderText = isFile ? \"file\" : \"folder\";\n\t\t\t\tif (!path)\n\t\t\t\t\tthrow Error(\"Path is required in trashFileOrFolder\");\n\t\t\t\tif (isFile === undefined)\n\t\t\t\t\tthrow Error(\"isFile is required in trashFileOrFolder\");\n\n\t\t\t\tif (!isFile && path.endsWith(\"/\"))\n\t\t\t\t\tpath = path.substring(0, path.length - 1);\n\n\t\t\t\tvar exists = this.getFileOrFolderExists(path);\n\t\t\t\tif (!exists.exists)\n\t\t\t\t\treturn false;\n\t\t\t\tif (exists.isFile !== isFile) {\n\t\t\t\t\tif (throwIfFail)\n\t\t\t\t\t\tthrow Error(\"Path to be deleted '\" + path + \"' is not a \" +\n\t\t\t\t\t\t\tfileOrFolderText);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar fileURL = $.NSURL.fileURLWithPathIsDirectory($(path), !isFile);\n\t\t\t\tvar error;\n\t\t\t\tvar result = ObjC.unwrap(\n\t\t\t\t\t$.NSFileManager.defaultManager\n\t\t\t\t\t.trashItemAtURLResultingItemURLError(\n\t\t\t\t\t\tfileURL,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\terror\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tif (error || (!result && throwIfFail))\n\t\t\t\t\tthrow Error(\"Could not trash \" + fileOrFolderText + \"'\" + path + \"'\");\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\ttrashFolder: function(path, throwIfFail) {\n\t\t\t\treturn this.trashFileOrFolder(path, false, throwIfFail);\n\t\t\t},\n\n\t\t\twriteTextFile: function(strContent, strPath) {\n\t\t\t\tvar error;\n\t\t\t\tvar str = $.NSString.alloc.initWithUTF8String(strContent);\n\t\t\t\tstr.writeToFileAtomicallyEncodingError(\n\t\t\t\t\t$(strPath).stringByStandardizingPath,\n\t\t\t\t\ttrue,\n\t\t\t\t\t$.NSUTF8StringEncoding,\n\t\t\t\t\tnull);\n\t\t\t\tif (error)\n\t\t\t\t\tthrow Error('Could not write file \"' + strPath + '\"');\n\t\t\t},\n\n\t\t};\n\t})();\n\n\tvar ClipboardUtils = (function() {\n\t\treturn {\n\t\t\tclearContents: function() {\n\t\t\t\t/*jshint -W030 */\n\t\t\t\t$.NSPasteboard.generalPasteboard.clearContents;\n\t\t\t\t/*jshint +W030 */\n\t\t\t},\n\n\t\t\tclipboardContainsType: function(type) {\n\t\t\t\treturn this.getClipboardTypes().indexOf(type) >= 0;\n\t\t\t},\n\n\t\t\tgetClipboardString: function(throwIfNotFound) {\n\t\t\t\treturn this.getClipboardStringForType(\n\t\t\t\t\tthis.getPlainTextClipboardType(), throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetClipboardStringForType: function(type, throwIfNotFound) {\n\t\t\t\tif (this.clipboardContainsType(type))\n\t\t\t\t\treturn ObjC.unwrap(\n\t\t\t\t\t\t$.NSPasteboard.generalPasteboard\n\t\t\t\t\t\t.stringForType(type));\n\t\t\t\tif (throwIfNotFound)\n\t\t\t\t\tthrow Error(\"No clipboard data for specified type\");\n\t\t\t\treturn \"\";\n\t\t\t},\n\n\t\t\tgetClipboardTypes: function() {\n\t\t\t\tvar items = $.NSPasteboard.generalPasteboard.pasteboardItems;\n\t\t\t\tif (items.count === 0)\n\t\t\t\t\treturn [];\n\n\t\t\t\treturn ObjC.deepUnwrap(items.js[0].types);\n\t\t\t},\n\n\t\t\tgetPlainTextClipboardType: function() {\n\t\t\t\treturn $.NSPasteboardTypeString.js;\n\t\t\t},\n\n\t\t\tsetClipboardString: function(str) {\n\t\t\t\tthis.setClipboardStringForType(str, this.getPlainTextClipboardType());\n\t\t\t},\n\n\t\t\tsetClipboardStringForType: function(str, type) {\n\t\t\t\tvar clipboard = $.NSPasteboard.generalPasteboard;\n\t\t\t\t/*jshint -W030 */\n\t\t\t\tclipboard.clearContents;\n\t\t\t\t/*jshint +W030 */\n\t\t\t\tclipboard.setStringForType($(str), $(type));\n\t\t\t}\n\t\t};\n\t})();\n\n\tvar PlistUtils = (function() {\n\t\tfunction readTextFile(strPath) {\n\t\t\tvar error;\n\t\t\tvar str = ObjC.unwrap(\n\t\t\t\t$.NSString.stringWithContentsOfFileEncodingError(\n\t\t\t\t\t$(strPath).stringByStandardizingPath,\n\t\t\t\t\t$.NSUTF8StringEncoding,\n\t\t\t\t\terror\n\t\t\t\t)\n\t\t\t);\n\t\t\tif (error)\n\t\t\t\tthrow Error('Could not read file \"' + strPath + '\"');\n\t\t\treturn str;\n\t\t}\n\n\t\treturn {\n\t\t\tconvertPlistPartToString: function(plistPart) {\n\t\t\t\tvar data = $.NSPropertyListSerialization.dataWithPropertyListFormatOptionsError(\n\t\t\t\t\t$(plistPart), $.NSPropertyListXMLFormat_v1_0, 0, null);\n\t\t\t\tvar nsstring = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding);\n\t\t\t\treturn $(nsstring).js;\n\t\t\t},\n\n\t\t\tconvertStringToPlist: function(str) {\n\t\t\t\treturn ObjC.deepUnwrap(\n\t\t\t\t\t$.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(\n\t\t\t\t\t\t$(str).dataUsingEncoding($.NSUTF8StringEncoding), 0, 0, null));\n\t\t\t},\n\n\t\t\treadPlistArrayTextFile: function(strPath) {\n\t\t\t\t// var str = readTextFile(strPath);\n\t\t\t\t// return this.convertStringToPlist(str);\n\t\t\t\tvar strFullPath = $(strPath).stringByStandardizingPath;\n\t\t\t\treturn ObjC.deepUnwrap($.NSArray.arrayWithContentsOfFile(strFullPath));\n\t\t\t},\n\n\t\t\treadPlistBinaryFile: function(path) {\n\t\t\t\tvar data = $.NSData.dataWithContentsOfFile(path);\n\t\t\t\treturn ObjC.deepUnwrap(\n\t\t\t\t\t$.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(\n\t\t\t\t\t\tdata, $.NSPropertyListBinaryFormat_v1_0, 0, null));\n\t\t\t},\n\n\t\t\treadPlistDictionaryTextFile: function(strPath) {\n\t\t\t\tvar strFullPath = $(strPath).stringByStandardizingPath;\n\t\t\t\treturn ObjC.deepUnwrap($.NSDictionary.dictionaryWithContentsOfFile(strFullPath));\n\t\t\t},\n\n\t\t\twritePlistTextFile: function(plist, strPath) {\n\t\t\t\tvar str = this.convertPlistPartToString(plist);\n\t\t\t\t$(str).writeToFileAtomically($(strPath).stringByStandardizingPath, true);\n\t\t\t}\n\t\t};\n\t})();\n\n\tvar KMEngine = (function() {\n\t\tvar _engineApp;\n\n\t\treturn {\n\t\t\tcalculate: function(str) {\n\t\t\t\treturn this.getEngineApp().calculate(str);\n\t\t\t},\n\n\t\t\tconvertStringToPlist: function(str) {\n\t\t\t\treturn ObjC.deepUnwrap(\n\t\t\t\t\t$.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(\n\t\t\t\t\t\t$(str).dataUsingEncoding($.NSUTF8StringEncoding), 0, 0, null));\n\t\t\t},\n\n\t\t\tdeleteVariable: function(name) {\n\t\t\t\tthis.setVariable(name, \"%Delete%\");\n\t\t\t},\n\n\t\t\tdoScript: function(uuidOrUniqueNameOrScript, parameter) {\n\t\t\t\tif (parameter) {\n\t\t\t\t\tthis.getEngineApp().doScript(uuidOrUniqueNameOrScript, { withParameter: parameter });\n\t\t\t\t} else {\n\t\t\t\t\tthis.getEngineApp().doScript(uuidOrUniqueNameOrScript);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\texecuting: function() {\n\t\t\t\treturn this.getEngineApp().executing();\n\t\t\t},\n\n\t\t\tgetActionsClipboardType: function() {\n\t\t\t\treturn \"com.stairways.keyboardmaestro.actionarray\";\n\t\t\t},\n\n\t\t\tgetAllMacrosSourceFileName: function() {\n\t\t\t\treturn this.getAppSupportFolderName() + \"Keyboard Maestro Macros.plist\";\n\t\t\t},\n\n\t\t\tgetAllVariableNames: function() {\n\t\t\t\treturn this.getEngineApp().variables.name();\n\t\t\t},\n\n\t\t\tgetAppSupportFolderName: function() {\n\t\t\t\tvar app = Application.currentApplication();\n\t\t\t\tapp.includeStandardAdditions = true;\n\t\t\t\treturn app.pathTo('application support', { from: 'user domain' }) +\n\t\t\t\t\t\"/Keyboard Maestro/\";\n\t\t\t},\n\n\t\t\tgetEngineAppName: function() {\n\t\t\t\treturn \"Keyboard Maestro Engine\";\n\t\t\t},\n\n\t\t\tgetEngineApp: function() {\n\t\t\t\tif (!_engineApp)\n\t\t\t\t\t_engineApp = Application(this.getEngineAppName());\n\t\t\t\treturn _engineApp;\n\t\t\t},\n\n\t\t\tgetHotKeys: function(asString, getAll) {\n\t\t\t\treturn this.getEngineApp().gethotkeys({ asstring: !!asString, getall: !!getAll });\n\t\t\t},\n\n\t\t\tgetHotKeysAsPlist: function(getAll) {\n\t\t\t\treturn this.convertStringToPlist(this.getHotKeys(true, getAll));\n\t\t\t},\n\n\t\t\tgetMacrosClipboardType: function() {\n\t\t\t\treturn \"com.stairways.keyboardmaestro.macrosarray\";\n\t\t\t},\n\n\t\t\tgetMacros: function(binary) {\n\t\t\t\treturn this.getEngineApp().getmacros({\n\t\t\t\t\tasstring: !binary\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetMacrosAsPlist: function(binary) {\n\t\t\t\treturn this.convertStringToPlist(this.getMacros(false));\n\t\t\t},\n\n\t\t\tgetNamedClipboardInfo: function() {\n\t\t\t\tvar path = this.getNamedClipboardsSourceFileName();\n\t\t\t\tvar plist = this.readPlistBinaryFile(path);\n\n\t\t\t\tvar result = plist.map(function(item) {\n\t\t\t\t\treturn { name: item.Name, UID: item.UID };\n\t\t\t\t});\n\t\t\t\tresult = result.sort(function(a, b) {\n\t\t\t\t\tif (a.name < b.name) return -1;\n\t\t\t\t\tif (a.name > b.name) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetNamedClipboardsSourceFileName: function() {\n\t\t\t\treturn this.getAppSupportFolderName() +\n\t\t\t\t\t\"Keyboard Maestro Clipboards.plist\";\n\t\t\t},\n\n\t\t\tgetVariable: function(name, required) {\n\t\t\t\tvar result = this.getEngineApp().getvariable(name);\n\t\t\t\tif (!result && required)\n\t\t\t\t\tthrow Error(\"Variable '\" + name + \"' is empty\");\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tplaySound: function(file, soundEffect, volume) {\n\t\t\t\tvar options = {};\n\t\t\t\tif (soundEffect !== undefined)\n\t\t\t\t\toptions.soundeffect = soundEffect;\n\t\t\t\tif (volume !== undefined)\n\t\t\t\t\toptions.volume = volume;\n\t\t\t\tthis.getEngineApp().playSound(file, options);\n\t\t\t},\n\n\t\t\tprocessTokens: function(str) {\n\t\t\t\treturn this.getEngineApp().processTokens(str);\n\t\t\t},\n\n\t\t\treload: function() {\n\t\t\t\tthis.getEngineApp().reload();\n\t\t\t},\n\n\t\t\tsetVariable: function(name, value) {\n\t\t\t\tthis.getEngineApp().setvariable(name, {\n\t\t\t\t\tto: value\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\n\t})();\n\n\tvar KMEditor = (function() {\n\t\tvar _editorAppName = \"Keyboard Maestro\";\n\t\tvar _editorApp;\n\n\t\treturn {\n\t\t\tdeleteMacro: function(uuidOrUniqueName) {\n\t\t\t\tthis.getEditorApp().deletemacro(uuidOrUniqueName);\n\t\t\t},\n\n\t\t\tdeleteMacroGroup: function(uuidOrUniqueName) {\n\t\t\t\tthis.getEditorApp().deletemacrogroup(uuidOrUniqueName);\n\t\t\t},\n\n\t\t\teditMacro: function(uuidOrUniqueName) {\n\t\t\t\tthis.getEditorApp().editmacro(uuidOrUniqueName);\n\t\t\t},\n\n\t\t\tenableMacroOrGroup: function(uuidOrUniqueName, enable) {\n\t\t\t\tthis.getEditorApp().setmacroenable(uuidOrUniqueName, { enable: enable });\n\t\t\t},\n\n\t\t\tgetEditorApp: function() {\n\t\t\t\treturn _editorApp ? _editorApp : _editorApp = Application(_editorAppName);\n\t\t\t},\n\n\t\t\tgetEditorAppName: function() {\n\t\t\t\treturn _editorAppName;\n\t\t\t},\n\n\t\t\tgetSelectedMacrosOrGroups: function() {\n\t\t\t\treturn this.getEditorApp().selectedmacros();\n\t\t\t},\n\n\t\t\timportMacros: function(pathOrPlist) {\n\t\t\t\tthis.getEditorApp().importmacros(pathOrPlist);\n\t\t\t},\n\n\t\t\treload: function() {\n\t\t\t\tthis.getEditorApp().reload();\n\t\t\t},\n\t\t};\n\t})();\n\n\tvar KMLogger = (function(logVariableName) {\n\t\tvar _logVariableName = logVariableName;\n\t\tvar _functionStack = [];\n\t\t_clear();\n\n\t\tfunction _clear() {\n\t\t\tKMEngine.deleteVariable(_logVariableName);\n\t\t\t_functionStack = [];\n\t\t}\n\n\t\tfunction _getIndentPadding(extraIndent) {\n\t\t\tvar level = _functionStack.length;\n\t\t\tif (extraIndent)\n\t\t\t\tlevel += 1;\n\t\t\tif (level <= 0)\n\t\t\t\treturn \"\";\n\n\t\t\t// return new Array(level + 1).join(\"    \");\n\t\t\treturn new Array(level + 1).join(\"\\t\");\n\t\t}\n\n\t\treturn {\n\t\t\tclear: function() {\n\t\t\t\t_clear();\n\t\t\t},\n\n\t\t\texit: function() {\n\t\t\t\ttry {\n\t\t\t\t\tif (_functionStack.length <= 0) {\n\t\t\t\t\t\tthis.log(\"EXIT\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar msg = _functionStack[_functionStack.length-1];\n\t\t\t\t\tthis.log(`EXIT: ${msg}`);\n\t\t\t\t\t_functionStack.pop();\n\t\t\t\t} catch (error) {\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tenter: function(msg) {\n\t\t\t\tif (!msg) msg = \"\";\n\t\t\t\ttry {\n\t\t\t\t\tthis.log(`ENTER: ${msg}`);\n\t\t\t\t\t_functionStack.push(msg);\n\t\t\t\t} catch (error) {\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlog: function(msg, extraIndent) {\n\t\t\t\tif (!msg) msg = \"\";\n\t\t\t\tconst backticks = \"```\";\n\t\t\t\tvar currentLog = KMEngine.getVariable(_logVariableName);\n\t\t\t\tif (currentLog) {\n\t\t\t\t\tvar a = currentLog.split(\"\\n\");\n\t\t\t\t\tif (a[0] === backticks)\n\t\t\t\t\t\ta.splice(0,1);\n\t\t\t\t\tif (a[a.length-1] === backticks)\n\t\t\t\t\t\ta.splice(a.length-1);\n\t\t\t\t\tcurrentLog = a.join(\"\\n\");\n\t\t\t\t}\n\t\t\t\tif (currentLog)\n\t\t\t\t\tcurrentLog += \"\\n\";\n\t\t\t\tvar padding = _getIndentPadding(extraIndent);\n\t\t\t\tmsg = msg.split(\"\\n\").map(s => `${padding}${s}`).join(\"\\n\");\n\t\t\t\tKMEngine.setVariable(_logVariableName, `${backticks}\\n${currentLog}${msg}\\n${backticks}`);\n\t\t\t}\n\t\t};\n\t})(\"kmfamLog\");\n\n\t// ### MODULE FavoriteActionsUsageDataAdapter.js\n\tvar FavoriteActionsUsageDataAdapter = (function(fileUtils, kmEngine) {\n\t\tvar _fileUtils = fileUtils;\n\t\tvar _fileId = \"FavoriteActionsUsage\";\n\t\tvar _usageFilePath = kmEngine.getVariable(\"kmfamPreferencesFolderPath\", true) + \"/FavoriteActionsUsage.json\";\n\n\t\treturn {\n\t\t\tloadDataFromPrefs: function() {\n\t\t\t\tvar text = _fileUtils.readTextFile(_usageFilePath);\n\t\t\t\tif (text) {\n\t\t\t\t\tvar data;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(text);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (data && data.id && data.id === _fileId)\n\t\t\t\t\t\treturn data.data;\n\t\t\t\t}\n\t\t\t\treturn {};\n\t\t\t},\n\n\t\t\tsaveDataToPrefs: function(data) {\n\t\t\t\tvar prefsData = {\n\t\t\t\t\tid: _fileId,\n\t\t\t\t\tversion: \"1.0\",\n\t\t\t\t\tdata: data\n\t\t\t\t};\n\t\t\t\t_fileUtils.writeTextFile(JSON.stringify(prefsData), _usageFilePath);\n\t\t\t}\n\t\t};\n\t});\n\t// ### END MODULE\n\n\t// ### MODULE=FavoriteActionsAdapter.js\n\tvar FavoriteActionsAdapter = (function(actions) {\n\t\tvar _actions = actions;\n\t\tvar _deletedActions = [];\n\n\t\tfunction _getActionByName(actionName, throwIfNotFound) {\n\t\t\tvar name = actionName.toLowerCase();\n\t\t\tvar result = _actions.find(function(action) {\n\t\t\t\treturn action.name.toLowerCase() === name;\n\t\t\t});\n\t\t\tif (!result && throwIfNotFound)\n\t\t\t\tthrow Error(\"Could not find Action named '\" + actionName + \"'\");\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction _getActionByUUID(actionUUID, throwIfNotFound) {\n\t\t\tvar index = _getActionIndexByUUID(actionUUID, throwIfNotFound);\n\t\t\treturn index >= 0 ? _actions[index] : null;\n\t\t}\n\n\t\tfunction _getActionIndexByUUID(actionUUID, throwIfNotFound) {\n\t\t\tvar index = _actions.findIndex(function(action) {\n\t\t\t\treturn action.uuid === actionUUID;\n\t\t\t});\n\t\t\tif (index < 0 && throwIfNotFound)\n\t\t\t\tthrow Error(\"Could not find Action with UUID = '\" + actionUUID + \"'\");\n\t\t\treturn index;\n\t\t}\n\n\t\tfunction _renumberOrderNumbers() {\n\n\t\t\tfunction _compare(a, b) {\n\t\t\t\treturn a < b ? -1 : a > b ? 1 : 0;\n\t\t\t}\n\n\t\t\tfunction _compareActions(a, b) {\n\t\t\t\tif (a.orderNumber) {\n\t\t\t\t\tif (b.orderNumber)\n\t\t\t\t\t\treturn _compare(a.orderNumber, b.orderNumber);\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (b.orderNumber)\n\t\t\t\t\treturn 1;\n\t\t\t\treturn _compare(a.name.toLowerCase(), b.name.toLowerCase());\n\t\t\t}\n\n\t\t\t// _renumberOrderNumbers\n\t\t\tvar sortedActions = _actions.concat().sort(_compareActions);\n\t\t\tfor (var i = 0; i < sortedActions.length; i++) {\n\t\t\t\tvar action = sortedActions[i];\n\t\t\t\tif (action.orderNumber > 0) {\n\t\t\t\t\taction.orderNumber = i + 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // _renumberOrderNumbers\n\n\t\treturn {\n\t\t\tactionNameExists: function(actionName) {\n\t\t\t\tvar result = _getActionByName(actionName);\n\t\t\t\treturn result ? true : false;\n\t\t\t},\n\n\t\t\tdeleteAction: function(action) {\n\t\t\t\tvar index = _actions.indexOf(action);\n\t\t\t\t_actions.splice(index, 1);\n\t\t\t\taction.deleted = true;\n\t\t\t\t_deletedActions.push(action);\n\t\t\t\t_renumberOrderNumbers();\n\t\t\t},\n\n\t\t\tgetActionByName: function(actionName, throwIfNotFound) {\n\t\t\t\treturn _getActionByName(actionName, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetActionByUUID: function(actionUUID, throwIfNotFound) {\n\t\t\t\treturn _getActionByUUID(actionUUID, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetActionIndexByUUID: function(actionUUID, throwIfNotFound) {\n\t\t\t\treturn _getActionIndexByUUID(actionUUID, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetActions: function() {\n\t\t\t\treturn _actions;\n\t\t\t},\n\n\t\t\tgetJsonString: function() {\n\t\t\t\treturn JSON.stringify(_actions.concat(_deletedActions));\n\t\t\t},\n\n\t\t\tgetNextOrderNumber: function() {\n\t\t\t\tvar result = 1;\n\t\t\t\t_actions.forEach(function(action) {\n\t\t\t\t\tif (action.orderNumber >= result)\n\t\t\t\t\t\tresult = action.orderNumber + 1;\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tpinAction: function(actionUUID) {\n\t\t\t\tvar action = _getActionByUUID(actionUUID, true);\n\t\t\t\taction.orderNumber = this.getNextOrderNumber();\n\t\t\t},\n\n\t\t\tpinActionToggle: function(actionUUID) {\n\t\t\t\tvar action = _getActionByUUID(actionUUID, true);\n\t\t\t\tif (action.orderNumber > 0) {\n\t\t\t\t\tthis.unpinAction(actionUUID);\n\t\t\t\t} else {\n\t\t\t\t\tthis.pinAction(actionUUID);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tunpinAction: function(actionUUID) {\n\t\t\t\tvar action = _getActionByUUID(actionUUID, true);\n\t\t\t\tdelete action.orderNumber;\n\t\t\t\t_renumberOrderNumbers();\n\t\t\t}\n\t\t};\n\t});\n\t// ### END MODULE\n\n\t// ### MODULE=FavoriteActionsDataAdapter.js\n\tvar FavoriteActionsDataAdapter = (function(pathNameUtils, fileUtils, kmEngine, preferencesFolderPath, existingActionsAdapter) {\n\t\tvar _pathNameUtils = pathNameUtils;\n\t\tvar _fileUtils = fileUtils;\n\t\tvar _kmEngine = kmEngine;\n\t\tvar _preferencesFolderPath = preferencesFolderPath;\n\t\tvar _dataFilePath = _pathNameUtils.combinePathComponents(_preferencesFolderPath, \"FavoriteActions.json\");\n\t\tvar _imagesPath = _pathNameUtils.combinePathComponents(_preferencesFolderPath, \"Images\");\n\t\tvar _fileId = \"FavoriteActionsData\";\n\t\tvar _data = existingActionsAdapter ? existingActionsAdapter : _loadData();\n\n\t\tfunction _compare(a, b) {\n\t\t\treturn a < b ? -1 : a > b ? 1 : 0;\n\t\t}\n\n\t\tfunction _loadData() {\n\t\t\tif (!_fileUtils.folderExists(_preferencesFolderPath))\n\t\t\t\tthrow Error(\"Preferences Folder does not exist: '\" + _preferencesFolderPath + \"'\");\n\t\t\tif (!_fileUtils.fileExists(_dataFilePath))\n\t\t\t\tthrow Error(\"Preferences Folder appears to be corrupted.\\n\" +\n\t\t\t\t\t\"Preferences Folder: '\" + _preferencesFolderPath +\n\t\t\t\t\t\"'\\nMissing file '\" + _dataFilePath + \"'\");\n\n\t\t\tvar data;\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(_fileUtils.readTextFile(_dataFilePath));\n\t\t\t} catch (e) {\n\t\t\t\tthrow Error(\"Invalid or corrupted Favorite Actions Preferences File '\" + _dataFilePath + \"'\");\n\t\t\t}\n\n\t\t\tif (!data.id || data.id !== _fileId)\n\t\t\t\tthrow Error(\"Invalid or corrupted Favorite Actions Preferences File '\" + _dataFilePath + \"'\");\n\t\t\treturn FavoriteActionsAdapter(data.actions);\n\t\t}\n\n\t\treturn {\n\t\t\taddAction: function(actionUUID, actionName, actionKeywords, actionScript, actionType, actionImageFilePath) {\n\t\t\t\tvar action = {\n\t\t\t\t\tuuid: actionUUID,\n\t\t\t\t\tname: actionName,\n\t\t\t\t\tkeywords: actionKeywords,\n\t\t\t\t\tscript: actionScript,\n\t\t\t\t\ttype: actionType\n\t\t\t\t};\n\t\t\t\t_data.getActions().push(action);\n\t\t\t\tthis.updateActionImage(action, actionImageFilePath);\n\t\t\t},\n\n\t\t\tgetActionsInfo: function(includeIsDisabled) {\n\t\t\t\tvar actions = _data.getActions();\n\t\t\t\tvar result = [];\n\t\t\t\tvar macroActions = null;\n\t\t\t\tfor (var i = 0; i < actions.length; i++) {\n\t\t\t\t\tvar action = actions[i];\n\t\t\t\t\tvar actionInfo = {\n\t\t\t\t\t\tuuid: action.uuid,\n\t\t\t\t\t\tname: action.name,\n\t\t\t\t\t\tkeywords: action.keywords,\n\t\t\t\t\t\ttype: action.type,\n\t\t\t\t\t\timageFileName: action.imageFileName,\n\t\t\t\t\t\torderNumber: action.orderNumber,\n\t\t\t\t\t\tsortName: action.sortName\n\t\t\t\t\t};\n\t\t\t\t\tresult.push(actionInfo);\n\t\t\t\t\tif (includeIsDisabled && action.type === \"macro\") {\n\t\t\t\t\t\tif (!macroActions)\n\t\t\t\t\t\t\tmacroActions = {};\n\t\t\t\t\t\tmacroActions[action.script] = actionInfo;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (macroActions) {\n\t\t\t\t\tvar plist = _kmEngine.getMacrosAsPlist();\n\t\t\t\t\tplist.forEach(function(group) {\n\t\t\t\t\t\tif (!group.macros) return;\n\n\t\t\t\t\t\tgroup.macros.forEach(function(macro) {\n\t\t\t\t\t\t\tvar actionInfo = macroActions[macro.uid];\n\t\t\t\t\t\t\tif (actionInfo) {\n\t\t\t\t\t\t\t\tactionInfo.isDisabled = !macro.active || !macro.enabled;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetData: function() {\n\t\t\t\treturn _data;\n\t\t\t},\n\n\t\t\tgetExistingImageFilePathForUUID: function(actionUUID) {\n\t\t\t\tvar fileNames = _fileUtils.getDirectoryContents(_imagesPath);\n\t\t\t\tvar result;\n\t\t\t\tfileNames.forEach(function(fileName) {\n\t\t\t\t\tif (fileName.startsWith(actionUUID) && fileName.endsWith(\".jpg\")) {\n\t\t\t\t\t\tif (result)\n\t\t\t\t\t\t\tthrow Error(\"Multiple image files exist for UUID '\" + actionUUID + \"'\");\n\t\t\t\t\t\tresult = _pathNameUtils.combinePathComponents(_imagesPath, fileName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetNewImageFilePathForUUID: function(actionUUID) {\n\t\t\t\treturn _pathNameUtils.combinePathComponents(_imagesPath, actionUUID + \" \" + Date.now() + \".jpg\");\n\t\t\t},\n\n\t\t\tgetAlphaSortedActionNames: function() {\n\t\t\t\treturn _data.getActions().map(function(action) {\n\t\t\t\t\treturn action.name;\n\t\t\t\t}).sort(function(a, b) {\n\t\t\t\t\treturn _compare(a.toLowerCase(), b.toLowerCase());\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsave: function() {\n\t\t\t\tvar fileData = {\n\t\t\t\t\tid: _fileId,\n\t\t\t\t\tversion: \"1.0\",\n\t\t\t\t\tactions: _data.getActions()\n\t\t\t\t};\n\t\t\t\t_fileUtils.writeTextFile(JSON.stringify(fileData), _dataFilePath);\n\t\t\t},\n\n\t\t\tupdateActionImage: function(action, actionImageFilePath) {\n\t\t\t\tvar existingImageFilePath = this.getExistingImageFilePathForUUID(action.uuid);\n\t\t\t\tif (existingImageFilePath)\n\t\t\t\t\t_fileUtils.trashFile(existingImageFilePath);\n\n\t\t\t\tif (actionImageFilePath && _fileUtils.fileExists(actionImageFilePath)) {\n\t\t\t\t\tvar destImageFilePath = this.getNewImageFilePathForUUID(action.uuid);\n\t\t\t\t\t_fileUtils.copyFile(actionImageFilePath, destImageFilePath);\n\t\t\t\t\taction.imageFileName = _pathNameUtils.getLastPathComponent(destImageFilePath);\n\t\t\t\t} else {\n\t\t\t\t\taction.imageFileName = null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdateExistingAction: function(actionName, actionKeywords, actionScript, actionType, actionImageFilePath, updateImageOnly) {\n\t\t\t\tvar existingAction = _data.getActionByName(actionName, true);\n\t\t\t\tif (updateImageOnly !== \"1\") {\n\t\t\t\t\tif (actionKeywords)\n\t\t\t\t\t\texistingAction.keywords = actionKeywords;\n\t\t\t\t\texistingAction.script = actionScript;\n\t\t\t\t\texistingAction.type = actionType;\n\t\t\t\t}\n\t\t\t\tthis.updateActionImage(existingAction, actionImageFilePath);\n\t\t\t},\n\n\t\t\tupdateFromActionsInfo: function(updatedActionsInfo, usageInfo) {\n\t\t\t\tvar actions = _data.getActions();\n\t\t\t\tupdatedActionsInfo.forEach(function(updatedInfo) {\n\t\t\t\t\tvar existingAction = _data.getActionByUUID(updatedInfo.uuid, true);\n\n\t\t\t\t\tif (updatedInfo.deleted) {\n\t\t\t\t\t\tthis.updateActionImage(existingAction);\n\t\t\t\t\t\t_data.deleteAction(existingAction);\n\t\t\t\t\t\tif (usageInfo[existingAction.uuid])\n\t\t\t\t\t\t\tdelete usageInfo[existingAction.uuid];\n\t\t\t\t\t} else {\n\t\t\t\t\t\texistingAction.name = updatedInfo.name;\n\n\t\t\t\t\t\tif (updatedInfo.sortName) {\n\t\t\t\t\t\t\texistingAction.sortName = updatedInfo.sortName;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete existingAction.sortName;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updatedInfo.keywords) {\n\t\t\t\t\t\t\texistingAction.keywords = updatedInfo.keywords;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete existingAction.keywords;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updatedInfo.orderNumber) {\n\t\t\t\t\t\t\texistingAction.orderNumber = updatedInfo.orderNumber;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelete existingAction.orderNumber;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t};\n\t});\n\t// ### END MODULE\n\n\t// ### MODULE=OptionsDataAdapter.js\n\tvar OptionsDataAdapter = (function(fileUtils, kmEngine) {\n\t\tvar _fileUtils = fileUtils;\n\t\tvar _fileId = \"Options\";\n\n\t\tvar _usageFilePath = kmEngine.getVariable(\"kmfamPreferencesFolderPath\", true);\n\t\tif (!_usageFilePath.endsWith(\"/\"))\n\t\t\t_usageFilePath += \"/\";\n\t\t_usageFilePath += \"Options.json\";\n\n\t\treturn {\n\t\t\tloadDataFromPrefs: function() {\n\t\t\t\tvar text = _fileUtils.readTextFile(_usageFilePath);\n\t\t\t\tif (text) {\n\t\t\t\t\tvar data;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata = JSON.parse(text);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (data && data.id && data.id === _fileId)\n\t\t\t\t\t\treturn data.data;\n\t\t\t\t}\n\t\t\t\treturn {};\n\t\t\t},\n\n\t\t\tsaveDataToPrefs: function(data) {\n\t\t\t\tvar prefsData = {\n\t\t\t\t\tid: _fileId,\n\t\t\t\t\tversion: \"1.0\",\n\t\t\t\t\tdata: data\n\t\t\t\t};\n\t\t\t\t_fileUtils.writeTextFile(JSON.stringify(prefsData), _usageFilePath);\n\t\t\t},\n\n\t\t\tsaveSortOptionsToPrefs: function(sortOptionsData) {\n\t\t\t\tvar data = this.loadDataFromPrefs();\n\t\t\t\tdata.sortOptions = sortOptionsData;\n\t\t\t\tsaveDataToPrefs(data);\n\t\t\t}\n\t\t};\n\t});\n\t// ### END MODULE\n\n\tfunction applyAction(dataAdapter) {\n\t\tvar usageData = JSON.parse(KMEngine.getVariable(\"kmfamUpdatedUsageData\"));\n\t\tif (usageData) {\n\t\t\tvar adapter = FavoriteActionsUsageDataAdapter(FileUtils, KMEngine);\n\t\t\tadapter.saveDataToPrefs(usageData);\n\t\t}\n\n\t\tvar actionName = KMEngine.getVariable(\"kmfamActionName\", true);\n\t\tvar action = dataAdapter.getData().getActionByName(actionName, true);\n\n\t\tvar response;\n\t\tswitch (action.type) {\n\t\t\tcase \"macro\":\n\t\t\t\tKMEngine.doScript(action.script);\n\t\t\t\tbreak;\n\t\t\tcase \"action\":\n\t\t\t\tClipboardUtils.setClipboardStringForType(action.script, KMEngine.getActionsClipboardType());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow Error(\"Unknown Action Type '\" + action.type + \"'\");\n\t\t}\n\n\t\tKMEngine.setVariable(\"kmfamActionType\", action.type);\n\t\treturn \"OK\";\n\t}\n\n\tfunction getNewActionFromClipboard(dataAdapter) {\n\t\tvar plistString = ClipboardUtils.getClipboardString();\n\t\tif (!plistString)\n\t\t\treturn \"You must select one or more actions first.\";\n\t\tif (!plistString.startsWith(\"<?xml\"))\n\t\t\treturn \"Clipboard string doesn't start with '<?xml'\";\n\n\t\tvar plist = PlistUtils.convertStringToPlist(plistString);\n\t\tvar actionName = plist[0].ActionName;\n\t\tif (!actionName)\n\t\t\tactionName = plist[0].MacroActionType;\n\n\t\treturn returnNewAction(dataAdapter, actionName, plistString, \"action\");\n\t}\n\n\tfunction getNewActionFromSelectedMacro(dataAdapter) {\n\t\tvar macros = KMEditor.getSelectedMacrosOrGroups();\n\t\tif (!macros)\n\t\t\treturn \"You must select one or more macros first.\";\n\t\tvar macroUUID = macros[0];\n\t\tvar macroName = KMEngine.processTokens(\"%MacroNameForUUID%\" + macroUUID + \"%\");\n\t\tif (macroName === \"Not Found\")\n\t\t\treturn \"You must select one or more macros first.\";\n\t\treturn returnNewAction(dataAdapter, macroName, macroUUID, \"macro\");\n\t}\n\n\tfunction getOptions(preferencesFolderPath) {\n\t\tvar optionsDataAdapter = OptionsDataAdapter(FileUtils, KMEngine);\n\t\tvar options = optionsDataAdapter.loadDataFromPrefs();\n\t\tKMEngine.setVariable(\"kmfamOptions\", JSON.stringify(options));\n\t\tKMEngine.setVariable(\"kmfamUpdatedOptions\", \"\");\n\t\treturn \"OK\";\n\t}\n\n\tfunction getSelectData(dataAdapter, preferencesFolderPath) {\n\t\tvar usageDataAdapter = FavoriteActionsUsageDataAdapter(FileUtils, KMEngine);\n\t\tvar selectData = {\n\t\t\tactionsInfo: dataAdapter.getActionsInfo(true),\n\t\t\tusageInfo: usageDataAdapter.loadDataFromPrefs(),\n\t\t};\n\t\tKMEngine.setVariable(\"kmfamSelectData\", JSON.stringify(selectData));\n\t\tKMEngine.setVariable(\"kmfamUpdatedUsageData\", \"\");\n\n\t\treturn getOptions(preferencesFolderPath);\n\t}\n\n\tfunction goToMacro(dataAdapter) {\n\t\tvar actionName = KMEngine.getVariable(\"kmfamActionName\", true);\n\t\tvar action = dataAdapter.getData().getActionByName(actionName, true);\n\t\tif (action.type !== \"macro\")\n\t\t\tthrow Error(\"Action is not a macro, in goToMacro: '\" + actionName + \"'\");\n\t\tKMEditor.editMacro(action.script);\n\t\treturn \"OK\";\n\t}\n\n\tfunction separateWords(str) {\n\t\tstr = str.replace(/([a-z])([A-Z])/g, '$1 $2');\n\t\tstr = str.replace(/([A-Z])([A-Z][a-z])/g, '$1 $2');\n\t\treturn str;\n\t}\n\n\tfunction makeUniqueActionName(dataAdapter, str) {\n\t\tvar name = separateWords(str);\n\t\tif (dataAdapter.getData().actionNameExists(name)) {\n\t\t\tfor (var j = 1; j < 100; j++) {\n\t\t\t\tvar newName = name + \" \" + j.toString();\n\t\t\t\tif (!dataAdapter.getData().actionNameExists(newName)) {\n\t\t\t\t\tname = newName;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn name;\n\t}\n\n\tfunction returnNewAction(dataAdapter, actionName, actionScript, actionType) {\n\t\tactionName = makeUniqueActionName(dataAdapter, actionName);\n\n\t\tvar actionNamesPickList = dataAdapter.getAlphaSortedActionNames().join(\"|\");\n\n\t\tKMEngine.setVariable(\"kmfamActionName\", actionName);\n\t\tKMEngine.setVariable(\"kmfamAction\", actionScript);\n\t\tKMEngine.setVariable(\"kmfamActionType\", actionType);\n\t\tKMEngine.setVariable(\"kmfamActionNamesPickList\", actionNamesPickList);\n\n\t\treturn \"OK\";\n\t}\n\n\tfunction saveNewAction(dataAdapter) {\n\t\tvar actionUUID = KMEngine.getVariable(\"kmfamNewUUID\", true);\n\t\tvar actionName = KMEngine.getVariable(\"kmfamActionName\", true);\n\t\tvar actionKeywords = KMEngine.getVariable(\"kmfamActionKeywords\");\n\t\tvar actionScript = KMEngine.getVariable(\"kmfamAction\", true);\n\t\tvar actionType = KMEngine.getVariable(\"kmfamActionType\", true);\n\t\tvar actionImageFilePath = KMEngine.getVariable(\"kmfamActionImageFilePath\");\n\n\t\tvar response;\n\t\tif (!actionName) {\n\t\t\tresponse = \"missing\";\n\t\t} else if (dataAdapter.getData().actionNameExists(actionName)) {\n\t\t\tresponse = \"duplicate\";\n\t\t} else {\n\t\t\tdataAdapter.addAction(actionUUID, actionName, actionKeywords, actionScript, actionType, actionImageFilePath);\n\t\t\tdataAdapter.save();\n\t\t\tresponse = \"OK\";\n\t\t}\n\n\t\tKMEngine.setVariable(\"kmfamResponse\", response);\n\t\treturn \"OK\";\n\t}\n\n\tfunction saveUpdatedOptions(preferencesFolderPath) {\n\t\tvar updatedOptions = KMEngine.getVariable(\"kmfamUpdatedOptions\");\n\t\tif (!updatedOptions)\n\t\t\treturn \"OK\";\n\t\tvar optionsAdapter = OptionsDataAdapter(FileUtils, KMEngine);\n\t\toptionsAdapter.saveDataToPrefs(JSON.parse(updatedOptions));\n\t\treturn \"OK\";\n\t}\n\n\tfunction updateExistingAction(dataAdapter) {\n\t\tvar actionName = KMEngine.getVariable(\"kmfamActionName\", true);\n\t\tvar actionKeywords = KMEngine.getVariable(\"kmfamActionKeywords\");\n\t\tvar actionScript = KMEngine.getVariable(\"kmfamAction\", true);\n\t\tvar actionType = KMEngine.getVariable(\"kmfamActionType\", true);\n\t\tvar actionImageFilePath = KMEngine.getVariable(\"kmfamActionImageFilePath\");\n\t\tvar updateImageOnly = KMEngine.getVariable(\"kmfamUpdateImageOnly\", true);\n\n\t\tdataAdapter.updateExistingAction(actionName, actionKeywords, actionScript, actionType, actionImageFilePath,\n\t\t\tupdateImageOnly);\n\t\tdataAdapter.save();\n\t\treturn \"OK\";\n\t}\n\n\tfunction updateFromActionsInfo(dataAdapter) {\n\t\tvar usageInfoAdapter = FavoriteActionsUsageDataAdapter(FileUtils, KMEngine);\n\t\tvar usageInfo = usageInfoAdapter.loadDataFromPrefs();\n\t\tvar actionsInfo = JSON.parse(KMEngine.getVariable(\"kmfamActionsInfo\", true));\n\t\tdataAdapter.updateFromActionsInfo(actionsInfo, usageInfo);\n\t\tdataAdapter.save();\n\t\tusageInfoAdapter.saveDataToPrefs(usageInfo);\n\t\treturn \"OK\";\n\t}\n\n\tfunction run() {\n\t\tvar preferencesFolderPath = KMEngine.getVariable(\"kmfamPreferencesFolderPath\", true);\n\t\tvar dataAdapter = FavoriteActionsDataAdapter(PathNameUtils, FileUtils, KMEngine, preferencesFolderPath);\n\t\tvar request = KMEngine.getVariable(\"kmfamRequest\", true);\n\t\tswitch (request) {\n\t\t\tcase \"applyAction\":\n\t\t\t\treturn applyAction(dataAdapter);\n\t\t\tcase \"getActionsInfo\":\n\t\t\t\tKMEngine.setVariable(\"kmfamActionsInfo\", JSON.stringify(dataAdapter.getActionsInfo(true)));\n\t\t\t\treturn \"OK\";\n\t\t\tcase \"getNewActionFromClipboard\":\n\t\t\t\treturn getNewActionFromClipboard(dataAdapter);\n\t\t\tcase \"getNewActionFromSelectedMacro\":\n\t\t\t\treturn getNewActionFromSelectedMacro(dataAdapter);\n\t\t\tcase \"getOptions\":\n\t\t\t\treturn getOptions(preferencesFolderPath);\n\t\t\tcase \"getSelectData\":\n\t\t\t\treturn getSelectData(dataAdapter, preferencesFolderPath);\n\t\t\tcase \"goToMacro\":\n\t\t\t\treturn goToMacro(dataAdapter);\n\t\t\tcase \"saveNewAction\":\n\t\t\t\treturn saveNewAction(dataAdapter);\n\t\t\tcase \"saveUpdatedOptions\":\n\t\t\t\treturn saveUpdatedOptions(preferencesFolderPath);\n\t\t\tcase \"updateExistingAction\":\n\t\t\t\treturn updateExistingAction(dataAdapter);\n\t\t\tcase \"updateFromActionsInfo\":\n\t\t\t\treturn updateFromActionsInfo(dataAdapter);\n\t\t\tdefault:\n\t\t\t\tthrow Error(\"Unknown Request '\" + request + \"'\");\n\t\t}\n\t}\n\n\ttry {\n\t\treturn run();\n\t} catch (e) {\n\t\treturn \"Error: \" + e.message;\n\t}\n})();",
			"NotifyOnFailure": false
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "Cancel if error",
			"ActionUID": 3177,
			"IsDisclosed": false,
			"ActionColor": "Red",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "All",
				"ConditionList": [
					{
						"ConditionType": "Variable",
						"VariableValue": "OK",
						"Variable": "kmfamcResult",
						"VariableConditionType": "IsNot"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "PlaySound",
					"IsDisclosed": false,
					"DeviceID": "SOUNDEFFECTS",
					"Path": "/System/Library/Sounds/Basso.aiff",
					"TimeOutAbortsMacro": true,
					"ActionUID": 3178
				},
				{
					"MacroActionType": "PromptForUserInput",
					"Title": "%ExecutingMacro%",
					"ActionName": "Notify error '%Variable%kmfamcResult%'",
					"Prompt": "%Variable%kmfamcResult%",
					"ActionUID": 3179,
					"IsDisclosed": false,
					"TimeOutAbortsMacro": true,
					"Buttons": [
						{
							"Button": "OK",
							"Cancel": true
						}
					],
					"Variables": []
				},
				{
					"MacroActionType": "Cancel",
					"IsDisclosed": false,
					"Action": "CancelThisMacro",
					"ActionUID": 3180
				}
			]
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "If the Log variable contains anything, display it (for debugging)",
			"ActionUID": 3181,
			"IsDisclosed": false,
			"ActionColor": "Yellow",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "All",
				"ConditionList": [
					{
						"ConditionType": "Variable",
						"VariableValue": "value",
						"Variable": "kmfamLog",
						"VariableConditionType": "IsNotEmpty"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "PromptForUserInput",
					"Title": "%ExecutingMacro%",
					"Prompt": "%Variable%kmfamLog%",
					"ActionUID": 3182,
					"IsDisclosed": false,
					"TimeOutAbortsMacro": true,
					"Buttons": [
						{
							"Button": "OK"
						},
						{
							"Button": "Cancel",
							"Cancel": true
						}
					],
					"Variables": []
				}
			]
		}
	]
}