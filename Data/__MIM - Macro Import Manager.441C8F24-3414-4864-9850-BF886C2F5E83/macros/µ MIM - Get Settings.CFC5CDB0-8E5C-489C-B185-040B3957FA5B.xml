<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Actions</key>
		<array>
			<dict>
				<key>ActionColor</key>
				<string>Yellow</string>
				<key>ActionUID</key>
				<integer>16271805</integer>
				<key>MacroActionType</key>
				<string>Comment</string>
				<key>StyledText</key>
				<data>
							cnRmZAAAAAADAAAAAgAA
							AAcAAABUWFQucnRmAQAA
							AC5zAgAAKwAAAAEAAABr
							AgAAe1xydGYxXGFuc2lc
							YW5zaWNwZzEyNTJcY29j
							b2FydGYyNzA5Clxjb2Nv
							YXRleHRzY2FsaW5nMFxj
							b2NvYXBsYXRmb3JtMHtc
							Zm9udHRibFxmMFxmc3dp
							c3NcZmNoYXJzZXQwIEhl
							bHZldGljYS1Cb2xkO1xm
							MVxmc3dpc3NcZmNoYXJz
							ZXQwIEhlbHZldGljYTt9
							CntcY29sb3J0Ymw7XHJl
							ZDI1NVxncmVlbjI1NVxi
							bHVlMjU1O30Ke1wqXGV4
							cGFuZGVkY29sb3J0Ymw7
							O30KXHBhcmRcdHg1NjBc
							dHgxMTIwXHR4MTY4MFx0
							eDIyNDBcdHgyODAwXHR4
							MzM2MFx0eDM5MjBcdHg0
							NDgwXHR4NTA0MFx0eDU2
							MDBcdHg2MTYwXHR4Njcy
							MFxwYXJkaXJuYXR1cmFs
							XHBhcnRpZ2h0ZW5mYWN0
							b3IwCgpcZjBcYlxmczI4
							IFxjZjAgTmFtZQpcZjFc
							YjAgOiBNSU0gLSBHZXQg
							U2V0dGluZ3NcCgpcZjBc
							YiBWZXJzaW9uClxmMVxi
							MCA6IDEuMFwKClxmMFxi
							IFVwZGF0ZWQKXGYxXGIw
							IDogMjAyNC8xMS8xOCAw
							Mzo1MCBQVFwKClxmMFxi
							IEJ5ClxmMVxiMCA6IERh
							biBUaG9tYXNcClwKClxm
							MFxiIFBVUlBPU0UKXGYx
							XGIwIDpcClwKU2V0cyB1
							cCB0aGUgIkluc3RhbmNl
							X1NldHRpbmdzXyIgdmFy
							aWFibGVzLlwKXAoKXGYw
							XGIgVkVSU0lPTiBISVNU
							T1JZClxmMVxiMCA6XAox
							LjAgLSBJbml0aWFsIHZl
							cnNpb24ufQEAAAAjAAAA
							AQAAAAcAAABUWFQucnRm
							EAAAAIIqO2e2AQAAAAAA
							AAAAAAA=
							</data>
				<key>Title</key>
				<string>MIM - Get Settings v1.0</string>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>Local License and Disclaimer</string>
				<key>ActionUID</key>
				<integer>16271806</integer>
				<key>IsActive</key>
				<false/>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>SetVariableToText</string>
				<key>Text</key>
				<string>Copyright (c) Daniel Thomas

Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
</string>
				<key>Variable</key>
				<string>Local License and Disclaimer</string>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>Exit if "Instance_GotSettings" is "1"</string>
				<key>ActionUID</key>
				<integer>16271616</integer>
				<key>Conditions</key>
				<dict>
					<key>ConditionList</key>
					<array>
						<dict>
							<key>ConditionType</key>
							<string>Variable</string>
							<key>Variable</key>
							<string>Instance_GotSettings</string>
							<key>VariableConditionType</key>
							<string>Is</string>
							<key>VariableValue</key>
							<string>1</string>
						</dict>
					</array>
					<key>ConditionListMatch</key>
					<string>All</string>
				</dict>
				<key>ElseActions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16271631</integer>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>1</string>
						<key>Variable</key>
						<string>Instance_GotSettings</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>IfThenElse</string>
				<key>ThenActions</key>
				<array>
					<dict>
						<key>Action</key>
						<string>CancelJustThisMacro</string>
						<key>ActionUID</key>
						<integer>16271617</integer>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Cancel</string>
					</dict>
				</array>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Green</string>
				<key>ActionName</key>
				<string>Instance_Settings_MacroUUID_</string>
				<key>ActionUID</key>
				<integer>16271664</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionName</key>
						<string>This should ALWAYS be disabled. It has a special "Note" so we can find it using JXA, below.</string>
						<key>ActionNotes</key>
						<string>80BCE38F-DAAD-4625-8EC9-58FED3AEE7C2</string>
						<key>ActionUID</key>
						<integer>16271632</integer>
						<key>Actions</key>
						<array>
							<dict>
								<key>Action</key>
								<string>Enable</string>
								<key>ActionName</key>
								<string>CompareMacroScripts</string>
								<key>ActionUID</key>
								<integer>16271665</integer>
								<key>MacroActionType</key>
								<string>SetMacroEnable</string>
								<key>MacroUID</key>
								<string>54CD0A8C-117E-400E-8702-E991FEE716DF</string>
							</dict>
							<dict>
								<key>Action</key>
								<string>Enable</string>
								<key>ActionName</key>
								<string>OpenScriptInEditor</string>
								<key>ActionUID</key>
								<integer>16271666</integer>
								<key>MacroActionType</key>
								<string>SetMacroEnable</string>
								<key>MacroUID</key>
								<string>21D1140E-45BD-430E-81BF-301340957350</string>
							</dict>
							<dict>
								<key>Action</key>
								<string>Enable</string>
								<key>ActionName</key>
								<string>Core</string>
								<key>ActionUID</key>
								<integer>16271667</integer>
								<key>MacroActionType</key>
								<string>SetMacroEnable</string>
								<key>MacroUID</key>
								<string>EBFFCA6C-C418-4F99-82C4-219C94474958</string>
							</dict>
						</array>
						<key>IsActive</key>
						<false/>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Group</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16271654</integer>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%ExecutingThisMacroUUID%</string>
						<key>Variable</key>
						<string>Local_ThisMacroUUID</string>
					</dict>
					<dict>
						<key>ActionName</key>
						<string>Get Macro UUIDs.jxa</string>
						<key>ActionUID</key>
						<integer>16271682</integer>
						<key>DisplayKind</key>
						<string>Variable</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>Local_ThisMacroUUID</string>
						</array>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>'use strict';
ObjC.import('AppKit');

function deserializeFromXml(xml) {
	var nsError = $();
	var result = ObjC.deepUnwrap(
		$.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(
			$(xml).dataUsingEncoding($.NSUTF8StringEncoding), 0, 0, nsError));
	if (!result)
		throw Error(getNSErrorMessage(nsError, "Could not convert XML to plist"));
	return result;
}

function getNSErrorMessage(nsError, message) {
	try {
		return `${message}. Error: ${ObjC.unwrap(nsError.localizedDescription)}`;
	} catch (e) {
		return message;
	}
}

const _groupNote = "80BCE38F-DAAD-4625-8EC9-58FED3AEE7C2";
function findGroupAction(actions) {
	for (let action of actions) {
		if (action.ActionNotes === _groupNote)
			return action;
		if (action.MacroActionType === "Group") {
			const result = findGroupAction(action.Actions);
			if (result)
				return result;
		}
	}
	return null;
}

function execute() {
	const thisMacroUUID = kmvar.Local_ThisMacroUUID;
	if (!thisMacroUUID)
		throw new Error(`The parameter "Local_ThisMacroUUID" is missing or empty`);

	const km = Application("Keyboard Maestro");

	const macros = km.macros.whose({id: thisMacroUUID});
	if (!macros || macros.length != 1)
		throw new Error(`Could not find macro "${thisMacroUUID}"`);
	const macro = macros[0];
	var xml = macro.xml();

	const plist = deserializeFromXml(xml);
	const groupAction = findGroupAction(plist.Actions);
	if (!groupAction)
		throw new Error(`Could not find the Macro UUIDs "Group" action.\n\nLooking for a group with "Note" set to "${_groupNote}" (without quotes).`);

	const result = {};
	groupAction.Actions.forEach(action =&gt; {
		if (action.MacroActionType !== "SetMacroEnable")
			throw new Error(`Expected only "SetMacroEnable" actions in Macro UUIDs "Group" action`);
		result[action.ActionName] = action.MacroUID;
	});

	return JSON.stringify(result, null, 2);
}

try {
	return execute();
} catch (e) {
	let message = `Error: ${e.message}`;
	if (e.line != null)
		message += `\nLine # ${e.line}`;
	return message
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>Variable</key>
						<string>Local_Result</string>
					</dict>
					<dict>
						<key>ActionColor</key>
						<string>Yellow</string>
						<key>ActionName</key>
						<string>Abort if error</string>
						<key>ActionUID</key>
						<integer>16271659</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Variable</string>
									<key>Variable</key>
									<string>Local_Result</string>
									<key>VariableConditionType</key>
									<string>StartsWith</string>
									<key>VariableValue</key>
									<string>Error:</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActionListDisclosed</key>
						<false/>
						<key>ElseActions</key>
						<array/>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271661</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>Macro "%ExecutingThisMacro%" had an error:
%Variable%Local_Result%</string>
								<key>Variable</key>
								<string>Local_ErrorMessage</string>
							</dict>
							<dict>
								<key>ActionColor</key>
								<string>Magenta</string>
								<key>ActionUID</key>
								<integer>16271662</integer>
								<key>MacroActionType</key>
								<string>ExecuteSubroutine</string>
								<key>MacroUID</key>
								<string>D4EDFECF-FCA5-432A-8E70-7F34CB30A4D4</string>
								<key>Parameters</key>
								<array>
									<string>%ExecutingMacro%</string>
									<string>%Variable%Local_ErrorMessage%</string>
									<string>1</string>
								</array>
								<key>ResultVariable</key>
								<string>VarName</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16271657</integer>
						<key>MacroActionType</key>
						<string>SetVariablesToJSON</string>
						<key>Prefix</key>
						<string>Instance_Settings_MacroUUID_</string>
						<key>Text</key>
						<string>%Variable%Local_Result%</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Green</string>
				<key>ActionName</key>
				<string>Instance_Settings_BBEditExists</string>
				<key>ActionUID</key>
				<integer>16271628</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16271618</integer>
						<key>DisplayKind</key>
						<string>Variable</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<true/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteAppleScript</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>try
	tell application "Finder" to get application file id "com.barebones.bbedit"
	set appExists to true
on error
	set appExists to false
end try</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>Variable</key>
						<string>Instance_Settings_BBEditExists</string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16271625</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Variable</string>
									<key>Variable</key>
									<string>Instance_Settings_BBEditExists</string>
									<key>VariableConditionType</key>
									<string>Is</string>
									<key>VariableValue</key>
									<string>true</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271627</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>0</string>
								<key>Variable</key>
								<string>Instance_Settings_BBEditExists</string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271626</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>1</string>
								<key>Variable</key>
								<string>Instance_Settings_BBEditExists</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Green</string>
				<key>ActionName</key>
				<string>BBEdit command line diff app</string>
				<key>ActionUID</key>
				<integer>16271775</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16271776</integer>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>/usr/local/bin/bbdiff</string>
						<key>Variable</key>
						<string>Instance_Settings_BBDiffAppPath</string>
					</dict>
					<dict>
						<key>ActionName</key>
						<string>Instance_Settings_BBDiffExists</string>
						<key>ActionUID</key>
						<integer>16271619</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Path</string>
									<key>Path</key>
									<string>%Variable%Instance_Settings_BBDiffAppPath%</string>
									<key>PathConditionType</key>
									<string>FileExists</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271621</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>0</string>
								<key>Variable</key>
								<string>Instance_Settings_BBDiffExists</string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271620</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>1</string>
								<key>Variable</key>
								<string>Instance_Settings_BBDiffExists</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Green</string>
				<key>ActionName</key>
				<string>Beyond Compare command line app</string>
				<key>ActionUID</key>
				<integer>16271777</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16271778</integer>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>/usr/local/bin/bcompare</string>
						<key>Variable</key>
						<string>Instance_Settings_BCompareAppPath</string>
					</dict>
					<dict>
						<key>ActionName</key>
						<string>Instance_Settings_BCompareExists</string>
						<key>ActionUID</key>
						<integer>16271779</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Path</string>
									<key>Path</key>
									<string>%Variable%Instance_Settings_BCompareAppPath%</string>
									<key>PathConditionType</key>
									<string>FileExists</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271781</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>0</string>
								<key>Variable</key>
								<string>Instance_Settings_BCompareExists</string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16271780</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>1</string>
								<key>Variable</key>
								<string>Instance_Settings_BCompareExists</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
		</array>
		<key>CreationDate</key>
		<real>753020295.60726702</real>
		<key>ModificationDate</key>
		<real>753623553.72052205</real>
		<key>Name</key>
		<string>µ MIM - Get Settings</string>
		<key>Triggers</key>
		<array/>
		<key>UID</key>
		<string>CFC5CDB0-8E5C-489C-B185-040B3957FA5B</string>
	</dict>
</array>
</plist>
