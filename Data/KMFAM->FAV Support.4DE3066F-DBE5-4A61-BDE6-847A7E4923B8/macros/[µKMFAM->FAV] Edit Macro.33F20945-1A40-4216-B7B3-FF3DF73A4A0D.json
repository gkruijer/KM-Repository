{
	"CreationDate": 659283616.428265,
	"UID": "33F20945-1A40-4216-B7B3-FF3DF73A4A0D",
	"Name": "[ÂµKMFAM->FAV] Edit Macro",
	"Triggers": [
		{
			"ReturnsValue": true,
			"MacroTriggerType": "Subroutine",
			"Parameters": [
				"Local Macro UUID",
				"Local Select Action",
				"Local Scroll Bar Position"
			]
		}
	],
	"ModificationDate": 659711242.163902,
	"Actions": [
		{
			"MacroActionType": "Comment",
			"Title": "Edit Macro v1.0",
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC6ODwAAKwAAAAEAAACG\n\t\t\t\t\t\t\tDwAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYyNTEzClxjb2Nv\n\t\t\t\t\t\t\tYXRleHRzY2FsaW5nMFxj\n\t\t\t\t\t\t\tb2NvYXBsYXRmb3JtMHtc\n\t\t\t\t\t\t\tZm9udHRibFxmMFxmc3dp\n\t\t\t\t\t\t\tc3NcZmNoYXJzZXQwIEhl\n\t\t\t\t\t\t\tbHZldGljYTtcZjFcZnN3\n\t\t\t\t\t\t\taXNzXGZjaGFyc2V0MCBI\n\t\t\t\t\t\t\tZWx2ZXRpY2EtQm9sZDtc\n\t\t\t\t\t\t\tZjJcZm5pbFxmY2hhcnNl\n\t\t\t\t\t\t\tdDAgQ29uc29sYXM7Cn0K\n\t\t\t\t\t\t\te1xjb2xvcnRibDtccmVk\n\t\t\t\t\t\t\tMjU1XGdyZWVuMjU1XGJs\n\t\t\t\t\t\t\tdWUyNTU7XHJlZDBcZ3Jl\n\t\t\t\t\t\t\tZW4wXGJsdWUwO1xyZWQy\n\t\t\t\t\t\t\tNTFcZ3JlZW4yXGJsdWU3\n\t\t\t\t\t\t\tO30Ke1wqXGV4cGFuZGVk\n\t\t\t\t\t\t\tY29sb3J0Ymw7O1xjc3Ny\n\t\t\t\t\t\t\tZ2JcYzBcYzBcYzBcYzg0\n\t\t\t\t\t\t\tNzA2XGNuYW1lIGNvbnRy\n\t\t\t\t\t\t\tb2xUZXh0Q29sb3I7XGNz\n\t\t\t\t\t\t\tc3JnYlxjMTAwMDAwXGMx\n\t\t\t\t\t\t\tNDkxM1xjMDt9ClxwYXJk\n\t\t\t\t\t\t\tXHR4NTYwXHR4MTEyMFx0\n\t\t\t\t\t\t\teDE2ODBcdHgyMjQwXHR4\n\t\t\t\t\t\t\tMjgwMFx0eDMzNjBcdHgz\n\t\t\t\t\t\t\tOTIwXHR4NDQ4MFx0eDUw\n\t\t\t\t\t\t\tNDBcdHg1NjAwXHR4NjE2\n\t\t\t\t\t\t\tMFx0eDY3MjBccGFyZGly\n\t\t\t\t\t\t\tbmF0dXJhbFxwYXJ0aWdo\n\t\t\t\t\t\t\tdGVuZmFjdG9yMAoKXGYw\n\t\t\t\t\t\t\tXGZzMzAgXGNmMiBOYW1l\n\t\t\t\t\t\t\tOiBFZGl0IE1hY3JvXApW\n\t\t\t\t\t\t\tZXJzaW9uOiAxLjBcClVw\n\t\t\t\t\t\t\tZGF0ZWQ6IDIwMjEvMTEv\n\t\t\t\t\t\t\tMjMgMTM6MzUgUFRcCkJ5\n\t\t\t\t\t\t\tOiBEYW4gVGhvbWFzXApc\n\t\t\t\t\t\t\tClxwYXJkXHR4NTYwXHR4\n\t\t\t\t\t\t\tMTEyMFx0eDE2ODBcdHgy\n\t\t\t\t\t\t\tMjQwXHR4MjgwMFx0eDMz\n\t\t\t\t\t\t\tNjBcdHgzOTIwXHR4NDQ4\n\t\t\t\t\t\t\tMFx0eDUwNDBcdHg1NjAw\n\t\t\t\t\t\t\tXHR4NjE2MFx0eDY3MjBc\n\t\t\t\t\t\t\tcGFyZGlybmF0dXJhbFxw\n\t\t\t\t\t\t\tYXJ0aWdodGVuZmFjdG9y\n\t\t\t\t\t\t\tMAoKXGYxXGIgXGNmMiBQ\n\t\t\t\t\t\t\tVVJQT1NFOgpcZjBcYjAg\n\t\t\t\t\t\t\tXApcClRoaXMgaXMgdXNl\n\t\t\t\t\t\t\tZCBpbnRlcm5hbGx5LCBi\n\t\t\t\t\t\t\tdXQgSSBzdXBwb3NlIHlv\n\t\t\t\t\t\t\tdSBjb3VsZCB1c2UgaXQg\n\t\t\t\t\t\t\teW91cnNlbGYuIEl0IGNh\n\t\t\t\t\t\t\tdXNlcyB0aGUgS00gRWRp\n\t\t\t\t\t\t\tdG9yIHRvIHN0YXJ0IGVk\n\t\t\t\t\t\t\taXRpbmcgdGhlIHNwZWNp\n\t\t\t\t\t\t\tZmllZCBtYWNybywgYXMg\n\t\t\t\t\t\t\taWYgeW91IGhhZCBjbGlj\n\t\t\t\t\t\t\ta2VkIG9uIGl0IGluIHRo\n\t\t\t\t\t\t\tZSBNYWNyb3MgbGlzdC4g\n\t\t\t\t\t\t\tSXQgY2FuIGFsc28gc2Vs\n\t\t\t\t\t\t\tZWN0IGEgc3BlY2lmaWMg\n\t\t\t\t\t\t\tYWN0aW9uLCBhbmQgc2V0\n\t\t\t\t\t\t\tIHRoZSBzY3JvbGwgYmFy\n\t\t\t\t\t\t\tIHBvc2l0aW9uLlwKXAoK\n\t\t\t\t\t\t\tXGYxXGIgUEFSQU1FVEVS\n\t\t\t\t\t\t\tUzoKXGYwXGIwIFwKXApc\n\t\t\t\t\t\t\tcGFyZFx0eDcyMFx0eDEx\n\t\t\t\t\t\t\tMjBcdHgxNjgwXHR4MjI0\n\t\t\t\t\t\t\tMFx0eDI4MDBcdHgzMzYw\n\t\t\t\t\t\t\tXHR4MzkyMFx0eDQ0ODBc\n\t\t\t\t\t\t\tdHg1MDQwXHR4NTYwMFx0\n\t\t\t\t\t\t\teDYxNjBcdHg2NzIwXHBh\n\t\t\t\t\t\t\tcmRpcm5hdHVyYWxccGFy\n\t\t\t\t\t\t\tdGlnaHRlbmZhY3RvcjAK\n\t\t\t\t\t\t\tClxmMVxiIFxjZjIgTWFj\n\t\t\t\t\t\t\tcm8gVVVJRApcZjBcYjAg\n\t\t\t\t\t\t\tXApcClxwYXJkXHR4NzIw\n\t\t\t\t\t\t\tXHR4MTEyMFx0eDE2ODBc\n\t\t\t\t\t\t\tdHgyMjQwXHR4MjgwMFx0\n\t\t\t\t\t\t\teDMzNjBcdHgzOTIwXHR4\n\t\t\t\t\t\t\tNDQ4MFx0eDUwNDBcdHg1\n\t\t\t\t\t\t\tNjAwXHR4NjE2MFx0eDY3\n\t\t\t\t\t\t\tMjBcbGk2MjJcZmkyNFxw\n\t\t\t\t\t\t\tYXJkaXJuYXR1cmFsXHBh\n\t\t\t\t\t\t\tcnRpZ2h0ZW5mYWN0b3Iw\n\t\t\t\t\t\t\tClxjZjIgUkVRVUlSRUQu\n\t\t\t\t\t\t\tIFRoZSBNYWNybyBVVUlE\n\t\t\t\t\t\t\tIHRvIGdvIHRvLlwKXHBh\n\t\t\t\t\t\t\tcmRcdHg1NjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxwYXJk\n\t\t\t\t\t\t\taXJuYXR1cmFsXHBhcnRp\n\t\t\t\t\t\t\tZ2h0ZW5mYWN0b3IwClxj\n\t\t\t\t\t\t\tZjIgXApccGFyZFx0eDcy\n\t\t\t\t\t\t\tMFx0eDExMjBcdHgxNjgw\n\t\t\t\t\t\t\tXHR4MjI0MFx0eDI4MDBc\n\t\t\t\t\t\t\tdHgzMzYwXHR4MzkyMFx0\n\t\t\t\t\t\t\teDQ0ODBcdHg1MDQwXHR4\n\t\t\t\t\t\t\tNTYwMFx0eDYxNjBcdHg2\n\t\t\t\t\t\t\tNzIwXHBhcmRpcm5hdHVy\n\t\t\t\t\t\t\tYWxccGFydGlnaHRlbmZh\n\t\t\t\t\t\t\tY3RvcjAKClxmMVxiIFxj\n\t\t\t\t\t\t\tZjIgU2VsZWN0IEFjdGlv\n\t\t\t\t\t\t\tbgpcZjBcYjAgXApcClxw\n\t\t\t\t\t\t\tYXJkXHR4NzIwXHR4MTEy\n\t\t\t\t\t\t\tMFx0eDE2ODBcdHgyMjQw\n\t\t\t\t\t\t\tXHR4MjgwMFx0eDMzNjBc\n\t\t\t\t\t\t\tdHgzOTIwXHR4NDQ4MFx0\n\t\t\t\t\t\t\teDUwNDBcdHg1NjAwXHR4\n\t\t\t\t\t\t\tNjE2MFx0eDY3MjBcbGk3\n\t\t\t\t\t\t\tMjNcZmktMjNccGFyZGly\n\t\t\t\t\t\t\tbmF0dXJhbFxwYXJ0aWdo\n\t\t\t\t\t\t\tdGVuZmFjdG9yMApcY2Yy\n\t\t\t\t\t\t\tIE9QVElPTkFMLiBJZiBz\n\t\t\t\t\t\t\tcGVjaWZpZWQsIGNhbiBi\n\t\t\t\t\t\t\tZSBvbmUgb2YgdGhlIGZv\n\t\t\t\t\t\t\tbGxvd2luZzpcClwKXHBh\n\t\t\t\t\t\t\tcmRcdHg3MjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxsaTcy\n\t\t\t\t\t\t\tM1xmaS0yM1xwYXJkaXJu\n\t\t\t\t\t\t\tYXR1cmFsXHBhcnRpZ2h0\n\t\t\t\t\t\t\tZW5mYWN0b3IwCgpcZjFc\n\t\t\t\t\t\t\tYiBcY2YyICJmaXJzdCIg\n\t\t\t\t\t\t\tClxmMFxiMCAgCQlUaGUg\n\t\t\t\t\t\t\tZmlyc3QgYWN0aW9uIHdp\n\t\t\t\t\t\t\tbGwgYmUgc2VsZWN0ZWQs\n\t\t\t\t\t\t\tIGlmIGFueS5cCgpcZjFc\n\t\t\t\t\t\t\tYiAiYWxsIiAKXGYwXGIw\n\t\t\t\t\t\t\tICAJCQlBbGwgYWN0aW9u\n\t\t\t\t\t\t\tcyB3aWxsIGJlIHNlbGVj\n\t\t\t\t\t\t\tdGVkLCBpZiBhbnkuXAoK\n\t\t\t\t\t\t\tXGYxXGIgImRlbGV0ZSIg\n\t\t\t\t\t\t\tClxmMFxiMCAgCQlBbGwg\n\t\t\t\t\t\t\tYWN0aW9ucyB3aWxsIGJl\n\t\t\t\t\t\t\tIGRlbGV0ZWQsIGlmIGFu\n\t\t\t\t\t\t\teS5cCgpcZjFcYiBBY3Rp\n\t\t\t\t\t\t\tb24gVUlEClxmMFxiMCAJ\n\t\t\t\t\t\t\tCVRoZSBBY3Rpb24gVUlE\n\t\t\t\t\t\t\tIG9mIHRoZSBhY3Rpb24g\n\t\t\t\t\t\t\tdG8gYmUgc2VsZWN0ZWQu\n\t\t\t\t\t\t\tXApcCklmIHRoZXJlIGFy\n\t\t\t\t\t\t\tZSBubyBhY3Rpb25zLCBv\n\t\t\t\t\t\t\tciBub25lIHdpdGggdGhl\n\t\t\t\t\t\t\tIHNwZWNpZmllZCBVSUQs\n\t\t\t\t\t\t\tIG5vdGhpbmcgZ2V0cyBz\n\t\t\t\t\t\t\tZWxlY3RlZC5cClxwYXJk\n\t\t\t\t\t\t\tXHR4NTYwXHR4MTEyMFx0\n\t\t\t\t\t\t\teDE2ODBcdHgyMjQwXHR4\n\t\t\t\t\t\t\tMjgwMFx0eDMzNjBcdHgz\n\t\t\t\t\t\t\tOTIwXHR4NDQ4MFx0eDUw\n\t\t\t\t\t\t\tNDBcdHg1NjAwXHR4NjE2\n\t\t\t\t\t\t\tMFx0eDY3MjBccGFyZGly\n\t\t\t\t\t\t\tbmF0dXJhbFxwYXJ0aWdo\n\t\t\t\t\t\t\tdGVuZmFjdG9yMApcY2Yy\n\t\t\t\t\t\t\tIFwKXHBhcmRcdHg3MjBc\n\t\t\t\t\t\t\tdHgxMTIwXHR4MTY4MFx0\n\t\t\t\t\t\t\teDIyNDBcdHgyODAwXHR4\n\t\t\t\t\t\t\tMzM2MFx0eDM5MjBcdHg0\n\t\t\t\t\t\t\tNDgwXHR4NTA0MFx0eDU2\n\t\t\t\t\t\t\tMDBcdHg2MTYwXHR4Njcy\n\t\t\t\t\t\t\tMFxwYXJkaXJuYXR1cmFs\n\t\t\t\t\t\t\tXHBhcnRpZ2h0ZW5mYWN0\n\t\t\t\t\t\t\tb3IwCgpcZjFcYiBcY2Yy\n\t\t\t\t\t\t\tIFNjcm9sbCBCYXIgUG9z\n\t\t\t\t\t\t\taXRpb24KXGYwXGIwIFwK\n\t\t\t\t\t\t\tXApccGFyZFx0eDcyMFx0\n\t\t\t\t\t\t\teDExMjBcdHgxNjgwXHR4\n\t\t\t\t\t\t\tMjI0MFx0eDI4MDBcdHgz\n\t\t\t\t\t\t\tMzYwXHR4MzkyMFx0eDQ0\n\t\t\t\t\t\t\tODBcdHg1MDQwXHR4NTYw\n\t\t\t\t\t\t\tMFx0eDYxNjBcdHg2NzIw\n\t\t\t\t\t\t\tXGxpNjIyXGZpMjRccGFy\n\t\t\t\t\t\t\tZGlybmF0dXJhbFxwYXJ0\n\t\t\t\t\t\t\taWdodGVuZmFjdG9yMApc\n\t\t\t\t\t\t\tY2YyIE9QVElPTkFMLiBU\n\t\t\t\t\t\t\taGUgdmFsdWUgdG8gc2V0\n\t\t\t\t\t\t\tIHRoZSBzY3JvbGwgYmFy\n\t\t\t\t\t\t\tIHRvLiBJdCdzIHVubGlr\n\t\t\t\t\t\t\tZWx5IHlvdSdkIHVzZSB0\n\t\t\t\t\t\t\taGlzIHlvdXJzZWxmLiBX\n\t\t\t\t\t\t\taWxsIGJlIHNvbWV0aGlu\n\t\t\t\t\t\t\tZyBsaWtlICIwLjMxNDkz\n\t\t\t\t\t\t\tNzIxMDgzOTM5MTkiLCBi\n\t\t\t\t\t\t\tdXQgdGhlIHZhbHVlIHNo\n\t\t\t\t\t\t\tb3VsZCBoYXZlIGJlZW4g\n\t\t\t\t\t\t\tcmV0cmlldmVkIHByb2dy\n\t\t\t\t\t\t\tYW1tYXRpY2FsbHkgZnJv\n\t\t\t\t\t\t\tbSBhbiBleGlzdGluZyBz\n\t\t\t\t\t\t\tY3JvbGwgYmFyLlwKXHBh\n\t\t\t\t\t\t\tcmRcdHg1NjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxwYXJk\n\t\t\t\t\t\t\taXJuYXR1cmFsXHBhcnRp\n\t\t\t\t\t\t\tZ2h0ZW5mYWN0b3IwClxj\n\t\t\t\t\t\t\tZjIgXApccGFyZFx0eDcy\n\t\t\t\t\t\t\tMFx0eDExMjBcdHgxNjgw\n\t\t\t\t\t\t\tXHR4MjI0MFx0eDI4MDBc\n\t\t\t\t\t\t\tdHgzMzYwXHR4MzkyMFx0\n\t\t\t\t\t\t\teDQ0ODBcdHg1MDQwXHR4\n\t\t\t\t\t\t\tNTYwMFx0eDYxNjBcdHg2\n\t\t\t\t\t\t\tNzIwXHBhcmRpcm5hdHVy\n\t\t\t\t\t\t\tYWxccGFydGlnaHRlbmZh\n\t\t\t\t\t\t\tY3RvcjAKClxmMVxiIFxj\n\t\t\t\t\t\t\tZjIgUkVUVVJORUQgVkFM\n\t\t\t\t\t\t\tVUU6XApccGFyZFx0eDcy\n\t\t\t\t\t\t\tMFx0eDExMjBcdHgxNjgw\n\t\t\t\t\t\t\tXHR4MjI0MFx0eDI4MDBc\n\t\t\t\t\t\t\tdHgzMzYwXHR4MzkyMFx0\n\t\t\t\t\t\t\teDQ0ODBcdHg1MDQwXHR4\n\t\t\t\t\t\t\tNTYwMFx0eDYxNjBcdHg2\n\t\t\t\t\t\t\tNzIwXHBhcmRpcm5hdHVy\n\t\t\t\t\t\t\tYWxccGFydGlnaHRlbmZh\n\t\t\t\t\t\t\tY3RvcjAKClxmMFxiMCBc\n\t\t\t\t\t\t\tY2YyIFwKQSBKU09OIHZh\n\t\t\t\t\t\t\tcmlhYmxlLCBsaWtlIHRo\n\t\t\t\t\t\t\taXM6XApcClxwYXJkXHR4\n\t\t\t\t\t\t\tNzIwXHR4MTEyMFx0eDE2\n\t\t\t\t\t\t\tODBcdHgyMjQwXHR4Mjgw\n\t\t\t\t\t\t\tMFx0eDMzNjBcdHgzOTIw\n\t\t\t\t\t\t\tXHR4NDQ4MFx0eDUwNDBc\n\t\t\t\t\t\t\tdHg1NjAwXHR4NjE2MFx0\n\t\t\t\t\t\t\teDY3MjBccGFyZGlybmF0\n\t\t\t\t\t\t\tdXJhbFxwYXJ0aWdodGVu\n\t\t\t\t\t\t\tZmFjdG9yMAoKXGYyIFxj\n\t\t\t\t\t\t\tZjIgXHtcCgkiXGNmMyBh\n\t\t\t\t\t\t\tY3Rpb25Db3VudFxjZjIg\n\t\t\t\t\t\t\tIjogIjExNyIsXAoJIlxj\n\t\t\t\t\t\t\tZjMgZmlyc3RBY3Rpb25V\n\t\t\t\t\t\t\tSURcY2YyICI6ICI5OTg1\n\t\t\t\t\t\t\tOSIsXAoJIlxjZjMgcmVz\n\t\t\t\t\t\t\tdWx0XGNmMiAiOiJzZWxl\n\t\t\t\t\t\t\tY3RlZCIgb3IgImVtcHR5\n\t\t\t\t\t\t\tIiBvciAib2siXApcfVwK\n\t\t\t\t\t\t\tXHBhcmRcdHg1NjBcdHgx\n\t\t\t\t\t\t\tMTIwXHR4MTY4MFx0eDIy\n\t\t\t\t\t\t\tNDBcdHgyODAwXHR4MzM2\n\t\t\t\t\t\t\tMFx0eDM5MjBcdHg0NDgw\n\t\t\t\t\t\t\tXHR4NTA0MFx0eDU2MDBc\n\t\t\t\t\t\t\tdHg2MTYwXHR4NjcyMFxw\n\t\t\t\t\t\t\tYXJkaXJuYXR1cmFsXHBh\n\t\t\t\t\t\t\tcnRpZ2h0ZW5mYWN0b3Iw\n\t\t\t\t\t\t\tCgpcZjAgXGNmMiBcClxw\n\t\t\t\t\t\t\tYXJkXHR4NTYwXHR4MTEy\n\t\t\t\t\t\t\tMFx0eDE2ODBcdHgyMjQw\n\t\t\t\t\t\t\tXHR4MjgwMFx0eDMzNjBc\n\t\t\t\t\t\t\tdHgzOTIwXHR4NDQ4MFx0\n\t\t\t\t\t\t\teDUwNDBcdHg1NjAwXHR4\n\t\t\t\t\t\t\tNjE2MFx0eDY3MjBccGFy\n\t\t\t\t\t\t\tZGlybmF0dXJhbFxwYXJ0\n\t\t\t\t\t\t\taWdodGVuZmFjdG9yMAoK\n\t\t\t\t\t\t\tXGYxXGIgXGNmMiBWRVJT\n\t\t\t\t\t\t\tSU9OIEhJU1RPUlk6Clxm\n\t\t\t\t\t\t\tMFxiMCBcCjEuMCAtIElu\n\t\t\t\t\t\t\taXRpYWwgdmVyc2lvbi5c\n\t\t\t\t\t\t\tCn0BAAAAIwAAAAEAAAAH\n\t\t\t\t\t\t\tAAAAVFhULnJ0ZhAAAABX\n\t\t\t\t\t\t\tMaFhtgEAAAAAAAAAAAAA\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t",
			"ActionColor": "Yellow",
			"ActionUID": 101263
		},
		{
			"MacroActionType": "Comment",
			"Title": "License Agreement / Disclaimer",
			"StyledText": "\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\tcnRmZAAAAAADAAAAAgAA\n\t\t\t\t\t\t\tAAcAAABUWFQucnRmAQAA\n\t\t\t\t\t\t\tAC6fAwAAKwAAAAEAAACX\n\t\t\t\t\t\t\tAwAAe1xydGYxXGFuc2lc\n\t\t\t\t\t\t\tYW5zaWNwZzEyNTJcY29j\n\t\t\t\t\t\t\tb2FydGYyNTEzClxjb2Nv\n\t\t\t\t\t\t\tYXRleHRzY2FsaW5nMFxj\n\t\t\t\t\t\t\tb2NvYXBsYXRmb3JtMHtc\n\t\t\t\t\t\t\tZm9udHRibFxmMFxmc3dp\n\t\t\t\t\t\t\tc3NcZmNoYXJzZXQwIEhl\n\t\t\t\t\t\t\tbHZldGljYTt9CntcY29s\n\t\t\t\t\t\t\tb3J0Ymw7XHJlZDI1NVxn\n\t\t\t\t\t\t\tcmVlbjI1NVxibHVlMjU1\n\t\t\t\t\t\t\tO30Ke1wqXGV4cGFuZGVk\n\t\t\t\t\t\t\tY29sb3J0Ymw7O30KXHBh\n\t\t\t\t\t\t\tcmRcdHg1NjBcdHgxMTIw\n\t\t\t\t\t\t\tXHR4MTY4MFx0eDIyNDBc\n\t\t\t\t\t\t\tdHgyODAwXHR4MzM2MFx0\n\t\t\t\t\t\t\teDM5MjBcdHg0NDgwXHR4\n\t\t\t\t\t\t\tNTA0MFx0eDU2MDBcdHg2\n\t\t\t\t\t\t\tMTYwXHR4NjcyMFxwYXJk\n\t\t\t\t\t\t\taXJuYXR1cmFsXHBhcnRp\n\t\t\t\t\t\t\tZ2h0ZW5mYWN0b3IwCgpc\n\t\t\t\t\t\t\tZjBcZnMyNCBcY2YwIFBl\n\t\t\t\t\t\t\tcm1pc3Npb24gdG8gdXNl\n\t\t\t\t\t\t\tLCBjb3B5LCBtb2RpZnks\n\t\t\t\t\t\t\tIGFuZC9vciBkaXN0cmli\n\t\t\t\t\t\t\tdXRlIHRoaXMgc29mdHdh\n\t\t\t\t\t\t\tcmUgZm9yIGFueSBwdXJw\n\t\t\t\t\t\t\tb3NlIHdpdGggb3Igd2l0\n\t\t\t\t\t\t\taG91dCBmZWUgaXMgaGVy\n\t\t\t\t\t\t\tZWJ5IGdyYW50ZWQuXApc\n\t\t\t\t\t\t\tClRIRSBTT0ZUV0FSRSBJ\n\t\t\t\t\t\t\tUyBQUk9WSURFRCAiQVMg\n\t\t\t\t\t\t\tSVMiIEFORCBUSEUgQVVU\n\t\t\t\t\t\t\tSE9SIERJU0NMQUlNUyBB\n\t\t\t\t\t\t\tTEwgV0FSUkFOVElFUyBX\n\t\t\t\t\t\t\tSVRIIFJFR0FSRCBUTyBU\n\t\t\t\t\t\t\tSElTIFNPRlRXQVJFIElO\n\t\t\t\t\t\t\tQ0xVRElORyBBTEwgSU1Q\n\t\t\t\t\t\t\tTElFRCBXQVJSQU5USUVT\n\t\t\t\t\t\t\tIE9GIE1FUkNIQU5UQUJJ\n\t\t\t\t\t\t\tTElUWSBBTkQgRklUTkVT\n\t\t\t\t\t\t\tUy4gSU4gTk8gRVZFTlQg\n\t\t\t\t\t\t\tU0hBTEwgVEhFIEFVVEhP\n\t\t\t\t\t\t\tUiBCRSBMSUFCTEUgRk9S\n\t\t\t\t\t\t\tIEFOWSBTUEVDSUFMLCBE\n\t\t\t\t\t\t\tSVJFQ1QsIElORElSRUNU\n\t\t\t\t\t\t\tLCBPUiBDT05TRVFVRU5U\n\t\t\t\t\t\t\tSUFMIERBTUFHRVMgT1Ig\n\t\t\t\t\t\t\tQU5ZIERBTUFHRVMgV0hB\n\t\t\t\t\t\t\tVFNPRVZFUiBSRVNVTFRJ\n\t\t\t\t\t\t\tTkcgRlJPTSBMT1NTIE9G\n\t\t\t\t\t\t\tIFVTRSwgREFUQSBPUiBQ\n\t\t\t\t\t\t\tUk9GSVRTLCBXSEVUSEVS\n\t\t\t\t\t\t\tIElOIEFOIEFDVElPTiBP\n\t\t\t\t\t\t\tRiBDT05UUkFDVCwgTkVH\n\t\t\t\t\t\t\tTElHRU5DRSBPUiBPVEhF\n\t\t\t\t\t\t\tUiBUT1JUSU9VUyBBQ1RJ\n\t\t\t\t\t\t\tT04sIEFSSVNJTkcgT1VU\n\t\t\t\t\t\t\tIE9GIE9SIElOIENPTk5F\n\t\t\t\t\t\t\tQ1RJT04gV0lUSCBUSEUg\n\t\t\t\t\t\t\tVVNFIE9SIFBFUkZPUk1B\n\t\t\t\t\t\t\tTkNFIE9GIFRISVMgU09G\n\t\t\t\t\t\t\tVFdBUkUufQEAAAAjAAAA\n\t\t\t\t\t\t\tAQAAAAcAAABUWFQucnRm\n\t\t\t\t\t\t\tEAAAAGJHnWG2AQAAAAAA\n\t\t\t\t\t\t\tAAAAAAA=\n\t\t\t\t\t\t\t41E4D515-C065-4C24-9859-EA2479C52CC9\n\t\t\t\t\t\t\t",
			"ActionColor": "Yellow",
			"ActionUID": 101264
		},
		{
			"MacroActionType": "Group",
			"ActionName": "Validate & ParseParse & Validate Parameters",
			"ActionUID": 95302,
			"IsDisclosed": false,
			"Actions": [
				{
					"MacroActionType": "IfThenElse",
					"ActionName": "'Local Macro UUID' must not be blank",
					"ActionUID": 85252,
					"IsDisclosed": false,
					"ElseActions": [],
					"TimeOutAbortsMacro": true,
					"Conditions": {
						"ConditionListMatch": "All",
						"ConditionList": [
							{
								"ConditionType": "Variable",
								"VariableValue": "value",
								"Variable": "Local Macro UUID",
								"VariableConditionType": "IsEmpty"
							}
						]
					},
					"ElseActionListDisclosed": false,
					"ThenActions": [
						{
							"MacroActionType": "SetVariableToText",
							"Where": "Append",
							"Variable": "Local_ErrorMessages",
							"Text": "The parameter \"Macro UUID\" is required.\n",
							"ActionUID": 95325
						}
					]
				},
				{
					"MacroActionType": "Switch",
					"CaseEntries": [
						{
							"Actions": [
								{
									"MacroActionType": "SetVariableToCalculation",
									"IsDisclosed": false,
									"UseFormat": false,
									"Variable": "Local_SelectAll",
									"Text": "1",
									"ActionUID": 118010
								},
								{
									"MacroActionType": "SetVariableToText",
									"IsDisclosed": false,
									"Variable": "Local Select Action",
									"Text": "first",
									"ActionUID": 116761
								}
							],
							"ConditionType": "Is",
							"TestValue": "all"
						},
						{
							"Actions": [
								{
									"MacroActionType": "SetVariableToCalculation",
									"IsDisclosed": false,
									"UseFormat": false,
									"Variable": "Local_DeleteAll",
									"Text": "1",
									"ActionUID": 118055
								},
								{
									"MacroActionType": "SetVariableToText",
									"IsDisclosed": false,
									"Variable": "Local Select Action",
									"Text": "first",
									"ActionUID": 116987
								}
							],
							"ConditionType": "Is",
							"TestValue": "delete"
						},
						{
							"Actions": [
								{
									"MacroActionType": "SetVariableToText",
									"IsDisclosed": false,
									"Where": "Append",
									"Variable": "Local_ErrorMessages",
									"Text": "The parameter \"Select Action\" can only contain \"first\", \"all\", \"delete\", or an Action UID.\n",
									"ActionUID": 116762
								}
							],
							"ConditionType": "DoesNotMatch",
							"TestValue": "(?i)^(|first|\\d*)$"
						}
					],
					"Source": "Variable",
					"Variable": "Local Select Action",
					"ActionColor": "Aqua",
					"ActionUID": 116759
				},
				{
					"MacroActionType": "IfThenElse",
					"ActionName": "Abort with error message if 'Local_ErrorMessages' is not empty",
					"ActionUID": 95572,
					"ActionColor": "Red",
					"ElseActions": [],
					"TimeOutAbortsMacro": true,
					"Conditions": {
						"ConditionListMatch": "All",
						"ConditionList": [
							{
								"ConditionType": "Variable",
								"VariableValue": "value",
								"Variable": "Local_ErrorMessages",
								"VariableConditionType": "IsNotEmpty"
							}
						]
					},
					"ElseActionListDisclosed": false,
					"ThenActions": [
						{
							"MacroActionType": "PromptForUserInput",
							"Title": "%ExecutingThisMacro%",
							"Prompt": "%Variable%Local_ErrorMessages%",
							"ActionUID": 95617,
							"TimeOutAbortsMacro": true,
							"Buttons": [
								{
									"Button": "OK"
								},
								{
									"Button": "Cancel",
									"Cancel": true
								}
							],
							"Variables": []
						}
					]
				}
			],
			"TimeOutAbortsMacro": true,
			"ActionColor": "Yellow"
		},
		{
			"MacroActionType": "ExecuteJavaScriptForAutomation",
			"TrimResults": true,
			"StopOnFailure": false,
			"Variable": "Local_Result",
			"IncludeStdErr": false,
			"ActionUID": 85323,
			"UseText": true,
			"TrimResultsNew": true,
			"TimeOutAbortsMacro": true,
			"Path": "",
			"DisplayKind": "Variable",
			"IsDisclosed": false,
			"HonourFailureSettings": true,
			"Text": "(function(inDesignMode, designModeParams) {\n\t'use strict';\n\tObjC.import('AppKit');\n\n\t// #region ======== Global Variables =============================\n\tconst _editorAppName = \"Code\";\n    const _kmEngine = Application(\"Keyboard Maestro Engine\");\n    const _kmEditor = Application(\"Keyboard Maestro\");\n    const _currentApp = Application.currentApplication();\n    _currentApp.includeStandardAdditions = true;\n\t// #endregion\n\n\t// #region ======== Helper Functions =============================\n\tvar PlistUtils = (function() {\n\t\tvar _currentApp;\n\t\tvar _dataNodeToken = \"41E4D515-C065-4C24-9859-EA2479C52CC9\";\n\n\t\tvar _kmObjectType_action = \"action\";\n\t\tvar _kmObjectType_group = \"group\";\n\t\tvar _kmObjectType_macro = \"macro\";\n\n\t\tvar _kmActionsXmlClipboardStringType = \"com.stairways.keyboardmaestro.actionarray\";\n\t\tvar _kmGroupsXmlClipboardStringType = \"com.stairways.keyboardmaestro.macrogroupsarray\";\n\t\tvar _kmMacrosXmlClipboardStringType = \"com.stairways.keyboardmaestro.macrosarray\";\n\n\t\tvar _kmClipboardStringTypes = {}\n\t\t_kmClipboardStringTypes[_kmObjectType_action] = _kmActionsXmlClipboardStringType;\n\t\t_kmClipboardStringTypes[_kmObjectType_group] = _kmGroupsXmlClipboardStringType;\n\t\t_kmClipboardStringTypes[_kmObjectType_macro] = _kmMacrosXmlClipboardStringType;\n\n\t\tfunction _cleanupXmlAfterDeserialization(xml) {\n\t\t\tvar result = xml.replace(/<real>(-?\\d+)(\\.0)?<\\/real>/g, \"<integer>$1</integer>\");\n\t\t\tvar result = result.replace(/(<key>CreationDate<\\/key>[\\W]*<)(integer>)(\\d+)(<\\/integer>)/g, \"$1real>$3.0</real>\");\n\t\t\tvar result = result.replace(/(<key>TimeOutPeriod<\\/key>[\\W]*<)(integer)(>\\d+<\\/)(integer)(>)/g, \"$1real$3real$5\");\n\t\t\tvar result = result.replace(/(<key>NSSuperScript<\\/key>[\\W]*<)(real)(>-?\\d+<\\/)(real)(>)/g, \"$1integer$3integer$5\");\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction _deserializeFromXmlString(xml) {\n\t\t\tvar nsError = $();\n\t\t\tvar result = ObjC.deepUnwrap(\n\t\t\t\t$.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(\n\t\t\t\t\t$(xml).dataUsingEncoding($.NSUTF8StringEncoding), 0, 0, nsError));\n\t\t\tif (!result)\n\t\t\t\tthrow Error(_getErrorMessage(nsError, \"Could not convert string to plist\"));\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction _deTokenizeXmlDataNodes(xml) {\n\t\t\tvar regex = new RegExp(\"(<string>[\\\\W]*\" + _dataNodeToken + \")\", \"g\");\n\t\t\tvar result = xml.replace(regex, \"<data>\");\n\n\t\t\tregex = new RegExp(_dataNodeToken + \"[\\\\W]*<\\\\/string>\", \"g\");\n\t\t\treturn result.replace(regex, \"</data>\");\n\t\t}\n\n\t\tfunction _escapeXml(str) {\n\t\t\treturn str.replace(/[<>&'\"]/g, function (c) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase '<': return '&lt;';\n\t\t\t\t\tcase '>': return '&gt;';\n\t\t\t\t\tcase '&': return '&amp;';\n\t\t\t\t\tcase '\\'': return '&apos;';\n\t\t\t\t\tcase '\"': return '&quot;';\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfunction _getAppSupportFolderName() {\n\t\t\tif (!_currentApp) {\n\t\t\t\t_currentApp = Application.currentApplication();\n\t\t\t\t_currentApp.includeStandardAdditions = true;\n\t\t\t}\n\t\t\treturn _currentApp.pathTo('application support', { from: 'user domain' });\n\t\t}\n\n\t\tfunction _clipboardContainsType(type) {\n\t\t\treturn _getClipboardTypes().indexOf(type) >= 0;\n\t\t}\n\n\t\tfunction _getClipboardStringForType(type, throwIfNotFound) {\n\t\t\tif (_clipboardContainsType(type))\n\t\t\t\treturn ObjC.unwrap(\n\t\t\t\t\t$.NSPasteboard.generalPasteboard\n\t\t\t\t\t.stringForType(type));\n\t\t\tif (throwIfNotFound)\n\t\t\t\tthrow Error(\"No clipboard data for specified type\");\n\t\t\treturn \"\";\n\t\t}\n\n\t\tfunction _getClipboardTypes() {\n\t\t\tvar items = $.NSPasteboard.generalPasteboard.pasteboardItems;\n\t\t\tif (items.count === 0)\n\t\t\t\treturn [];\n\t\t\treturn ObjC.deepUnwrap(items.js[0].types);\n\t\t}\n\n\t\tfunction _getErrorMessage(nsError, message) {\n\t\t\ttry {\n\t\t\t\treturn message + \". Error: \" + ObjC.unwrap(nsError.localizedDescription);\n\t\t\t} catch (e) {\n\t\t\t\treturn message;\n\t\t\t}\n\t\t}\n\n\t\tfunction _getKMClipboardStringTypeForObjectType(objectType) {\n\t\t\tvar result = _kmClipboardStringTypes[objectType];\n\t\t\tif (!result)\n\t\t\t\tthrow Error(\"'\" + objectType + \"' is not a valid KM Object Type\");\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction _getKMPlistXmlObjectType(xml) {\n\t\t\tif (xml.indexOf(\"<key>AddToMacroPalette</key>\") > 0)\n\t\t\t\treturn _kmObjectType_group;\n\t\t\tif (xml.indexOf(\"<key>Triggers</key>\") > 0)\n\t\t\t\treturn _kmObjectType_macro;\n\t\t\treturn _kmObjectType_action;\n\t\t}\n\n\t\tfunction _reOrderJsonProperties(json) {\n\n\t\t\tfunction moveActionPropertyToTop(jsonArray, propertyName) {\n\n\t\t\t\tfunction findProperty(startingIndex) {\n\t\t\t\t\tfor (var i = startingIndex; i < jsonArray.length; i++) {\n\t\t\t\t\t\tvar line = jsonArray[i];\n\t\t\t\t\t\tvar regex = new RegExp('^([\\\\t]+)\"' + propertyName + '\":');\n\t\t\t\t\t\tvar match = line.match(regex);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\t\tleadingTabs: match[1]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tfunction findActionStartIndex(startingIndex, leadingTabs) {\n\t\t\t\t\tvar startingLineRegex = new RegExp(\"^(\" + leadingTabs.substring(0, leadingTabs.length - 1) + \"[^\\\\t])\");\n\t\t\t\t\tfor (var i = startingIndex - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar line = jsonArray[i];\n\t\t\t\t\t\tvar match = line.match(startingLineRegex);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif (!match[1].endsWith(\"{\"))\n\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\treturn i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\tfunction moveProperty(fromIndex, toIndex) {\n\t\t\t\t\tvar endsWithComma = jsonArray[fromIndex].endsWith(\",\");\n\t\t\t\t\tif (!endsWithComma)\n\t\t\t\t\t\tjsonArray[fromIndex] = jsonArray[fromIndex] + \",\";\n\t\t\t\t\tjsonArray.splice(toIndex, 0, jsonArray.splice(fromIndex, 1)[0]);\n\n\t\t\t\t\t// If we moved the last property of the action, then the new last\n\t\t\t\t\t// property line probably needs to have its trailing comma removed.\n\t\t\t\t\tif (!endsWithComma) {\n\t\t\t\t\t\tvar line = jsonArray[fromIndex];\n\t\t\t\t\t\tif (line.endsWith(\",\"))\n\t\t\t\t\t\t\tjsonArray[fromIndex] = line.substring(0, line.length - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// moveActionPropertyToTop()\n\t\t\t\tvar i = 0;\n\t\t\t\twhile (i < jsonArray.length) {\n\t\t\t\t\tvar propertyLineInfo = findProperty(i);\n\t\t\t\t\tif (!propertyLineInfo)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tvar actionStartIndex = findActionStartIndex(propertyLineInfo.index, propertyLineInfo.leadingTabs);\n\t\t\t\t\tif (actionStartIndex >= 0 && actionStartIndex < propertyLineInfo.index)\n\t\t\t\t\t\tmoveProperty(propertyLineInfo.index, actionStartIndex);\n\n\t\t\t\t\ti = propertyLineInfo.index + 1;\n\t\t\t\t}\n\t\t\t} // moveActionPropertyToTop()\n\n\t\t\t// _reOrderJsonProperties()\n\t\t\tif (json.indexOf(\"\\t\") < 0)\n\t\t\t\tthrow Error(\"ReOrderJsonProperties expects the JSON parameter to be stringified with tabs\");\n\t\t\tvar jsonArray = json.split(\"\\n\");\n\n\t\t\t// NOTE: These are backwards - the one we want top-most is last in the array.\n\t\t\t[\"ActionName\", \"Title\", \"MacroActionType\"].forEach(function(propertyName) {\n\t\t\t\tmoveActionPropertyToTop(jsonArray, propertyName);\n\t\t\t});\n\t\t\treturn jsonArray.join(\"\\n\");\n\t\t} // _reOrderJsonProperties()\n\n\t\tfunction _serializeToXmlString(plist) {\n\t\t\tvar data = $.NSPropertyListSerialization.dataWithPropertyListFormatOptionsError(\n\t\t\t\t$(plist), $.NSPropertyListXMLFormat_v1_0, 0, null);\n\t\t\tvar nsstring = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding);\n\t\t\tvar result = $(nsstring).js;\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction _setClipboardStringForType(str, type) {\n\t\t\tvar clipboard = $.NSPasteboard.generalPasteboard;\n\t\t\tclipboard.clearContents;\n\t\t\tclipboard.setStringForType($(str), $(type));\n\t\t}\n\n\t\tfunction _tokenizeXmlDataNodes(xml) {\n\t\t\treturn xml.replace(/(<data>)([\\W]*)([^<]*)(<\\/data>)/g, \n\t\t\t\t\"<string>$2\" + _dataNodeToken + \"$2$3\" + _dataNodeToken + \"$2</string>\");\n\t\t}\n\n\t\treturn {\n\t\t\tKMObjectType_action: _kmObjectType_action,\n\t\t\tKMObjectType_group: _kmObjectType_group,\n\t\t\tKMObjectType_macro: _kmObjectType_macro,\n\n\t\t\tcomparePlistToXmlString: function(plist, origXml, failOptions) {\n\t\t\t\tvar testXml = this.serializeToXmlString(plist);\n\t\t\t\tif (testXml === origXml)\n\t\t\t\t\treturn;\n\n\t\t\t\tvar savedToFile = false;\n\t\t\t\tvar savedOrigFilePath = null;\n\t\t\t\tvar savedTestFilePath = null;\n\t\t\t\tvar defaultFailOptions = this.getComparePlistFailDefaultOptions();\n\t\t\t\tif (!failOptions)\n\t\t\t\t\tfailOptions = defaultFailOptions;\n\n\t\t\t\tif (failOptions && failOptions.saveFiles) {\n\n\t\t\t\t\tvar saveFolderPath = failOptions.saveFolderPath || defaultFailOptions.saveFolderPath;\n\t\t\t\t\tif (saveFolderPath.substring(saveFolderPath.length-1) !== \"/\")\n\t\t\t\t\t\tsaveFolderPath += \"/\";\n\n\t\t\t\t\tsavedOrigFilePath = saveFolderPath + (failOptions.saveOrigFileName || defaultFailOptions.saveOrigFileName);\n\t\t\t\t\tsavedTestFilePath = saveFolderPath + (failOptions.saveTestFileName || defaultFailOptions.saveTestFileName);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.writeTextFile(origXml, savedOrigFilePath);\n\t\t\t\t\t\tthis.writeTextFile(testXml, savedTestFilePath);\n\t\t\t\t\t\tsavedToFile = true;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar errorMessage = failOptions && failOptions.errorMessage ? failOptions.errorMessage : defaultFailOptions.errorMessage;\n\t\t\t\tif (savedToFile)\n\t\t\t\t\terrorMessage = errorMessage +\n\t\t\t\t\t\t\"\\nSaved original XML to: '\" + savedOrigFilePath + \"'\" +\n\t\t\t\t\t\t\"\\nSaved test XML to: '\" + savedTestFilePath + \"'\";\n\t\t\t\tthrow Error(errorMessage);\n\t\t\t},\n\n\t\t\tconvertJsonStringToXmlString: function(json) {\n\t\t\t\tvar plist = JSON.parse(json);\n\t\t\t\treturn this.serializeToXmlString(plist);\n\t\t\t},\n\n\t\t\tconvertXmlStringToJsonString: function(xml) {\n\t\t\t\tvar plist = this.deserializeFromXmlString(xml);\n\t\t\t\treturn JSON.stringify(plist, null, \"\\t\");\n\t\t\t},\n\n\t\t\tconvertXmlStringToJsonStringAndValidate: function(xml, failOptions) {\n\t\t\t\tvar json = this.convertXmlStringToJsonString(xml);\n\t\t\t\tvar plist = JSON.parse(json);\n\t\t\t\tthis.comparePlistToXmlString(plist, xml, failOptions || this.getCompareJsonFailDefaultOptions());\n\t\t\t\treturn json;\n\t\t\t},\n\n\t\t\tcreateCancelThisMacroAction: function() {\n\t\t\t\treturn _deserializeFromXmlString(\n\t\t\t\t\t`<plist version=\"1.0\">` + \n\t\t\t\t\t`<dict>` + \n\t\t\t\t\t`\t<key>Action</key>` + \n\t\t\t\t\t`\t<string>CancelThisMacro</string>` + \n\t\t\t\t\t`\t<key>ActionColor</key>` + \n\t\t\t\t\t`\t<string>Red</string>` + \n\t\t\t\t\t`\t<key>IsDisclosed</key>` + \n\t\t\t\t\t`\t<false/>` + \n\t\t\t\t\t`\t<key>MacroActionType</key>` + \n\t\t\t\t\t`\t<string>Cancel</string>` + \n\t\t\t\t\t`</dict>` + \n\t\t\t\t\t`</plist>`);\n\t\t\t},\n\n\t\t\tcreateEmptyGroupAction: function(actionName) {\n\t\t\t\tvar result = _deserializeFromXmlString(\n\t\t\t\t\t\"<plist version='1.0'> \\n\" +\n\t\t\t\t\t\"<dict> \\n\" +\n\t\t\t\t\t\"\t<key>ActionName</key> \\n\" +\n\t\t\t\t\t\"\t<string></string> \\n\" +\n\t\t\t\t\t\"\t<key>Actions</key> \\n\" +\n\t\t\t\t\t\"\t<array/> \\n\" +\n\t\t\t\t\t\"\t<key>MacroActionType</key> \\n\" +\n\t\t\t\t\t\"\t<string>Group</string> \\n\" +\n\t\t\t\t\t\"\t<key>TimeOutAbortsMacro</key> \\n\" +\n\t\t\t\t\t\"\t<true/> \\n\" +\n\t\t\t\t\t\"</dict> \\n\" +\n\t\t\t\t\t\"</plist>\");\n\t\t\t\tresult.ActionName = actionName;\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tcreateExecuteMacroAction: function(actionName, macroUID) {\n\t\t\t\tvar result = _deserializeFromXmlString(\n\t\t\t\t\t'<plist version=\"1.0\"> \\n' +\n\t\t\t\t\t'<dict> \\n' +\n\t\t\t\t\t'\t<key>ActionColor</key> \\n' +\n\t\t\t\t\t'\t<string>Red</string> \\n' +\n\t\t\t\t\t'\t<key>ActionName</key> \\n' +\n\t\t\t\t\t'\t<string></string> \\n' +\n\t\t\t\t\t'\t<key>Asynchronously</key> \\n' +\n\t\t\t\t\t'\t<false/> \\n' +\n\t\t\t\t\t'\t<key>MacroActionType</key> \\n' +\n\t\t\t\t\t'\t<string>ExecuteMacro</string> \\n' +\n\t\t\t\t\t'\t<key>MacroUID</key> \\n' +\n\t\t\t\t\t'\t<string></string> \\n' +\n\t\t\t\t\t'\t<key>TimeOutAbortsMacro</key> \\n' +\n\t\t\t\t\t'\t<true/> \\n' +\n\t\t\t\t\t'\t<key>UseParameter</key> \\n' +\n\t\t\t\t\t'\t<false/> \\n' +\n\t\t\t\t\t'</dict> \\n' +\n\t\t\t\t\t'</plist>`');\n\t\t\t\tresult.ActionName = actionName;\n\t\t\t\tresult.MacroUID = macroUID;\n\t\t\t\treturn result;\n\t\t\t},\n\n            createEmptyPlist: function() {\n\t\t\t\treturn _deserializeFromXmlString(\n\t\t\t\t\t\"<plist version='1.0'> \\n\" +\n\t\t\t\t\t\"<array> \\n\" +\n\t\t\t\t\t\"</array> \\n\" +\n\t\t\t\t\t\"</plist>\");\n            },\n\n\t\t\tdeserializeFromJsonString: function(json) {\n\t\t\t\treturn JSON.parse(json);\n\t\t\t},\n\n\t\t\tdeserializeFromJsonFile: function(path) {\n\t\t\t\treturn this.deserializeFromJsonString(this.readTextFile(path));\n\t\t\t},\n\n\t\t\tdeserializeFromXmlFile: function(path) {\n\t\t\t\treturn this.deserializeFromXmlString(this.readTextFile(path));\n\t\t\t},\n\n\t\t\tdeserializeFromXmlFileAndValidate: function(path, failOptions) {\n\t\t\t\treturn this.deserializeFromXmlStringAndValidate(this.readTextFile(path), failOptions);\n\t\t\t},\n\n\t\t\tdeserializeFromXmlString: function(xml) {\n\t\t\t\tvar result = _tokenizeXmlDataNodes(xml);\n\t\t\t\treturn _deserializeFromXmlString(result);\n\t\t\t},\n\n\t\t\tdeserializeFromXmlStringAndValidate: function(xml, failOptions) {\n\t\t\t\tvar result = this.deserializeFromXmlString(xml);\n\t\t\t\tthis.comparePlistToXmlString(result, xml, failOptions);\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tdeserializeKMAllMacrosSourceFile: function() {\n\t\t\t\tvar xml = this.readKMAllMacrosSourceFileAsXml();\n\t\t\t\treturn this.deserializeFromXmlString(xml);\n\t\t\t},\n\n\t\t\tdeserializeKMAllMacrosSourceFileAndValidate: function(failOptions) {\n\t\t\t\tvar xml = this.readKMAllMacrosSourceFileAsXml();\n\t\t\t\treturn this.deserializeFromXmlStringAndValidate(xml, failOptions);\n\t\t\t},\n\n\t\t\tgetCompareJsonFailDefaultOptions: function() {\n\t\t\t\treturn {\n\t\t\t\t\terrorMessage: \"Plist-to-JSON Conversion Error: Converted JSON back to XML, does not match Original XML.\",\n\t\t\t\t\tsaveFiles: true,\n\t\t\t\t\tsaveFolderPath: \"/tmp/\",\n\t\t\t\t\tsaveOrigFileName: \"PlistUtils_CompareFailure_Original.plist\",\n\t\t\t\t\tsaveTestFileName: \"PlistUtils_CompareFailure_Test.plist\"\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tgetComparePlistFailDefaultOptions: function() {\n\t\t\t\treturn {\n\t\t\t\t\terrorMessage: \"Plist Conversion Error: Converted Plist does not match Original XML.\",\n\t\t\t\t\tsaveFiles: true,\n\t\t\t\t\tsaveFolderPath: \"/tmp/\",\n\t\t\t\t\tsaveOrigFileName: \"PlistUtils_CompareFailure_Original.plist\",\n\t\t\t\t\tsaveTestFileName: \"PlistUtils_CompareFailure_Test.plist\"\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tgetInitialCommentFromMacro: function(macro) {\n\t\t\t\tvar results = [];\n\t\t\t\tif (!macro.Actions || macro.Actions.length === 0)\n\t\t\t\t\treturn null;\n\n\t\t\t\tvar action = macro.Actions[0];\n\t\t\t\tif (action.MacroActionType !== \"Comment\")\n\t\t\t\t\treturn null;\n\n\t\t\t\treturn {\n\t\t\t\t\tname: action.ActionName || action.Title || \"\",\n\t\t\t\t\ttitle: action.Title || \"\",\n\t\t\t\t\ttext: action.Text || \"\"\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tgetClipboardString: function(throwIfNotFound) {\n\t\t\t\treturn _getClipboardStringForType($.NSPasteboardTypeString.js, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetKMActionsXmlFromClipboard: function(throwIfNotFound) {\n\t\t\t\treturn _getClipboardStringForType(_kmActionsXmlClipboardStringType, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetKMClipboardStringTypeForObjectType: function(objectType) {\n\t\t\t\tvar result = _kmClipboardStringTypes[objectType];\n\t\t\t\tif (!result)\n\t\t\t\t\tthrow Error(\"'\" + objectType + \"' is not a valid KM Object Type\");\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetKMGroupsXmlFromClipboard: function(throwIfNotFound) {\n\t\t\t\treturn _getClipboardStringForType(_kmGroupsXmlClipboardStringType, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetKMMacrosXmlFromClipboard: function(throwIfNotFound) {\n\t\t\t\treturn _getClipboardStringForType(_kmMacrosXmlClipboardStringType, throwIfNotFound);\n\t\t\t},\n\n\t\t\tgetKMPlistXmlObjectType: function(xml) {\n\t\t\t\treturn _getKMPlistXmlObjectType(xml);\n\t\t\t},\n\n\t\t\t// File must contain one macro only, or exception is thrown.\n\t\t\tgetMacroFromKMMacrosFile: function(path) {\n\t\t\t\tvar plist = this.deserializeFromXmlFile(path);\n\t\t\t\tif (!plist)\n\t\t\t\t\tthrow Error(\"Could not read file '\" + path + \"'\");\n\t\t\t\tif (plist.length === 0)\n\t\t\t\t\tthrow Error(\"No macros were found in '\" + path + \"'\");\n\t\t\t\tif (plist.length > 1)\n\t\t\t\t\tthrow Error(\"Multiple macros were found in '\" + path + \"'\");\n\t\t\t\tvar group = plist[0];\n\n\t\t\t\tif (!group.Macros || group.Macros.count === 0)\n\t\t\t\t\tthrow Error(\"No macros were found in '\" + path + \"'\");\n\t\t\t\tif (group.Macros.length > 1)\n\t\t\t\t\tthrow Error(\"Multiple macros were found in '\" + path + \"'\");\n\t\t\t\treturn group.Macros[0];\n\t\t\t},\n\n\t\t\treadKMAllMacrosSourceFileAsXml: function() {\n\t\t\t\tvar path = _getAppSupportFolderName() + \"/Keyboard Maestro/Keyboard Maestro Macros.plist\";\n\n\t\t\t\tvar nsError = $();\n\t\t\t\tvar fileData = $.NSData.dataWithContentsOfFileOptionsError(\n\t\t\t\t\t$(path).stringByStandardizingPath, 0, nsError);\n\t\t\t\tif (!fileData)\n\t\t\t\t\tthrow Error(_getErrorMessage(nsError, \"Could not read file '\" + path + \"'\"));\n\n\t\t\t\tnsError = $();\n\t\t\t\tvar plistData = $.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(\n\t\t\t\t\tfileData, $.NSPropertyListImmutable, 0, nsError);\n\t\t\t\tif (!plistData)\n\t\t\t\t\tthrow Error(_getErrorMessage(nsError, \"Could not deserialize file '\" + path + \"'\"));\n\n\t\t\t\tnsError = $();\n\t\t\t\tvar xmlData = $.NSPropertyListSerialization.dataWithPropertyListFormatOptionsError(\n\t\t\t\t\tplistData, $.NSPropertyListXMLFormat_v1_0, 0, nsError);\n\t\t\t\tif (!xmlData)\n\t\t\t\t\tthrow Error(_getErrorMessage(nsError, \"Could not serialize file '\" + path + \"' to XML\"));\n\n\t\t\t\treturn $($.NSString.alloc.initWithDataEncoding(xmlData, $.NSUTF8StringEncoding)).js;\n\t\t\t},\n\n\t\t\treadTextFile: function(path) {\n\t\t\t\tvar error = $();\n\t\t\t\tvar str = ObjC.unwrap(\n\t\t\t\t\t$.NSString.stringWithContentsOfFileEncodingError(\n\t\t\t\t\t\t$(path).stringByStandardizingPath,\n\t\t\t\t\t\t$.NSUTF8StringEncoding,\n\t\t\t\t\t\terror\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tif (!str)\n\t\t\t\t\tthrow Error(_getErrorMessage(error, \"Could not read file '\" + path + \"', or file is empty\"));\n\t\t\t\treturn str;\n\t\t\t},\n\n\t\t\treOrderJsonProperties: function(json) {\n\t\t\t\treturn _reOrderJsonProperties(json);\n\t\t\t},\n\n\t\t\tserializeToXmlFile: function(obj, path) {\n\t\t\t\tvar str = serializeToXmlString(obj);\n\t\t\t\twriteTextFile(str, path);\n\t\t\t},\n\n\t\t\tserializeToXmlString: function(obj) {\n\t\t\t\tvar str = _serializeToXmlString(obj);\n\t\t\t\tstr = _cleanupXmlAfterDeserialization(str);\n\t\t\t\treturn _deTokenizeXmlDataNodes(str);\n\t\t\t},\n\n\t\t\tsetClipboardToKMPlistXml: function(xml) {\n\t\t\t\tvar objectType = _getKMPlistXmlObjectType(xml);\n\t\t\t\tvar clipboardStringType = _getKMClipboardStringTypeForObjectType(objectType);\n\t\t\t\t_setClipboardStringForType(xml, clipboardStringType);\n\t\t\t\treturn objectType;\n\t\t\t},\n\n\t\t\twriteTextFile: function(text, path) {\n\t\t\t\tvar error = $();\n\t\t\t\tvar str = $.NSString.alloc.initWithUTF8String(text);\n\t\t\t\tvar result = str.writeToFileAtomicallyEncodingError(\n\t\t\t\t\t$(path).stringByStandardizingPath,\n\t\t\t\t\ttrue,\n\t\t\t\t\t$.NSUTF8StringEncoding,\n\t\t\t\t\tnull);\n\t\t\t\tif (!result)\n\t\t\t\t\tthrow Error(_getErrorMessage(error, \"Could not write file '\" + path + \"'\"));\n\t\t\t}\n\t\t};\n\t})();\n    \n\tfunction getKMVariable(name, required) {\n\t\tvar result = undefined;\n\t\tif (inDesignMode && designModeParams)\n\t\t\tresult = designModeParams[name];\n\t\tif (result === undefined) {\n            if (name.match(/^Instance|^Local/)) {\n                var inst = _currentApp.systemAttribute(\"KMINSTANCE\");\n                result = _kmEngine.getvariable(name, {instance: inst});\n            } else {\n                result = _kmEngine.getvariable(name);\n            }\n        }\n        if (required && !result)\n\t\t\tthrow new Error(\"Variable '\" + name + \"' is empty\");\n\t\treturn result;\n\t}\n\t// #endregion\n\n\tfunction getSelectedMacro() {\n        var selectedMacros = _kmEditor.macros.whose({selected: {\"=\": true}});\n        if (!selectedMacros || selectedMacros.length == 0)\n            return null;\n        if (selectedMacros.length > 1)\n            throw new Error(\"Multiple macros selected\");\n        return selectedMacros[0];\n\t}\n\n\tfunction setScrollBarPosition(value) {\n\t\ttry {\n\t\t\tvar se = Application(\"System Events\");\n\t\t\tvar proc = se.applicationProcesses.byName(\"Keyboard Maestro\");\n\t\t\tvar _win = proc.windows[0];\n\t\t\t_win.groups[5].splitterGroups[0].scrollAreas[2].scrollBars[0].value = parseFloat(value);\n\t\t} catch (err) {\n\t\t}\n\t}\n\n\tfunction execute() {\n        var macroUUID = getKMVariable(\"Local Macro UUID\", true);\n        var macroName = _kmEngine.processTokens(`%MacroNameForUUID%${macroUUID}%`);\n\t\tif (macroName === \"Not Found\")\n\t\t\tthrow new Error(`No macro with UUID ${macroUUID}`);\n\n\t\tvar selectFirstAction = false;\n\t\tvar selectActionUID = null;\n\t\tvar selectAction = getKMVariable(\"Local Select Action\");\n\t\tif (selectAction) {\n\t\t\tif (/^first$/i.test(selectAction))\n\t\t\t\tselectFirstAction = true;\n\t\t\telse if (/^\\d*$/.test(selectAction))\n\t\t\t\tselectActionUID = selectAction;\n\t\t\telse\n\t\t\t\tthrow new Error(`Parameter \"Select Action\" can only contain \"first\" or an Action UID`);\n\t\t}\n\n\t\t_kmEditor.editmacro(macroUUID);\n\t\tvar macro = getSelectedMacro();\n\t\tif (!macro || macro.id() !== macroUUID)\n\t\t\tthrow new Error(`Unable to select the macro \"${macroName}\"`);\n\n\t\tvar plist = PlistUtils.deserializeFromXmlString(macro.xml());\n\n\t\tvar result = {};\n\n\t\tif (!plist.Actions || plist.Actions.length == 0)\n\t\t\tresult.actionCount = 0;\n\t\telse {\n\t\t\tresult.actionCount = plist.Actions.length;\n\t\t\tresult.firstActionUID = plist.Actions[0].ActionUID;\n\t\t}\n\n\t\tif (!selectAction) {\n\t\t\tresult.result = \"ok\";\n\t\t\treturn result;\n\t\t}\n\n\t\tif (selectFirstAction) {\n\t\t\tif (!result.firstActionUID) {\n\t\t\t\tresult.result = \"empty\";\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t_kmEditor.selectaction(result.firstActionUID);\n\t\t\tresult.result = \"selected\";\n\t\t\treturn result;\n\t\t}\n\n\t\ttry {\n\t\t\t_kmEditor.selectaction(selectActionUID);\n\t\t\tvar scrollBarPosition = getKMVariable(\"Local Scroll Bar Position\");\n\t\t} catch (error) {\n\t\t}\n\n\t\tif (scrollBarPosition)\n\t\t\tsetScrollBarPosition(scrollBarPosition);\n\n\t\tresult.result = \"selected\";\n\t\treturn result;\n}\n\n\t// #region ======== Runner Code =============================\n\tfunction run() {\n\t\tif (inDesignMode) {\n\t\t\ttry {\n\t\t\t\treturn execute();\n\t\t\t} catch (e) {\n\t\t\t\treturn {result: \"error\", errorMessage: `Error on line: ${e.line}: ${e.message}`};\n\t\t\t} finally {\n\t\t\t\ttry {\n\t\t\t\t\tif (_editorAppName && Application(_editorAppName).isRunning) {\n\t\t\t\t\t\tApplication(_editorAppName).activate();\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(\"Error in try..finally: \" + e);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\treturn execute();\n\t\t\t} catch (e) {\n\t\t\t\treturn {result: \"error\", errorMessage: e.message};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(run());\n\t// #endregion\n})(false);",
			"NotifyOnFailure": false
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "Abort if 'Local_Result' doesn't start with '{'",
			"ActionUID": 85608,
			"IsDisclosed": false,
			"ActionColor": "Yellow",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "None",
				"ConditionList": [
					{
						"ConditionType": "Variable",
						"VariableValue": "{",
						"Variable": "Local_Result",
						"VariableConditionType": "StartsWith"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "PromptForUserInput",
					"Title": "%ExecutingMacro%",
					"ActionName": "Prompt error with cancel: 'An error has occurred'",
					"Prompt": "Unexpected result in %ExecutingThisMacro%: %Variable%Local_Result%",
					"ActionUID": 85609,
					"TimeOutAbortsMacro": true,
					"Buttons": [
						{
							"Button": "OK",
							"Cancel": true
						}
					],
					"Variables": []
				}
			]
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "Abort if there's an error",
			"ActionUID": 95706,
			"IsDisclosed": false,
			"ActionColor": "Yellow",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "All",
				"ConditionList": [
					{
						"ConditionType": "Text",
						"TextValue": "error",
						"Text": "%JSONValue%Local_Result.result%",
						"TextConditionType": "Is"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "PromptForUserInput",
					"Title": "%ExecutingThisMacro%",
					"ActionName": "Prompt error with cancel: 'An error has occurred'",
					"Prompt": "%JSONValue%Local_Result.errorMessage%",
					"ActionUID": 95707,
					"TimeOutAbortsMacro": true,
					"Buttons": [
						{
							"Button": "OK",
							"Cancel": true
						}
					],
					"Variables": []
				}
			]
		},
		{
			"MacroActionType": "IfThenElse",
			"ActionName": "Select all, delete if needed",
			"ActionUID": 116989,
			"IsDisclosed": false,
			"ActionColor": "Green",
			"ElseActions": [],
			"TimeOutAbortsMacro": true,
			"Conditions": {
				"ConditionListMatch": "All",
				"ConditionList": [
					{
						"ConditionType": "Text",
						"TextValue": "selected",
						"Text": "%JSONValue%Local_Result.result%",
						"TextConditionType": "Is"
					},
					{
						"ConditionType": "Text",
						"TextValue": "",
						"Text": "%Variable%Local_SelectAll%%Variable%Local_DeleteAll%",
						"TextConditionType": "IsNotEmpty"
					}
				]
			},
			"ElseActionListDisclosed": false,
			"ThenActions": [
				{
					"MacroActionType": "IfThenElse",
					"ActionName": "Select All, if the menu item is enabled",
					"ActionUID": 116763,
					"ActionColor": "Aqua",
					"ElseActions": [],
					"TimeOutAbortsMacro": true,
					"Conditions": {
						"ConditionListMatch": "All",
						"ConditionList": [
							{
								"MenuConditionType": "IsEnabled",
								"ConditionType": "Menu",
								"MenuConditionSelectionType": "Path",
								"MenuModifiers": 256,
								"MenuShortcut": "C",
								"MenuTitle": "Edit>Select All"
							}
						]
					},
					"ElseActionListDisclosed": false,
					"ThenActions": [
						{
							"MacroActionType": "SelectMenuItem",
							"IsDisclosed": false,
							"TargetApplication": {
								"BundleIdentifier": "com.stairways.keyboardmaestro.editor",
								"Name": "Keyboard Maestro",
								"NewFile": "/Applications/Keyboard Maestro.app"
							},
							"TargetingType": "Specific",
							"Menu": [
								"Edit",
								"Select All"
							],
							"ActionUID": 116991
						}
					]
				},
				{
					"MacroActionType": "IfThenElse",
					"ActionName": "Delete All, if needed",
					"ActionUID": 116992,
					"ActionColor": "Aqua",
					"ElseActions": [],
					"TimeOutAbortsMacro": true,
					"Conditions": {
						"ConditionListMatch": "All",
						"ConditionList": [
							{
								"ConditionType": "Calculation",
								"Text": "Local_DeleteAll"
							}
						]
					},
					"ElseActionListDisclosed": false,
					"ThenActions": [
						{
							"MacroActionType": "SimulateKeystroke",
							"ActionUID": 117038,
							"IsDisclosed": false,
							"ReleaseAll": false,
							"TargetApplication": {},
							"TargetingType": "Front",
							"KeyCode": 51,
							"Modifiers": 0
						}
					]
				}
			]
		},
		{
			"MacroActionType": "Pause",
			"IsDisclosed": false,
			"TimeOutAbortsMacro": true,
			"Time": ".3",
			"ActionUID": 86900
		},
		{
			"MacroActionType": "Return",
			"IsDisclosed": false,
			"Text": "%Variable%Local_Result%",
			"ActionUID": 92677
		}
	]
}