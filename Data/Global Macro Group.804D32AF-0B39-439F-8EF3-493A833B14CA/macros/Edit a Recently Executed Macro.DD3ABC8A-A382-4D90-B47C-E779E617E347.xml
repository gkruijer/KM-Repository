<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Actions</key>
		<array>
			<dict>
				<key>ActionColor</key>
				<string>Magenta</string>
				<key>ActionName</key>
				<string>MACRO</string>
				<key>ActionNotes</key>
				<string>Sauer</string>
				<key>ActionUID</key>
				<integer>16622233</integer>
				<key>MacroActionType</key>
				<string>Comment</string>
				<key>StyledText</key>
				<data>
							cnRmZAAAAAADAAAAAgAA
							AAcAAABUWFQucnRmAQAA
							AC5PBAAAKwAAAAEAAABH
							BAAAe1xydGYxXGFuc2lc
							YW5zaWNwZzEyNTJcY29j
							b2FydGYyODE4Clxjb2Nv
							YXRleHRzY2FsaW5nMFxj
							b2NvYXBsYXRmb3JtMHtc
							Zm9udHRibFxmMFxmbmls
							XGZjaGFyc2V0MCBIZWx2
							ZXRpY2FOZXVlLUJvbGQ7
							XGYxXGZuaWxcZmNoYXJz
							ZXQwIEhlbHZldGljYU5l
							dWU7XGYyXGZzd2lzc1xm
							Y2hhcnNldDAgSGVsdmV0
							aWNhOwp9CntcY29sb3J0
							Ymw7XHJlZDI1NVxncmVl
							bjI1NVxibHVlMjU1O1xy
							ZWQwXGdyZWVuMFxibHVl
							MjU1O1xyZWQwXGdyZWVu
							MFxibHVlMDt9CntcKlxl
							eHBhbmRlZGNvbG9ydGJs
							OztcY3NzcmdiXGMxNjgw
							XGMxOTgzNVxjMTAwMDAw
							O1xjc3NyZ2JcYzBcYzBc
							YzA7fQpcZGVmdGFiNTYw
							ClxwYXJkXHBhcmRlZnRh
							YjU2MFxzbGxlYWRpbmcy
							MFxwYXJ0aWdodGVuZmFj
							dG9yMAoKXGYwXGJcZnMy
							NiBcY2YyIEVkaXQgYSBS
							ZWNlbnRseSBFeGVjdXRl
							ZCBNYWNybwpcZjFcYjAg
							XGNmMCAsIHYyLjAKXGYy
							XGZzMjQgXApccGFyZFx0
							eDU2MFx0eDExMjBcdHgx
							NjgwXHR4MjI0MFx0eDI4
							MDBcdHgzMzYwXHR4Mzky
							MFx0eDQ0ODBcdHg1MDQw
							XHR4NTYwMFx0eDYxNjBc
							dHg2NzIwXHBhcmRlZnRh
							YjU2MFxwYXJkaXJuYXR1
							cmFsXHBhcnRpZ2h0ZW5m
							YWN0b3IwClxjZjAgcmV2
							aXNlZDogMjAyNC0wOS0x
							NCwgSmltIFNhdWVyXApc
							ClxwYXJkXHBhcmRlZnRh
							YjU2MFxzbGxlYWRpbmcy
							MFxwYXJ0aWdodGVuZmFj
							dG9yMAoKXGYxXGZzMjYg
							XGNmMCBUaGUgbGF0ZXN0
							IHZlcnNpb24gb2YgdGhp
							cyBtYWNybyBhbmQgaXRz
							IGRvY3VtZW50YXRpb24g
							aXMgYXZhaWxhYmxlIG9u
							IHRoZSAKXGYwXGIgXGNm
							MyBLZXlib2FyZCBNYWVz
							dHJvIEZvcnVtClxmMVxi
							MCBcY2YwIDpcClxwYXJk
							XHBhcmRlZnRhYjU2MFxz
							bGxlYWRpbmcyMFxwYXJ0
							aWdodGVuZmFjdG9yMAp7
							XGZpZWxke1wqXGZsZGlu
							c3R7SFlQRVJMSU5LICJo
							dHRwczovL2ZvcnVtLmtl
							eWJvYXJkbWFlc3Ryby5j
							b20vdC9tYWNyby1lZGl0
							LWEtcmVjZW50bHktZXhl
							Y3V0ZWQtbWFjcm8tdjEt
							MC8zNzUyNCJ9fXtcZmxk
							cnNsdCBcY2YwIGh0dHBz
							Oi8vZm9ydW0ua2V5Ym9h
							cmRtYWVzdHJvLmNvbS90
							L21hY3JvLWVkaXQtYS1y
							ZWNlbnRseS1leGVjdXRl
							ZC1tYWNyby8zNzUyNH19
							XAp9AQAAACMAAAABAAAA
							BwAAAFRYVC5ydGYQAAAA
							BwLlZrYBAAAAAAAAAAAA
							AA==
							</data>
				<key>Title</key>
				<string></string>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Magenta</string>
				<key>ActionName</key>
				<string>Description: SETTING (SecondaryTrigger_NoEntries)</string>
				<key>ActionNotes</key>
				<string>Sauer</string>
				<key>ActionUID</key>
				<integer>16622234</integer>
				<key>MacroActionType</key>
				<string>Comment</string>
				<key>StyledText</key>
				<data>
							cnRmZAAAAAADAAAAAgAA
							AAcAAABUWFQucnRmAQAA
							AC4nBgAAKwAAAAEAAAAf
							BgAAe1xydGYxXGFuc2lc
							YW5zaWNwZzEyNTJcY29j
							b2FydGYyODE4Clxjb2Nv
							YXRleHRzY2FsaW5nMFxj
							b2NvYXBsYXRmb3JtMHtc
							Zm9udHRibFxmMFxmbmls
							XGZjaGFyc2V0MCBIZWx2
							ZXRpY2FOZXVlO1xmMVxm
							bmlsXGZjaGFyc2V0MCBM
							dWNpZGFHcmFuZGU7XGYy
							XGZuaWxcZmNoYXJzZXQw
							IEhlbHZldGljYU5ldWUt
							Qm9sZDsKXGYzXGZuaWxc
							ZmNoYXJzZXQwIEhlbHZl
							dGljYU5ldWUtSXRhbGlj
							O30Ke1xjb2xvcnRibDtc
							cmVkMjU1XGdyZWVuMjU1
							XGJsdWUyNTU7XHJlZDE1
							NlxncmVlbjE1NlxibHVl
							MTU2O30Ke1wqXGV4cGFu
							ZGVkY29sb3J0Ymw7O1xj
							c3NyZ2JcYzY3NDUxXGM2
							NzQ1MVxjNjc0NTE7fQpc
							ZGVmdGFiNTYwClxwYXJk
							XHBhcmRlZnRhYjU2MFxz
							bGxlYWRpbmcyMFxwYXJ0
							aWdodGVuZmFjdG9yMAoK
							XGYwXGZzMjYgXGNmMCBO
							dW1iZXIgb2YgZW50cmll
							cyBpblxleHBuZDBcZXhw
							bmR0dzBca2VybmluZzAK
							XCdhMHtcZmllbGR7XCpc
							ZmxkaW5zdHtIWVBFUkxJ
							TksgImh0dHBzOi8vd2lr
							aS5rZXlib2FyZG1hZXN0
							cm8uY29tL2FjdGlvbi9Q
							cm9tcHRfV2l0aF9MaXN0
							In19e1xmbGRyc2x0IFxj
							ZjIgXHVsIFx1bGMyIFBy
							b21wdCBXaXRoIExpc3R9
							fVwnYTBca2VybmluZzFc
							ZXhwbmQwXGV4cG5kdHcw
							IGlmICVUcmlnZ2VyVmFs
							dWUlIGluY2x1ZGVzIFNo
							aWZ0ICgKXGYxIFx1YzBc
							dTg2NzkgKS4KXGYwICBU
							aGUgZGVmYXVsdCB2YWx1
							ZSBpcyAKXGYyXGIgMTQK
							XGYwXGIwIC5cClwKSWYg
							dGhlIHZhbHVlIApcZjNc
							aSBzdGFydHMgd2l0aApc
							ZjBcaTAgIHRoZSBwbHVz
							IHNpZ24sIGUuZy4sIApc
							ZjJcYiArMTQKXGYwXGIw
							ICwgdGhlIHNldHRpbmcg
							YmVsb3csIApcZjJcYiBS
							ZWdleFBhdHRlcm5zX01h
							Y3Jvc1RvRXhjbHVkZQpc
							ZjBcYjAgLCB3aWxsIGJl
							IGlnbm9yZWQuXApcCklm
							IHRoZSAlVHJpZ2dlclZh
							bHVlJSBkb2VzIG5vdCBp
							bmNsdWRlIFNoaWZ0ICgK
							XGYxIFx1YzBcdTg2Nzkg
							KQpcZjAgLCB0aGUgbWFj
							cm8gd2lsbCBub3QgZGlz
							cGxheSBhIGxpc3QgYW5k
							IHRoZSBtb3N0IHJlY2Vu
							dGx5IHJ1biBtYWNybyB3
							aWxsIGJlIGltbWVkaWF0
							ZWx5IG9wZW5lZCBpbiB0
							aGUgS2V5Ym9hcmQgTWFl
							c3RybyBlZGl0b3IqKi5c
							ClwKKipJZiB0aGlzIG1h
							Y3JvIGlzIHJ1biBmcm9t
							IGFub3RoZXIgbWFjcm8g
							dXNpbmcgdGhlXGV4cG5k
							MFxleHBuZHR3MFxrZXJu
							aW5nMApcJ2Ewe1xmaWVs
							ZHtcKlxmbGRpbnN0e0hZ
							UEVSTElOSyAiaHR0cHM6
							Ly93aWtpLmtleWJvYXJk
							bWFlc3Ryby5jb20vYWN0
							aW9uL0V4ZWN1dGVfYV9N
							YWNybyJ9fXtcZmxkcnNs
							dCBcY2YyIFx1bCBcdWxj
							MiBFeGVjdXRlIGEgTWFj
							cm99fVwnYTBhY3Rpb24g
							KG9yIHZpYSB7XGZpZWxk
							e1wqXGZsZGluc3R7SFlQ
							RVJMSU5LICJodHRwczov
							L2ZvcnVtLmtleWJvYXJk
							bWFlc3Ryby5jb20vdC91
							c2luZy1hbGZyZWQtdG8t
							dHJpZ2dlci1rZXlib2Fy
							ZC1tYWVzdHJvLW1hY3Jv
							cy8zMjYwNCJ9fXtcZmxk
							cnNsdCBBcHBsZVNjcmlw
							dH19KSwgdGhlIG51bWJl
							ciBvZiBlbnRyaWVzIGlu
							IHRoZSBQV0wgY2FuIGJl
							IHNwZWNpZmllZCBpbiB0
							aGUgClxmMlxiIFdpdGgg
							UGFyYW1ldGVyClxmMFxi
							MCAgZmllbGQufQEAAAAj
							AAAAAQAAAAcAAABUWFQu
							cnRmEAAAANOU5Ga2AQAA
							AAAAAAAAAAA=
							</data>
				<key>Title</key>
				<string></string>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Orange</string>
				<key>ActionName</key>
				<string>SETTING (SecondaryTrigger_NoEntries)</string>
				<key>ActionUID</key>
				<integer>16146988</integer>
				<key>MacroActionType</key>
				<string>SetVariableToText</string>
				<key>Text</key>
				<string>14</string>
				<key>Variable</key>
				<string>local_SecondaryTrigger_NoEntries</string>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Magenta</string>
				<key>ActionName</key>
				<string>Description: SETTING (RegexPatterns_MacrosToExclude)</string>
				<key>ActionUID</key>
				<integer>16622235</integer>
				<key>MacroActionType</key>
				<string>Comment</string>
				<key>StyledText</key>
				<data>
							cnRmZAAAAAADAAAAAgAA
							AAcAAABUWFQucnRmAQAA
							AC7cBAAAKwAAAAEAAADU
							BAAAe1xydGYxXGFuc2lc
							YW5zaWNwZzEyNTJcY29j
							b2FydGYyNzYxClxjb2Nv
							YXRleHRzY2FsaW5nMFxj
							b2NvYXBsYXRmb3JtMHtc
							Zm9udHRibFxmMFxmbmls
							XGZjaGFyc2V0MCBIZWx2
							ZXRpY2FOZXVlO1xmMVxm
							bmlsXGZjaGFyc2V0MCBN
							ZW5sby1SZWd1bGFyO1xm
							Mlxmcm9tYW5cZmNoYXJz
							ZXQwIFRpbWVzLVJvbWFu
							OwpcZjNcZm5pbFxmY2hh
							cnNldDAgSGVsdmV0aWNh
							TmV1ZS1JdGFsaWM7fQp7
							XGNvbG9ydGJsO1xyZWQy
							NTVcZ3JlZW4yNTVcYmx1
							ZTI1NTtccmVkMFxncmVl
							bjBcYmx1ZTA7XHJlZDBc
							Z3JlZW4wXGJsdWUwO1xy
							ZWQyNlxncmVlbjI2XGJs
							dWUyNjsKfQp7XCpcZXhw
							YW5kZWRjb2xvcnRibDs7
							XGNzc3JnYlxjMFxjMFxj
							MDtcY3NncmF5XGMwXGMw
							O1xjc3NyZ2JcYzEzMzMz
							XGMxMzMzM1xjMTMzMzM7
							Cn0KXGRlZnRhYjU2MApc
							cGFyZFxwYXJkZWZ0YWI1
							NjBcc2xsZWFkaW5nMjBc
							cGFydGlnaHRlbmZhY3Rv
							cjAKClxmMFxmczI2IFxj
							ZjIgXGNiMyBNYWNyb3Mg
							Y2FuIGJlIGV4Y2x1ZGVk
							IGJ5IHNwZWNpZnlpbmcg
							b3B0aW9uYWwgcmVndWxh
							ciBleHByZXNzaW9uIHBh
							dHRlcm5zIChvbmUgcGVy
							IGxpbmUpLiBGb3IgZXhh
							bXBsZSwgaWYgdGhlIGZv
							bGxvd2luZyB0d28gbGlu
							ZXMgYXJlIGNvbmZpZ3Vy
							ZWRcJzg1XApcClxwYXJk
							XHBhcmRlZnRhYjcyMFxw
							YXJ0aWdodGVuZmFjdG9y
							MAoKXGYxIFxjZjIgXGV4
							cG5kMFxleHBuZHR3MFxr
							ZXJuaW5nMApeX1wKW1V1
							XW50aXRsZWQKXGYyXGZz
							MjVcZnNtaWxsaTEyOTA3
							IFwKXHBhcmRccGFyZGVm
							dGFiNTYwXHNsbGVhZGlu
							ZzIwXHBhcnRpZ2h0ZW5m
							YWN0b3IwCgpcZjBcZnMy
							NiBcY2YyIFxrZXJuaW5n
							MVxleHBuZDBcZXhwbmR0
							dzAgXApccGFyZFxwYXJk
							ZWZ0YWI3MjBcc2EzMDBc
							cGFydGlnaHRlbmZhY3Rv
							cjAKXGNmMiBcZXhwbmQw
							XGV4cG5kdHcwXGtlcm5p
							bmcwClwnODVtYWNybyBu
							YW1lcyB0aGF0XCdhMApc
							ZjNcaSBiZWdpbiB3aXRo
							ClxmMFxpMCBcJ2EwdW5k
							ZXJzY29yZSAoIApcZjEg
							XwpcZjAgICkgb3JcJ2Ew
							ClxmM1xpIGluY2x1ZGUK
							XGYwXGkwIFwnYTAKXGYx
							IFVudGl0bGVkClxmMCBc
							J2Ewb3JcJ2EwClxmMSB1
							bnRpdGxlZApcZjAgXCdh
							MGFyZSBleGNsdWRlZC5c
							Ck5vdGUgdGhhdCB0aGUg
							Zm9sbG93aW5nIGFyZSBh
							dXRvbWF0aWNhbGx5IGV4
							Y2x1ZGVkOlwKXHBhcmRc
							cGFyZGVmdGFiNzIwXHBh
							cnRpZ2h0ZW5mYWN0b3Iw
							CgpcZjEgXGNmNCBeJUV4
							ZWN1dGluZ1RoaXNNYWNy
							byUkXApeJUV4ZWN1dGlu
							Z01hY3JvJSR9AQAAACMA
							AAABAAAABwAAAFRYVC5y
							dGYQAAAAfXzYZrYBAAAA
							AAAAAAAAAA==
							</data>
				<key>Title</key>
				<string></string>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Orange</string>
				<key>ActionName</key>
				<string>SETTING (RegexPatterns_MacrosToExclude)</string>
				<key>ActionUID</key>
				<integer>16622236</integer>
				<key>MacroActionType</key>
				<string>SetVariableToText</string>
				<key>Text</key>
				<string>^This macro name would be excluded$
^Another macro name to exclude$</string>
				<key>Variable</key>
				<string>local_RegexPatterns_MacrosToExclude</string>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>Discern the specified operation mode of this macro: a) edit last executed macro, or b) PWL of recently executed macros</string>
				<key>ActionUID</key>
				<integer>16147636</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16147637</integer>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%Trigger%~%TriggerValue%</string>
						<key>Variable</key>
						<string>local_TriggerInfo</string>
					</dict>
					<dict>
						<key>ActionColor</key>
						<string>Yellow</string>
						<key>ActionUID</key>
						<integer>16147639</integer>
						<key>CaseEntries</key>
						<array>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionColor</key>
										<string>Magenta</string>
										<key>ActionName</key>
										<string>macro started from editor</string>
										<key>ActionUID</key>
										<integer>16147640</integer>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>StyledText</key>
										<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
													</data>
										<key>Title</key>
										<string></string>
									</dict>
									<dict>
										<key>ActionUID</key>
										<integer>16147641</integer>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>%Variable%local_SecondaryTrigger_NoEntries%</string>
										<key>Variable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>Is</string>
								<key>TestValue</key>
								<string>Editor~</string>
							</dict>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionColor</key>
										<string>Magenta</string>
										<key>ActionName</key>
										<string>caller started macro with With Parameter null</string>
										<key>ActionUID</key>
										<integer>16147642</integer>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>StyledText</key>
										<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
													</data>
										<key>Title</key>
										<string></string>
									</dict>
									<dict>
										<key>ActionUID</key>
										<integer>16147643</integer>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>%Variable%local_SecondaryTrigger_NoEntries%</string>
										<key>Variable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>EndsWith</string>
								<key>TestValue</key>
								<string>~</string>
							</dict>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionColor</key>
										<string>Magenta</string>
										<key>ActionName</key>
										<string>macro started with secondary hot key</string>
										<key>ActionUID</key>
										<integer>16147644</integer>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>StyledText</key>
										<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
													</data>
										<key>Title</key>
										<string></string>
									</dict>
									<dict>
										<key>ActionUID</key>
										<integer>16147645</integer>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>%Variable%local_SecondaryTrigger_NoEntries%</string>
										<key>Variable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>Matches</string>
								<key>TestValue</key>
								<string>⇧(.*)~(.*)⇧</string>
							</dict>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionColor</key>
										<string>Magenta</string>
										<key>ActionName</key>
										<string>macro started with primary hot key</string>
										<key>ActionUID</key>
										<integer>16147646</integer>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>StyledText</key>
										<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
													</data>
										<key>Title</key>
										<string></string>
									</dict>
									<dict>
										<key>ActionUID</key>
										<integer>16147647</integer>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>1</string>
										<key>Variable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>Matches</string>
								<key>TestValue</key>
								<string>~(⌃|⌥|⇧|⌘)</string>
							</dict>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionColor</key>
										<string>Magenta</string>
										<key>ActionName</key>
										<string>caller started macro with With Parameter 𝙣 or +𝙣</string>
										<key>ActionUID</key>
										<integer>16147648</integer>
										<key>IsDisclosed</key>
										<false/>
										<key>MacroActionType</key>
										<string>Comment</string>
										<key>StyledText</key>
										<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
													</data>
										<key>Title</key>
										<string></string>
									</dict>
									<dict>
										<key>Action</key>
										<string>CaseSensitiveRegEx</string>
										<key>ActionUID</key>
										<integer>16147649</integer>
										<key>Destination</key>
										<string>Variable</string>
										<key>DestinationVariable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
										<key>MacroActionType</key>
										<string>SearchReplace</string>
										<key>Replace</key>
										<string>$1</string>
										<key>Search</key>
										<string>.+~(.*)</string>
										<key>Source</key>
										<string>Variable</string>
										<key>Variable</key>
										<string>local_TriggerInfo</string>
										<key>Which</key>
										<string>All</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>Otherwise</string>
								<key>TestValue</key>
								<string></string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>Switch</string>
						<key>Source</key>
						<string>Variable</string>
						<key>Variable</key>
						<string>local_TriggerInfo</string>
					</dict>
					<dict>
						<key>ActionColor</key>
						<string>Yellow</string>
						<key>ActionUID</key>
						<integer>16147650</integer>
						<key>CaseEntries</key>
						<array>
							<dict>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionUID</key>
										<integer>16147651</integer>
										<key>MacroActionType</key>
										<string>SetVariableToCalculation</string>
										<key>Text</key>
										<string>1</string>
										<key>UseFormat</key>
										<false/>
										<key>Variable</key>
										<string>local_IgnorePatterns</string>
									</dict>
									<dict>
										<key>Action</key>
										<string>CaseSensitiveRegEx</string>
										<key>ActionUID</key>
										<integer>16147652</integer>
										<key>Destination</key>
										<string>Variable</string>
										<key>DestinationVariable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
										<key>MacroActionType</key>
										<string>SearchReplace</string>
										<key>Replace</key>
										<string>$1</string>
										<key>Search</key>
										<string>\+(.*)</string>
										<key>Source</key>
										<string>Variable</string>
										<key>Variable</key>
										<string>local_SpecifiedNoRecentlyExecutedMacros</string>
										<key>Which</key>
										<string>All</string>
									</dict>
								</array>
								<key>ConditionType</key>
								<string>StartsWith</string>
								<key>TestValue</key>
								<string>+</string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>Switch</string>
						<key>Source</key>
						<string>Variable</string>
						<key>Variable</key>
						<string>local_SpecifiedNoRecentlyExecutedMacros</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>N most recently run macros (Name, UUID, Stats) by @ComplexPoint</string>
				<key>ActionUID</key>
				<integer>16622237</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionColor</key>
						<string>Magenta</string>
						<key>ActionName</key>
						<string>Why + 20?</string>
						<key>ActionUID</key>
						<integer>16622238</integer>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>StyledText</key>
						<data>
								cnRmZAAAAAAD
								AAAAAgAAAAcA
								AABUWFQucnRm
								AQAAAC6jAgAA
								KwAAAAEAAACb
								AgAAe1xydGYx
								XGFuc2lcYW5z
								aWNwZzEyNTJc
								Y29jb2FydGYy
								NzYxClxjb2Nv
								YXRleHRzY2Fs
								aW5nMFxjb2Nv
								YXBsYXRmb3Jt
								MHtcZm9udHRi
								bFxmMFxmc3dp
								c3NcZmNoYXJz
								ZXQwIEhlbHZl
								dGljYTtcZjFc
								ZnN3aXNzXGZj
								aGFyc2V0MCBI
								ZWx2ZXRpY2Et
								Qm9sZDt9Cntc
								Y29sb3J0Ymw7
								XHJlZDI1NVxn
								cmVlbjI1NVxi
								bHVlMjU1O1xy
								ZWQwXGdyZWVu
								MFxibHVlMDt9
								CntcKlxleHBh
								bmRlZGNvbG9y
								dGJsOztcY3Nz
								cmdiXGMwXGMw
								XGMwXGM4NDcw
								NlxjbmFtZSBj
								b250cm9sVGV4
								dENvbG9yO30K
								XHBhcmRcdHg1
								NjBcdHgxMTIw
								XHR4MTY4MFx0
								eDIyNDBcdHgy
								ODAwXHR4MzM2
								MFx0eDM5MjBc
								dHg0NDgwXHR4
								NTA0MFx0eDU2
								MDBcdHg2MTYw
								XHR4NjcyMFxw
								YXJkaXJuYXR1
								cmFsXHBhcnRp
								Z2h0ZW5mYWN0
								b3IwCgpcZjBc
								ZnMyNiBcY2Yy
								IFJldGlldmUg
								ZXh0cmEgcnVu
								IGhpc3Rvcnkg
								c2luY2UgJUV4
								ZWN1dGluZ01h
								Y3JvJSBvciAl
								RXhlY3V0aW5n
								VGhpc01hY3Jv
								JSBlbnRyaWVz
								IGNvdWxkIGJl
								IGluIHRoZSBk
								YXRhIGFuZCB0
								aGUgbGlzdCBz
								aG91bGQgZXhj
								bHVkZSB0aGVz
								ZSBlbnRyaWVz
								LiBJZiBsb2Nh
								bF9SZWdleFBh
								dHRlcnNfTWFj
								cm9Ub0V4Y2x1
								ZGUgaXMgYSBs
								b25nIGxpc3Qs
								IHRoZSB2YWx1
								ZSBvZiAKXGYx
								XGIgMjAKXGYw
								XGIwICBtYXkg
								bmVlZCB0byBi
								ZSBpbmNyZWFz
								ZWQufQEAAAAj
								AAAAAQAAAAcA
								AABUWFQucnRm
								EAAAACBm1ma2
								AQAAAAAAAAAA
								AAA=
									</data>
						<key>Title</key>
						<string></string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16622239</integer>
						<key>MacroActionType</key>
						<string>SetVariableToCalculation</string>
						<key>Text</key>
						<string>CALCULATE(local_SpecifiedNoRecentlyExecutedMacros) + 20</string>
						<key>UseFormat</key>
						<false/>
						<key>Variable</key>
						<string>local_N</string>
					</dict>
					<dict>
						<key>ActionColor</key>
						<string>Magenta</string>
						<key>ActionName</key>
						<string>Attribution</string>
						<key>ActionUID</key>
						<integer>16146978</integer>
						<key>MacroActionType</key>
						<string>Comment</string>
						<key>StyledText</key>
						<data>
								cnRmZAAAAAAD
								AAAAAgAAAAcA
								AABUWFQucnRm
								AQAAAC4NBAAA
								KwAAAAEAAAAF
								BAAAe1xydGYx
								XGFuc2lcYW5z
								aWNwZzEyNTJc
								Y29jb2FydGYy
								ODE4Clxjb2Nv
								YXRleHRzY2Fs
								aW5nMFxjb2Nv
								YXBsYXRmb3Jt
								MHtcZm9udHRi
								bFxmMFxmbmls
								XGZjaGFyc2V0
								MCBIZWx2ZXRp
								Y2FOZXVlO30K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								XHJlZDBcZ3Jl
								ZW4wXGJsdWUw
								O1xyZWQwXGdy
								ZWVuMFxibHVl
								MjMzO30Ke1wq
								XGV4cGFuZGVk
								Y29sb3J0Ymw7
								O1xjc3NyZ2Jc
								YzBcYzBcYzA7
								XGNzc3JnYlxj
								MFxjMFxjOTMz
								MzM7fQpccGFy
								ZFx0eDU2MFx0
								eDExMjBcdHgx
								NjgwXHR4MjI0
								MFx0eDI4MDBc
								dHgzMzYwXHR4
								MzkyMFx0eDQ0
								ODBcdHg1MDQw
								XHR4NTYwMFx0
								eDYxNjBcdHg2
								NzIwXHBhcmRp
								cm5hdHVyYWxc
								cGFydGlnaHRl
								bmZhY3RvcjAK
								ClxmMFxmczI2
								IFxjZjIgVGhl
								IEphdmFTY3Jp
								cHQgaW4gdGhl
								IG5leHQgYWN0
								aW9uIHdhcyBz
								aGFyZWQgYnlc
								ZXhwbmQwXGV4
								cG5kdHcwXGtl
								cm5pbmcwClwn
								YTB7XGZpZWxk
								e1wqXGZsZGlu
								c3R7SFlQRVJM
								SU5LICJodHRw
								czovL2ZvcnVt
								LmtleWJvYXJk
								bWFlc3Ryby5j
								b20vdS9Db21w
								bGV4UG9pbnQv
								c3VtbWFyeSJ9
								fXtcZmxkcnNs
								dCBcdWwgXHVs
								YzMgQENvbXBs
								ZXhQb2ludH19
								XCdhMGF0OlwK
								e1xmaWVsZHtc
								KlxmbGRpbnN0
								e0hZUEVSTElO
								SyAiaHR0cHM6
								Ly9mb3J1bS5r
								ZXlib2FyZG1h
								ZXN0cm8uY29t
								L3QvMzc0Mzkv
								MiJ9fXtcZmxk
								cnNsdCBodHRw
								czovL2ZvcnVt
								LmtleWJvYXJk
								bWFlc3Ryby5j
								b20vdC8zNzQz
								OS8yfX0gXApc
								ClJldmlzaW9u
								cyBieSBKaW0g
								U2F1ZXJcClwK
								XCc5NSBFbmFi
								bGUgY29tcGF0
								aWJpbGl0eSB3
								aXRoIEtleWJv
								YXJkIE1hZXN0
								cm8gdjEwLjIr
								XApccGFyZFx0
								eDU2MFx0eDEx
								MjBcdHgxNjgw
								XHR4MjI0MFx0
								eDI4MDBcdHgz
								MzYwXHR4Mzky
								MFx0eDQ0ODBc
								dHg1MDQwXHR4
								NTYwMFx0eDYx
								NjBcdHg2NzIw
								XHBhcmRlZnRh
								YjU2MFxwYXJk
								aXJuYXR1cmFs
								XHBhcnRpZ2h0
								ZW5mYWN0b3Iw
								ClxjZjIgXGtl
								cm5pbmcxXGV4
								cG5kMFxleHBu
								ZHR3MCBcClwn
								OTUgRXhjbHVk
								ZSBhbGwgZW50
								cmllcyBmb3Ig
								ZGVsZXRlZCBt
								YWNyb3N9AQAA
								ACMAAAABAAAA
								BwAAAFRYVC5y
								dGYQAAAAlmbk
								ZrYBAAAAAAAA
								AAAAAA==
									</data>
						<key>Title</key>
						<string></string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16146965</integer>
						<key>DisplayKind</key>
						<string>Variable</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>(() =&gt; {
    "use strict";

    /*
      2024-09-14, Jim Sauer
      Modified @ComplexPoint's JXA found here:
        https://forum.keyboardmaestro.com/t/37439/2
       1. Enable compatibility with Keyboard Maestro v10.2+
       2. Exclude all entries for deleted macros
    */

    // N most recently used Keyboard Maestro macros
    // Ver 0.3 indicates any recently used macros which
    //         have been deleted since last use.


    /*
      2024-09-13: Modified by Jim Sauer
      To enable compatibility with Keyboard Maestro v10.2+, 
      replaced main with the following
	*/

    /*
        const main = () =&gt;
            kmrecentlyExecutedMacros(
                kmvar.local_N
            );
    */

    var app = Application.currentApplication()
    app.includeStandardAdditions = true

    var kmInst = app.systemAttribute("KMINSTANCE");
    var kmeApp = Application("Keyboard Maestro Engine")

    var myN = kmeApp.getvariable("local_N", {
        instance: kmInst
    });

    const main = () =&gt;
        kmrecentlyExecutedMacros(
            myN
        );


    const kmrecentlyExecutedMacros = n =&gt; {
        const
            macros = Application("Keyboard Maestro")
            .macros,
            fpKMStats = combine(
                applicationSupportPath()
            )(
                "Keyboard Maestro/Keyboard Maestro Macro Stats.plist"
            );

        return either(
            alert("Most recently triggered macros")
        )(
            xs =&gt; xs
        )(
            fmapLR(
                dict =&gt; take(n)(
                    sortDownOn(
                        uuid =&gt; dict[uuid].LastExecuted
                    )(
                        Object.keys(dict)
                        .filter(k =&gt; "All" !== k)
                    )
                )

                /*
                  2024-09-13: Modified by Jim Sauer
                  To exclude all entries for deleted macros, 
                  replaced following .map with .flatMap
                */


                /*
                .map(uuid =&gt; {
                    const macro = macros.byId(uuid);

                    return {
                        Name: macro.exists() ?
                            macro.name() : `n/a [recently deleted]`,
                        UUID: uuid,
                        ...dict[uuid],
                    };
                })
                */

                .flatMap(uuid =&gt; {
                    const macro = macros.byId(uuid);

                    return macro.exists() ? [{
                        UUID: uuid,
                        Name: macro.name(),
                        ...dict[uuid],

                    }] : []
                })

            )(
                doesFileExist(fpKMStats) ?
                jsoFromPlistPathLR(fpKMStats) :
                Left(`Stats not found at path: ${fpKMStats}`)
            )
        );
    };

    // ----------------------- JXA -----------------------

    // alert :: String =&gt; String -&gt; IO String
    const alert = title =&gt;
        s =&gt; {
            const sa = Object.assign(
                Application("System Events"), {
                    includeStandardAdditions: true
                });

            return (
                sa.activate(),
                sa.displayDialog(s, {
                    withTitle: title,
                    buttons: ["OK"],
                    defaultButton: "OK"
                }),
                s
            );
        };

    // applicationSupportPath :: () -&gt; String
    const applicationSupportPath = () =&gt; {
        const uw = ObjC.unwrap;

        return uw(
            uw($.NSFileManager.defaultManager
                .URLsForDirectoryInDomains(
                    $.NSApplicationSupportDirectory,
                    $.NSUserDomainMask
                )
            )[0].path
        );
    };


    // jsoFromPlistPathLR :: FilePath -&gt; 
    // Either String Dict 
    const jsoFromPlistPathLR = fp =&gt; {
        const
            nsDict = $.NSDictionary.dictionaryWithContentsOfURL(
                $.NSURL.fileURLWithPath(fp)
            );

        return nsDict.isNil() ?
            Left(`Could not be read as .plist: "${fp}"`) :
            Right(ObjC.deepUnwrap(nsDict));
    };

    // --------------------- GENERIC ---------------------

    // Left :: a -&gt; Either a b
    const Left = x =&gt; ({
        type: "Either",
        Left: x
    });


    // Right :: b -&gt; Either a b
    const Right = x =&gt; ({
        type: "Either",
        Right: x
    });


    // combine (&lt;/&gt;) :: FilePath -&gt; FilePath -&gt; FilePath
    const combine = fp =&gt;
        // The concatenation of two filePath segments,
        // without omission or duplication of "/".
        fp1 =&gt; Boolean(fp) &amp;&amp; Boolean(fp1) ?
        "/" === fp1.slice(0, 1) ?
        fp1 :
        "/" === fp.slice(-1) ?
        fp + fp1 :
        `${fp}/${fp1}` :
        (fp + fp1);

    // comparing :: Ord a =&gt; (b -&gt; a) -&gt; b -&gt; b -&gt; Ordering
    const comparing = f =&gt;
        // The ordering of f(x) and f(y) as a value
        // drawn from {-1, 0, 1}, representing {LT, EQ, GT}.
        x =&gt; y =&gt; {
            const
                a = f(x),
                b = f(y);

            return a &lt; b ?
                -1 :
                a &gt; b ?
                1 :
                0;
        };


    // doesFileExist :: FilePath -&gt; IO Bool
    const doesFileExist = fp =&gt; {
        const ref = Ref();

        return $.NSFileManager
            .defaultManager
            .fileExistsAtPathIsDirectory(
                $(fp)
                .stringByStandardizingPath,
                ref
            ) &amp;&amp; !ref[0];
    };


    // either :: (a -&gt; c) -&gt; (b -&gt; c) -&gt; Either a b -&gt; c
    const either = fl =&gt;
        // Application of the function fl to the
        // contents of any Left value in e, or
        // the application of fr to its Right value.
        fr =&gt; e =&gt; "Left" in e ?
        fl(e.Left) :
        fr(e.Right);


    // flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c
    const flip = op =&gt;
        // The binary function op with
        // its arguments reversed.
        1 !== op.length ?
        (a, b) =&gt; op(b, a) :
        (a =&gt; b =&gt; op(b)(a));


    // fmapLR (&lt;$&gt;) :: (b -&gt; c) -&gt; Either a b -&gt; Either a c
    const fmapLR = f =&gt;
        // Either f mapped into the contents of any Right
        // value in e, or e unchanged if is a Left value.
        e =&gt; "Left" in e ?
        e :
        Right(f(e.Right));


    // sortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]
    const sortBy = f =&gt;
        // A copy of xs sorted by the comparator function f.
        xs =&gt; xs.slice()
        .sort((a, b) =&gt; f(a)(b));


    // take :: Int -&gt; [a] -&gt; [a]
    // take :: Int -&gt; String -&gt; String
    const take = n =&gt;
        // The first n elements of a list,
        // string of characters, or stream.
        xs =&gt; "GeneratorFunction" !== xs
        .constructor.constructor.name ?
        xs.slice(0, n) :
        Array.from({
                length: n
            },
            () =&gt; {
                const x = xs.next();

                return x.done ? [] : [x.value];
            })
        .flat();


    // sortDownOn :: Ord b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]
    const sortDownOn = f =&gt;
        // Equivalent to sortBy(flip(comparing(f))), but with f(x)
        // evaluated only once for each x in xs.
        // ('Schwartzian' decorate-sort-undecorate).
        xs =&gt; sortBy(
            flip(comparing(x =&gt; x[0]))
        )(
            xs.map(x =&gt; [f(x), x])
        )
        .map(x =&gt; x[1]);

    // --------------------- LOGGING ---------------------

    // showLog :: a -&gt; IO ()
    const showLog = (...args) =&gt;
        // eslint-disable-next-line no-console
        console.log(
            args
            .map(JSON.stringify)
            .join(" -&gt; ")
        );

    // sj :: a -&gt; String
    const sj = (...args) =&gt;
        // Abbreviation of showJSON for quick testing.
        // Default indent size is two, which can be
        // overriden by any integer supplied as the
        // first argument of more than one.
        JSON.stringify.apply(
            null,
            1 &lt; args.length &amp;&amp; !isNaN(args[0]) ? [args[1], null, args[0]] : [args[0], null, 2]
        );

    return sj(main());
})();</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<false/>
						<key>UseText</key>
						<true/>
						<key>Variable</key>
						<string>local_MreJson</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>Generate the PWL entries</string>
				<key>ActionUID</key>
				<integer>16622240</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionColor</key>
						<string>Yellow</string>
						<key>ActionUID</key>
						<integer>16146274</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Calculation</string>
									<key>Text</key>
									<string>local_IgnorePatterns</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>Action</key>
								<string>IgnoreCaseRegEx</string>
								<key>ActionName</key>
								<string>Escape special characters</string>
								<key>ActionUID</key>
								<integer>16622241</integer>
								<key>Destination</key>
								<string>Variable</string>
								<key>DestinationVariable</key>
								<string>local_ExecutingThisMacroEscaped</string>
								<key>MacroActionType</key>
								<string>SearchReplace</string>
								<key>Replace</key>
								<string>\\$1</string>
								<key>Search</key>
								<string>([.*+?^=!:${}()|\[\]\/\\])</string>
								<key>Source</key>
								<string>Text</string>
								<key>Text</key>
								<string>%ExecutingThisMacro%</string>
								<key>Which</key>
								<string>All</string>
							</dict>
							<dict>
								<key>Action</key>
								<string>IgnoreCaseRegEx</string>
								<key>ActionName</key>
								<string>Escape special characters</string>
								<key>ActionUID</key>
								<integer>16622242</integer>
								<key>Destination</key>
								<string>Variable</string>
								<key>DestinationVariable</key>
								<string>local_ExecutingMacroEscaped</string>
								<key>MacroActionType</key>
								<string>SearchReplace</string>
								<key>Replace</key>
								<string>\\$1</string>
								<key>Search</key>
								<string>([.*+?^=!:${}()|\[\]\/\\])</string>
								<key>Source</key>
								<string>Text</string>
								<key>Text</key>
								<string>%ExecutingMacro%</string>
								<key>Which</key>
								<string>All</string>
							</dict>
							<dict>
								<key>ActionUID</key>
								<integer>16622243</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string>^%Variable%local_ExecutingThisMacroEscaped%$
^%Variable%local_ExecutingMacroEscaped%$
%Variable%local_RegexPatterns_MacrosToExclude%</string>
								<key>Variable</key>
								<string>local_PatternsToIgnore</string>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16146284</integer>
								<key>MacroActionType</key>
								<string>SetVariableToText</string>
								<key>Text</key>
								<string></string>
								<key>Variable</key>
								<string>local_PatternsToIgnore</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>16145611</integer>
						<key>DisplayKind</key>
						<string>Variable</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>(() =&gt; {

    "use strict";

    const generatePwlList = (input, patterns) =&gt; {

        // The invisibleChar is added to every underscore character (_) in macro names.
        // This prevents potential misinterpretation of the name within the PWL action.
        const invisibleChar = '\u200C'; // zero-width non-joiner

        const currentDateTime = new Date();

        let data = JSON.parse(input);
        let pwlList = [];

        data.forEach((item) =&gt; {
            let macroMatched = checkNameForPatterns(item.Name, cleanText(patterns));

            if (macroMatched != 1) {

                const modifiedName = item.Name.replace(/_/g, `_${invisibleChar}`);
                let timeSinceLastRun = timeSinceKMTimestamp(item.LastExecuted, currentDateTime);
                pwlList += `${item.UUID}__${modifiedName} • (${item.ExecutedCount} runs) – ${timeSinceLastRun} ago\n`;

            }

        });

        return pwlList;
    };

    const cleanText = text =&gt; text.split('\n')
        .map(line =&gt; line.trim())
        .filter(line =&gt; line.length &gt; 0)
        .join('\n');

    const checkNameForPatterns = (name, patterns) =&gt; {
        if (patterns === "") {
            return 0;
        }

        const patternArray = patterns.split('\n');

        for (const pattern of patternArray) {
            const regex = new RegExp(pattern);

            if (regex.test(name)) {
                return 1;
            }
        }

        return 0;
    };

    const timeSinceKMTimestamp = (kmTimestamp, currentDateTime) =&gt; {
        // Seconds between Unix epoch (1970-01-01) and KM epoch (2001-01-01)
        const KM_EPOCH_OFFSET = 978307200;

        // Convert KM timestamp to Unix timestamp
        const unixTimestamp = kmTimestamp + KM_EPOCH_OFFSET;

        // Convert Unix timestamp to milliseconds for JavaScript Date object
        const kmDateTime = new Date(unixTimestamp * 1000);

        const differenceInMilliseconds = currentDateTime - kmDateTime;
        const differenceInMinutes = differenceInMilliseconds / (1000 * 60);
        const differenceInHours = differenceInMilliseconds / (1000 * 60 * 60);
        const differenceInDays = differenceInMilliseconds / (1000 * 60 * 60 * 24);

        if (differenceInMinutes &lt; 10) {
            return differenceInMinutes.toFixed(1) + " mins";
        } else if (differenceInHours &lt; 1) {
            return Math.round(differenceInMinutes) + " mins";
        } else if (differenceInDays &lt; 1) {
            return differenceInHours.toFixed(1) + " hrs";
        } else {
            return Math.round(differenceInDays) + " days";
        }
    };

    const app = Application.currentApplication();
    app.includeStandardAdditions = true;

    const kmInst = app.systemAttribute("KMINSTANCE");
    const kmeApp = Application("Keyboard Maestro Engine");

    const myMreJson = kmeApp.getvariable("local_MreJson", {
        instance: kmInst
    });

    const myPatternsToIgnore = kmeApp.getvariable("local_PatternsToIgnore", {
        instance: kmInst
    });

    return generatePwlList(myMreJson, myPatternsToIgnore);

})();</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseModernSyntax</key>
						<false/>
						<key>UseText</key>
						<true/>
						<key>Variable</key>
						<string>local_MrePwlList</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionName</key>
				<string>Reduce entries to local_SpecifiedNoRecentlyExectedMacros</string>
				<key>ActionUID</key>
				<integer>16622244</integer>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>16622245</integer>
						<key>DisplayKind</key>
						<string>Variable</string>
						<key>HonourFailureSettings</key>
						<true/>
						<key>IncludeStdErr</key>
						<false/>
						<key>IncludedVariables</key>
						<array>
							<string>9999</string>
						</array>
						<key>MacroActionType</key>
						<string>ExecuteShellScript</string>
						<key>Path</key>
						<string></string>
						<key>Source</key>
						<string>Nothing</string>
						<key>Text</key>
						<string>#!/bin/bash
PATH=$PATH:/usr/local/bin

echo "$KMVAR_local_MrePwlList" | head -n $KMVAR_local_SpecifiedNoRecentlyExecutedMacros</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
						<key>Variable</key>
						<string>local_MrePwlList</string>
					</dict>
				</array>
				<key>IsDisclosed</key>
				<false/>
				<key>MacroActionType</key>
				<string>Group</string>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Yellow</string>
				<key>ActionUID</key>
				<integer>16622246</integer>
				<key>CaseEntries</key>
				<array>
					<dict>
						<key>Actions</key>
						<array>
							<dict>
								<key>Action</key>
								<string>IgnoreCaseRegEx</string>
								<key>ActionUID</key>
								<integer>16622247</integer>
								<key>Destination</key>
								<string>Variable</string>
								<key>DestinationVariable</key>
								<string>local_MreUUID</string>
								<key>MacroActionType</key>
								<string>SearchReplace</string>
								<key>Replace</key>
								<string></string>
								<key>Search</key>
								<string>__.*</string>
								<key>Source</key>
								<string>Variable</string>
								<key>Variable</key>
								<string>local_MrePwlList</string>
								<key>Which</key>
								<string>All</string>
							</dict>
						</array>
						<key>ConditionType</key>
						<string>Equal</string>
						<key>TestValue</key>
						<string>1</string>
					</dict>
					<dict>
						<key>Actions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16622248</integer>
								<key>AlwaysShowAllEntries</key>
								<true/>
								<key>Destination</key>
								<string>Variable</string>
								<key>DestinationVariable</key>
								<string>local_MreUUID</string>
								<key>MacroActionType</key>
								<string>PromptWithList</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>NotifyOnTimeOut</key>
								<false/>
								<key>PromptUID</key>
								<string>39B684F1-04AD-4E42-9FE8-10A20137410D</string>
								<key>Sort</key>
								<false/>
								<key>Source</key>
								<string>Variable</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TimeOutPeriod</key>
								<real>356400</real>
								<key>Variable</key>
								<string>local_MrePwlList</string>
								<key>WindowTitle</key>
								<string>Select to 𝗘𝗗𝗜𝗧 (⇧ to 𝗥𝗨𝗡)</string>
								<key>WindowWidth</key>
								<string>Automatic</string>
							</dict>
							<dict>
								<key>ActionName</key>
								<string>Check if macro should be restarted toggling local_PatternsToIgnore</string>
								<key>ActionUID</key>
								<integer>16147655</integer>
								<key>Actions</key>
								<array>
									<dict>
										<key>ActionUID</key>
										<integer>16149211</integer>
										<key>MacroActionType</key>
										<string>SetVariableToText</string>
										<key>Text</key>
										<string>%PromptWithListModifiers%</string>
										<key>Variable</key>
										<string>local_PromptWithListModifiers</string>
									</dict>
									<dict>
										<key>ActionColor</key>
										<string>Green</string>
										<key>ActionUID</key>
										<integer>16146300</integer>
										<key>Conditions</key>
										<dict>
											<key>ConditionList</key>
											<array>
												<dict>
													<key>ConditionType</key>
													<string>Variable</string>
													<key>Variable</key>
													<string>local_PromptWithListModifiers</string>
													<key>VariableConditionType</key>
													<string>Contains</string>
													<key>VariableValue</key>
													<string>⌥</string>
												</dict>
											</array>
											<key>ConditionListMatch</key>
											<string>All</string>
										</dict>
										<key>ElseActions</key>
										<array>
											<dict>
												<key>ActionName</key>
												<string>Intentionally Blank</string>
												<key>ActionUID</key>
												<integer>16146453</integer>
												<key>IsDisclosed</key>
												<false/>
												<key>MacroActionType</key>
												<string>Comment</string>
												<key>StyledText</key>
												<data>
								e1xydGYxXGFu
								c2lcYW5zaWNw
								ZzEyNTJcY29j
								b2FydGYyNzU5
								Clxjb2NvYXRl
								eHRzY2FsaW5n
								MFxjb2NvYXBs
								YXRmb3JtMHtc
								Zm9udHRibH0K
								e1xjb2xvcnRi
								bDtccmVkMjU1
								XGdyZWVuMjU1
								XGJsdWUyNTU7
								fQp7XCpcZXhw
								YW5kZWRjb2xv
								cnRibDs7fQp9
															</data>
												<key>Title</key>
												<string></string>
											</dict>
										</array>
										<key>MacroActionType</key>
										<string>IfThenElse</string>
										<key>ThenActions</key>
										<array>
											<dict>
												<key>ActionUID</key>
												<integer>16146417</integer>
												<key>MacroActionType</key>
												<string>SetVariableToText</string>
												<key>Text</key>
												<string>%ExecutingThisMacroUUID%</string>
												<key>Variable</key>
												<string>local_ExecutingThisMacroUUID</string>
											</dict>
											<dict>
												<key>ActionColor</key>
												<string>Yellow</string>
												<key>ActionUID</key>
												<integer>16148639</integer>
												<key>Conditions</key>
												<dict>
													<key>ConditionList</key>
													<array>
														<dict>
															<key>ConditionType</key>
															<string>Variable</string>
															<key>Variable</key>
															<string>local_IgnorePatterns</string>
															<key>VariableConditionType</key>
															<string>Is</string>
															<key>VariableValue</key>
															<string>1</string>
														</dict>
													</array>
													<key>ConditionListMatch</key>
													<string>All</string>
												</dict>
												<key>ElseActions</key>
												<array>
													<dict>
														<key>ActionUID</key>
														<integer>16148677</integer>
														<key>MacroActionType</key>
														<string>SetVariableToText</string>
														<key>Text</key>
														<string>+%Variable%local_SpecifiedNoRecentlyExecutedMacros%</string>
														<key>Variable</key>
														<string>local_WithParameter</string>
													</dict>
												</array>
												<key>MacroActionType</key>
												<string>IfThenElse</string>
												<key>ThenActions</key>
												<array>
													<dict>
														<key>ActionUID</key>
														<integer>16148658</integer>
														<key>MacroActionType</key>
														<string>SetVariableToText</string>
														<key>Text</key>
														<string>%Variable%local_SpecifiedNoRecentlyExecutedMacros%</string>
														<key>Variable</key>
														<string>local_WithParameter</string>
													</dict>
												</array>
												<key>TimeOutAbortsMacro</key>
												<true/>
											</dict>
											<dict>
												<key>ActionUID</key>
												<integer>16148690</integer>
												<key>DisplayKind</key>
												<string>None</string>
												<key>HonourFailureSettings</key>
												<true/>
												<key>IncludeStdErr</key>
												<false/>
												<key>IncludedVariables</key>
												<array>
													<string>9999</string>
												</array>
												<key>MacroActionType</key>
												<string>ExecuteAppleScript</string>
												<key>NotifyOnFailure</key>
												<false/>
												<key>NotifyOnTimeOut</key>
												<false/>
												<key>Path</key>
												<string></string>
												<key>Text</key>
												<string>### Requires Keyboard Maestro 8.0.3+ ###set kmInst to system attribute "KMINSTANCE"tell application "Keyboard Maestro Engine"	set kmExecutingThisMacroUUID to getvariable "local_ExecutingThisMacroUUID" instance kmInst	set kmWithParameter to getvariable "local_WithParameter" instance kmInstend telltell application "Keyboard Maestro Engine"	do script kmExecutingThisMacroUUID with parameter kmWithParameterend tell</string>
												<key>TimeOutAbortsMacro</key>
												<true/>
												<key>TrimResults</key>
												<true/>
												<key>TrimResultsNew</key>
												<true/>
												<key>UseText</key>
												<true/>
											</dict>
											<dict>
												<key>Action</key>
												<string>CancelThisMacro</string>
												<key>ActionUID</key>
												<integer>16146322</integer>
												<key>IsDisclosed</key>
												<false/>
												<key>MacroActionType</key>
												<string>Cancel</string>
											</dict>
										</array>
										<key>TimeOutAbortsMacro</key>
										<true/>
									</dict>
								</array>
								<key>IsDisclosed</key>
								<false/>
								<key>MacroActionType</key>
								<string>Group</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
						</array>
						<key>ConditionType</key>
						<string>GreaterThan</string>
						<key>TestValue</key>
						<string>1</string>
					</dict>
					<dict>
						<key>Actions</key>
						<array>
							<dict>
								<key>Action</key>
								<string>DisplayWindow</string>
								<key>ActionUID</key>
								<integer>16622249</integer>
								<key>MacroActionType</key>
								<string>InsertText</string>
								<key>StyledText</key>
								<data>
								cnRmZAAAAAAD
								AAAAAgAAAAcA
								AABUWFQucnRm
								AQAAAC7oAQAA
								KwAAAAEAAADg
								AQAAe1xydGYx
								XGFuc2lcYW5z
								aWNwZzEyNTJc
								Y29jb2FydGYy
								NzYxClxjb2Nv
								YXRleHRzY2Fs
								aW5nMFxjb2Nv
								YXBsYXRmb3Jt
								MHtcZm9udHRi
								bFxmMFxmc3dp
								c3NcZmNoYXJz
								ZXQwIEhlbHZl
								dGljYTt9Cntc
								Y29sb3J0Ymw7
								XHJlZDI1NVxn
								cmVlbjI1NVxi
								bHVlMjU1O1xy
								ZWQwXGdyZWVu
								MFxibHVlMDt9
								CntcKlxleHBh
								bmRlZGNvbG9y
								dGJsOztcY3Nz
								cmdiXGMwXGMw
								XGMwXGM4NDcw
								NlxjbmFtZSBj
								b250cm9sVGV4
								dENvbG9yO30K
								XHBhcmRcdHg1
								NjBcdHgxMTIw
								XHR4MTY4MFx0
								eDIyNDBcdHgy
								ODAwXHR4MzM2
								MFx0eDM5MjBc
								dHg0NDgwXHR4
								NTA0MFx0eDU2
								MDBcdHg2MTYw
								XHR4NjcyMFxw
								YXJkaXJuYXR1
								cmFsXHBhcnRp
								Z2h0ZW5mYWN0
								b3IwCgpcZjBc
								ZnMyNiBcY2Yy
								IFNvbWV0aGlu
								ZyB3ZW50IHdy
								b25nLiAnJUV4
								ZWN1dGluZ1Ro
								aXNNYWNybyUn
								IHdhcyB1bmFi
								bGUgdG8gZGV0
								ZXJtaW5lIHRo
								ZSBtb3N0IHJl
								Y2VudGx5IGV4
								ZWN1dGVkIG1h
								Y3Jvcy59AQAA
								ACMAAAABAAAA
								BwAAAFRYVC5y
								dGYQAAAAmAXX
								ZrYBAAAAAAAA
								AAAAAA==
											</data>
								<key>Text</key>
								<string>Something went wrong. '%ExecutingThisMacro%' was unable to determine the most recently executed macros.</string>
							</dict>
						</array>
						<key>ConditionType</key>
						<string>Otherwise</string>
						<key>TestValue</key>
						<string></string>
					</dict>
				</array>
				<key>MacroActionType</key>
				<string>Switch</string>
				<key>Source</key>
				<string>Variable</string>
				<key>Variable</key>
				<string>local_SpecifiedNoRecentlyExecutedMacros</string>
			</dict>
			<dict>
				<key>ActionColor</key>
				<string>Yellow</string>
				<key>ActionUID</key>
				<integer>16622250</integer>
				<key>Conditions</key>
				<dict>
					<key>ConditionList</key>
					<array>
						<dict>
							<key>ConditionType</key>
							<string>Modifiers</string>
							<key>ModifiersDown</key>
							<integer>0</integer>
							<key>ModifiersUp</key>
							<integer>512</integer>
						</dict>
					</array>
					<key>ConditionListMatch</key>
					<string>All</string>
				</dict>
				<key>ElseActions</key>
				<array>
					<dict>
						<key>ActionName</key>
						<string>Execute the macro</string>
						<key>ActionUID</key>
						<integer>16622252</integer>
						<key>Actions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>16622253</integer>
								<key>DisplayKind</key>
								<string>None</string>
								<key>HonourFailureSettings</key>
								<true/>
								<key>IncludeStdErr</key>
								<false/>
								<key>IncludedVariables</key>
								<array>
									<string>9999</string>
								</array>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>set kmInst to system attribute "KMINSTANCE"tell application "Keyboard Maestro Engine"	set kmUUID to getvariable "local_MreUUID" instance kmInstend telltell application "Keyboard Maestro Engine"	do script kmUUIDend tell</string>
								<key>TimeOutAbortsMacro</key>
								<false/>
								<key>TimeOutPeriod</key>
								<real>1</real>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Group</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>MacroActionType</key>
				<string>IfThenElse</string>
				<key>ThenActions</key>
				<array>
					<dict>
						<key>ActionName</key>
						<string>Open the macro in the Keyboard Maestro editor</string>
						<key>ActionUID</key>
						<integer>16622251</integer>
						<key>Actions</key>
						<array>
							<dict>
								<key>ActionName</key>
								<string>Go to Macro</string>
								<key>ActionUID</key>
								<integer>16149611</integer>
								<key>IsDefaultApplication</key>
								<true/>
								<key>MacroActionType</key>
								<string>OpenURL</string>
								<key>NotifyOnTimeOut</key>
								<true/>
								<key>StopOnFailure</key>
								<true/>
								<key>TimeOutAbortsMacro</key>
								<false/>
								<key>TimeOutPeriod</key>
								<real>2</real>
								<key>URL</key>
								<string>keyboardmaestro://m=%Variable%local_MreUUID%</string>
							</dict>
						</array>
						<key>IsDisclosed</key>
						<false/>
						<key>MacroActionType</key>
						<string>Group</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>TimeOutAbortsMacro</key>
				<true/>
			</dict>
		</array>
		<key>CreationDate</key>
		<real>747001941.13591897</real>
		<key>CustomIconData</key>
		<string>KMEP-GenericApplication-/Applications/Keyboard Maestro.app</string>
		<key>ModificationDate</key>
		<real>759494420.310341</real>
		<key>Name</key>
		<string>Edit a Recently Executed Macro</string>
		<key>Triggers</key>
		<array>
			<dict>
				<key>FireType</key>
				<string>Pressed</string>
				<key>KeyCode</key>
				<integer>14</integer>
				<key>MacroTriggerType</key>
				<string>HotKey</string>
				<key>Modifiers</key>
				<integer>6400</integer>
			</dict>
			<dict>
				<key>FireType</key>
				<string>Pressed</string>
				<key>KeyCode</key>
				<integer>14</integer>
				<key>MacroTriggerType</key>
				<string>HotKey</string>
				<key>Modifiers</key>
				<integer>6912</integer>
			</dict>
		</array>
		<key>UID</key>
		<string>DD3ABC8A-A382-4D90-B47C-E779E617E347</string>
	</dict>
</array>
</plist>
